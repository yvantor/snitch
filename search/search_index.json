{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Snitch System Generator","text":"<p>The Snitch project is an open-source RISC-V hardware research project of ETH Zurich and University of Bologna targeting highest possible energy-efficiency. The system is designed around a versatile and small integer core, which we call Snitch. The system is ought to be highly parameterizable and suitable for many use-cases, ranging from small, control-only cores, to large many-core system made for pure number crunching in the HPC domain.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>See our dedicated getting started guide.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>The documentation is built from the latest master and hosted at github pages: https://pulp-platform.github.io/snitch.</p>"},{"location":"#about-this-repository","title":"About this Repository","text":"<p>This repository is developed as a monorepo, external dependencies are \"vendored-in\" and checked in. Keeping it a monolithic repository helps to keep the hardware dependencies under control and enables precise snapshotting (invaluable when you are taping-out chips).</p>"},{"location":"#licensing","title":"Licensing","text":"<p>Snitch is being made available under permissive open source licenses. See the <code>README.md</code> for a more detailed break-down.</p>"},{"location":"publications/","title":"Publications","text":"<p>The Snitch architecture is built on research that is described in the following publications.</p>"},{"location":"publications/#2021","title":"2021","text":"<p>F. Zaruba, F. Schuiki, T. Hoefler and L. Benini, \"Snitch: A Tiny Pseudo Dual-Issue Processor for Area and Energy Efficient Execution of Floating-Point Intensive Workloads,\" in IEEE Transactions on Computers, vol. 70, no. 11, pp. 1845-1860, 1 Nov. 2021, doi: 10.1109/TC.2020.3027900.</p> <p>F. Schuiki, F. Zaruba, T. Hoefler and L. Benini, \"Stream Semantic Registers: A Lightweight RISC-V ISA Extension Achieving Full Compute Utilization in Single-Issue Cores,\" in IEEE Transactions on Computers, vol. 70, no. 2, pp. 212-227, 1 Feb. 2021, doi: 10.1109/TC.2020.2987314.</p> <p>S. Riedel, F. Schuiki, P. Scheffler, F. Zaruba and L. Benini, \"Banshee: A Fast LLVM-Based RISC-V Binary Translator,\" 2021 IEEE/ACM International Conference On Computer Aided Design (ICCAD), 2021, pp. 1-9, doi: 10.1109/ICCAD51958.2021.9643546.</p> <p>F. Zaruba, F. Schuiki and L. Benini, \"Manticore: A 4096-Core RISC-V Chiplet Architecture for Ultraefficient Floating-Point Computing,\" in IEEE Micro, vol. 41, no. 2, pp. 36-42, 1 March-April 2021, doi: 10.1109/MM.2020.3045564.</p> <p>P. Scheffler, F. Zaruba, F. Schuiki, T. Hoefler and L. Benini, \"Indirection Stream Semantic Register Architecture for Efficient Sparse-Dense Linear Algebra,\" 2021 Design, Automation &amp; Test in Europe Conference &amp; Exhibition (DATE), 2021, pp. 1787-1792, doi: 10.23919/DATE51398.2021.9474230.</p>"},{"location":"rm/custom_instructions/","title":"Instruction Set Extensions","text":"<p>For efficient execution we have defined a number of custom instructions. This document gives a brief overview of their encoding.</p>"},{"location":"rm/custom_instructions/#xssr-extension-for-stream-semantic-registers","title":"\"Xssr\" Extension for Stream Semantic Registers","text":"<p>The \"Xssr\" extension assigns stream semantics to a handful of the processor's registers. If enabled, reading and writing these registers translates into corresponding memory reads and writes. The addresses for these memory accesses are derived from a hardware address generator.</p>"},{"location":"rm/custom_instructions/#configuration-register-operations","title":"Configuration Register Operations","text":"imm[11:5] imm[4:0] rs1 funct3 rd opcode operation 7 5 5 3 5 7 reg ssr 00000 001 dest OP-CUSTOM1 SCFGRI reg ssr value 010 00000 OP-CUSTOM1 SCFGWI <p>SCFGRI and SCFGWI read and write a value from or to an SSR configuration register. The immediate argument reg specifies the index of the register, ssr specifies which SSR should be accessed. SCFGRI places the read value in rd. SCFGWI moves the value in rs1 to the selected SSR configuration register.</p> funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000000 addr 00001 001 dest OP-CUSTOM1 SCFGR 0000000 addr value 010 00001 OP-CUSTOM1 SCFGW <p>SCFGR and SCFGW read and write a value from or to an SSR configuration register. The value in register rs2 specifies specifies the address of the register as follows: bits 4 to 0 correspond to ssr and indicate the SSR to be used, and the bits 11 to 5 correspond to reg and indicate the index of the register. SCFGR places the read value in rd. SCFGW moves the value in rs1 to the selected SSR configuration register.</p>"},{"location":"rm/custom_instructions/#xfrep-extension-for-floating-point-repetition","title":"\"Xfrep\" Extension for Floating-Point Repetition","text":"<p>With the \"Xfrep\" extension we can automatically repeat a sequence of instructions without the need to manage a loop in software, issuing the instructions from Snitch's FPU sequencer buffer. This has a number of benefits, including alleviating the pressure on the I$ bandwidth. Furthermore, after the first iteration the instructions can be fetched from the FPU sequencer, which has a lower energy access cost than the L1 I$.</p> <p>The FREP instruction has the following signature:</p> imm1 rs1 imm2 imm3 is_outer opcode operation 12 5 3 4 1 7 max_inst max_rpt stagger_max stagger_mask 0 OP-CUSTOM1 FREP.I max_inst max_rpt stagger_max stagger_mask 1 OP-CUSTOM1 FREP.O <p>FREP.I and FREP.O repeat the max_inst instructions following the FREP instruction for max_rpt + 1 times. The FREP.I instruction (I stands for inner) repeats every instruction the specified number of times and moves on to executing and repeating the next. The FREP.O instruction (O stands for outer) repeats the whole sequence of instructions max_rpt + 1 times. Register staggering can be enabled and configured via the stagger_mask and stagger_max immediates. A detailed explanation of their use can be found in the Snitch paper.</p> <p>The assembly instruction signature follows:</p> <pre><code>frep.i   rs1, imm1, imm2, imm3\n</code></pre>"},{"location":"rm/custom_instructions/#xdma-extension-for-asynchronous-data-movement","title":"\"Xdma\" Extension for Asynchronous Data Movement","text":"<p>The \"Xdma\" extension provides custom instructions to control an asynchronous data movement engine tightly coupled to the processor core.</p>"},{"location":"rm/custom_instructions/#address-operations","title":"Address Operations","text":"funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000000 ptrhi ptrlo 000 00000 OP-CUSTOM1 DMSRC 0000001 ptrhi ptrlo 000 00000 OP-CUSTOM1 DMDST <p>DMSRC and DMDST specify the source and destination address pointers for the next data movement operation. The arguments ptrhi and ptrlo are truncated to 32-bit values, and concatenated to form a 64-bit value, and truncated to PLEN.</p>"},{"location":"rm/custom_instructions/#stride-operations","title":"Stride Operations","text":"funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000110 dststrd srcstrd 000 00000 OP-CUSTOM1 DMSTR 0000111 00000 reps 000 00000 OP-CUSTOM1 DMREP <p>DMSTRD configures the stride for two-dimensional transfers. The value in registers rs1 and rs2 are sign-extended to PLEN and configured as the source and destination stride, respectively. After each transfer of the innermost dimension, the strides are added to the respective address pointers.</p> <p>DMREPS configures the value in register rs1 as the size of the outer dimension for two-dimensional transfers.</p>"},{"location":"rm/custom_instructions/#control-operations","title":"Control Operations","text":"funct7 rs2 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000011 config size 000 dest OP-CUSTOM1 DMCPY 0000101 status 00000 000 dest OP-CUSTOM1 DMSTAT funct7 imm5 rs1 funct3 rd opcode operation 7 5 5 3 5 7 0000010 config size 000 dest OP-CUSTOM1 DMCPYI 0000100 status 00000 000 dest OP-CUSTOM1 DMSTATI <p>DMCPY and DMCPYI initiate an asynchronous data movement with the parameters configured by the previous DM instructions. A transfer id is placed in register rd, which is necessary to later check for transfer completion. size contains the number of consecutive bytes to transfer. For multi-dimensional transfers this is the size of the innermost dimension. config* determines the following parameters of the transfer:</p> Bits Value Description config[0] decouple_rw Decouple the handshakes of the read and write channels config[1] enable_2d Enable two-dimensional transfer <p>DMSTAT and DMSTATI place the selected status flag of the DMA into register rd. The following status flags are supported:</p> status Name Description 0 completed_id Id of last completed transfer 1 next_id Id allocated to the next transfer 2 busy At least one transfer in progress 3 would_block Next DMCPY[I] blocks (transfer queue full) <p>The DMSTATI instruction can be used to implement a blocking wait for the completion of a specific DMA transfer:</p> <pre><code>    dmcpyi a0, ...\n1:  dmstati t0, 0\n    bltu a0, t0, 1b\n</code></pre> <p>Similarly, waiting for the completion of all DMA transfers:</p> <pre><code>1:  dmstati t0, 2\n    bnez t0, zero, 1b\n</code></pre>"},{"location":"rm/solder/","title":"Solder","text":"<p>Solder generates (complex) interconnects, their respective address maps, and SystemVerilog description from a simple, imperative Python description. The user specifies the topology and high-level address map of the system using Solder's API. Solder will take of generating the underlying graph representations, propagating address maps, calculating routes and performing various sanity checks. Finally, the hardware description is generated.</p>"},{"location":"rm/solder/#graph-representations","title":"Graph Representations","text":"<p>Under the hood Solder maintains several different graph representations:</p> Hardware instance graph This representation contains all hardware blocks which need to be instantiated. This includes crossbars, converter modules and peripherals. Address Map Graph Provides an abstract view of the memory map. Components which do not change the topology (router nodes) or routing decisions (filters and leafs) are stripped from the representation."},{"location":"rm/reqrsp_interface/","title":"Reqrsp Interface","text":"<p>The <code>reqrsp_interface</code> (request and response) is a custom interface based on common principles found in other interconnects such as AXI or TileLink. It has only two channels (request and response) which are handshaked according to the AMBA standard:</p> <ul> <li>The initiator asserts <code>valid</code>. The assertion of <code>valid</code> must not depend on   <code>ready</code>.</li> <li>Once <code>valid</code> has been asserted all data must remain stable.</li> <li>The receiver asserts <code>ready</code> whenever it is ready to receive the transaction.</li> <li>When both <code>valid</code> and <code>ready</code> are high the transaction is successful.</li> </ul> <p>The bus is little endian.</p>"},{"location":"rm/reqrsp_interface/#channels","title":"Channels","text":"<p>The two channels are:</p> <ul> <li>Request (<code>q</code>): The initiator requests a memory transaction. Supported are   read, write, atomic memory operations, load-linked and store-conditional   pairs.</li> <li>Response (<code>p</code>): Every transaction which was requested ultimately returns a   response. For reads the response channel returns the read response, for writes   the response acknowledges that the data is committed and subsequent reads will   return the last written value, for atomic operations the data before the   memory operations has happened is being returned. For load-linked the the read   response is returned, for store-conditionals the the success code is returned.   Additionally, the response channel carries error information.</li> </ul>"},{"location":"rm/reqrsp_interface/#sizes","title":"Sizes","text":"<p>Data bus size of 32, 64, 128, 256, 512, 1024-bit are supported. Atomic memory operations are 32 bit or 64 bit for bus sizes greater than 32.</p>"},{"location":"rm/reqrsp_interface/#data-alignment","title":"Data Alignment","text":"<p>The data is always bus-aligned. similar to AXI. For reads the address and size fields indicate which data is valid. Similarly for writes the address and size fields in addition to the write strobe field indicate valid bytes (8 bit of data). Atomics and LR/SCs addresses are always naturally aligned to their size.</p>"},{"location":"rm/reqrsp_interface/#ordering","title":"Ordering","text":"<p>Transactions on the request channel are always strongly ordered (as if they would all use the same ID in AXI terms). Reads and writes are ordered with respect to each other (that needs to be maintained when translating to AXI).</p>"},{"location":"rm/reqrsp_interface/#atomic-memory-operations","title":"Atomic Memory Operations","text":"<p>Atomic memory operations supported are:</p> Operation Description <code>Swap</code> Swaps the values. <code>Add</code> Signed addition. <code>And</code>, <code>Or</code>, <code>Xor</code> Bitwise <code>and</code>, <code>or</code>, and <code>xor</code> operation. <code>Max</code>, <code>Maxu</code> Signed and unsigned maximum operation. <code>Min</code>, <code>Minu</code> Signed and unsigned minimum operation. <code>Lr</code> Places a reservation on the given memory address <code>Sc</code> Conditional store, returns <code>0</code> on <code>q.data</code> if successful, <code>1</code> otherwise. <p>The operation reads the value at the given address and returns the read value on the <code>p</code> channel. The same memory location is updated with the data and operation supplied on the <code>q.amo</code> and <code>q.data</code> signals. The <code>q.write</code> signal must be set to <code>1'b0</code>.</p>"},{"location":"rm/reqrsp_interface/#load-reservedstore-conditional","title":"Load-Reserved/Store-conditional","text":"<p>The <code>q.amo</code> field carries the information on whether the transaction encodes an LR/SC.</p> Operation Description Lr Places a reservation on the given memory address Sc Conditional store, returns <code>0</code> on <code>q.data</code> if successful, <code>1</code> otherwise. <p>For <code>Sc</code> and <code>LR</code> the <code>q.write</code> signal must be set to <code>0</code>.</p>"},{"location":"rm/reqrsp_interface/#error","title":"Error","text":"<p>The <code>p</code> channel carries additional error information:</p> <ul> <li><code>0</code>: The access is ok.</li> <li><code>1</code>: The access has encountered an error.</li> </ul>"},{"location":"rm/snitch/","title":"Snitch","text":"<p>Snitch is a single-stage, single-issue, in-order RISC-V core (RV32I or RV32E) tuned for simplicity and minimal area footprint. Furthermore it is highly configurable and can be used in a plethora of different applications.</p> <p>The core has an optional accelerator interface which can be used to control and off-load RISC-V instructions. The load/store interface is a dual-channel interface with a separately handshaked request and response channel. More information can be found here.</p> <p>This folder contains the main Snitch core, incl. L0 translation lookaside buffer (TLB), register file and load store unit (LSU).</p> <p>Info</p> <p>The virtual memory support in Snitch is still in a very early, untested stage so do not expect it to work yet.</p>"},{"location":"rm/snitch/#core-integration","title":"Core Integration","text":"<p>This section covers integration aspects of the core.</p>"},{"location":"rm/snitch/#file-list","title":"File List","text":"<p>We use <code>Bender</code> to generate the file lists for the modules. To get stated with the Snitch core and a file list you can:</p> <ul> <li>In <code>hw/ip/snitch</code>, call <code>bender sources</code> (or <code>bender script flist</code> for a flat   file list).</li> <li>If you also want to use bender for your project you can create a minimal   bender manifest with a path dependency to the Snitch core. For an example   please have a look at <code>hw/system/snitch_cluster/Bender.yml</code>.</li> </ul>"},{"location":"rm/snitch/#parameters","title":"Parameters","text":"Name Type/Range Default Description <code>AddrWidth</code> int 48 Address width of the system. <code>DataWidth</code> int 64 Data width of the data bus. Can either be <code>32</code> or <code>64</code>. <code>acc_req_t</code> type logic Type of accelerator request port. See <code>snitch_pkg.sv</code> for an example. Must be set to a meaningful type. <code>acc_resp_t</code> type logic Type of accelerator response port. See <code>snitch_pkg.sv</code> for an example. Must be set to a meaningful type. <code>dreq_t</code> type logic Type of data request port. See <code>hw/ip/reqrsp_intf</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>drsp_t</code> type logic Type of data response port. See <code>hw/ip/reqrsp_intf</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>pa_t</code> type logic Type of physical address. See <code>hw/ip/snitch_vm</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>l0_pte_t</code> type logic Type of L0 page table entry. See <code>hw/ip/snitch_vm</code> for examples and typedef helper functions. Must be set to a meaningful type. <code>BootAddr</code> int 0x1000 Address where the core starts to fetch for instruction after reset. <code>SnitchPMACfg</code> struct '0 Physical memory attribute configuration. <code>NumIntOutstandingLoads</code> int 0 Number of outstanding loads. This determines the size of the load queue. <code>NumIntOutstandingMem</code> int 0 Number of outstanding memory operations (loads and stores). <code>NumDTLBEntries</code> int 0 Number of TLB entries for the data TLB. <code>NumITLBEntries</code> int 0 Number of TLB entries for the instruction TLB. <code>RVE</code> bit 0 Enable embedded ABI (reduced register ABI). <code>FP_EN</code> bit 0 Enable floating point support (in general). <code>Xdma</code> bit 0 Enable custom DMA extension (changes the decoder of the core). <code>Xssr</code> bit 0 Enable custom SSR extension (changes the decoder of the core). <code>RVF</code> bit 0 Enable single-precision floating point extension (needs <code>FP_EN</code>). <code>RVD</code> bit 0 Enable double-precision floating point extension (needs <code>FP_EN</code>). <code>XF16</code> bit 0 Enable half-precision floating point extension (needs <code>FP_EN</code>). <code>XF16ALT</code> bit 0 Enable brain-float extension (needs <code>FP_EN</code>). <code>XF8</code> bit 0 Enable eight byte floating-point extensions (needs <code>FP_EN</code>). <code>XF8ALT</code> bit 0 Enable alternate eight byte floating-point extensions (needs <code>FP_EN</code>). <code>XFVEC</code> bit 0 Enable vectorized extension (needs <code>FP_EN</code>). <code>XFDOTP</code> bit 0 Enable DOTP operation group (needs <code>FP_EN</code>). <code>FLEN</code> bit 0 Required floating-point length (depends on enabled extension). Determined by the maximum floating-point length (<code>64</code> for double, <code>32</code> for single, etc.)."},{"location":"rm/snitch/#ports","title":"Ports","text":"Signals Width Dir Description clk_i <code>1</code> In Clock. rst_i <code>1</code> In Reset, asynchronous, active-high. hart_id_i <code>32</code> In Id present in <code>mhartid</code>. irq_i <code>3</code> In M-Mode timer, software, and external interrupt. flush_i_valid_o <code>1</code> In Flush the instruction cache (<code>fence.i</code>). Once high wait for <code>flush_i_ready_i</code> is asserted. AXI-style handshake. flush_i_ready_i <code>1</code> In Instruction cache is ready. inst_addr_o <code>AddrWidth</code> Out Instruction address. inst_cacheable_o <code>1</code> Out If asserted high, the instruction should be cached. inst_data_i <code>32</code> In 32-bit RISC-V instruction word. inst_valid_o <code>1</code> Out Instruction request is valid. inst_ready_i <code>1</code> In Instruction word has been consumed. acc_qreq_o <code>bits(acc_req_t)</code> Out Accelerator off-load information. acc_qvalid_o <code>1</code> Out Accelerator off-load request is valid. AXI-style handshake. acc_qready_i <code>1</code> In Request has been accepted. acc_prsp_i <code>bits(acc_resp_t)</code> In Accelerator response information. acc_pvalid_i <code>1</code> In Accelerator response is valid. AXI-style handshake. acc_pready_o <code>1</code> Out Accelerator response has been accepted by the core. data_req_o <code>bits(dreq_t)</code> Out Load/store request. See reqrsp interface. data_rsp_i <code>bits(drsp_t)</code> In Load/store response. See reqrsp interface. wake_up_sync_i <code>1</code> In Deprecated. Tie-low. ptw_valid_o <code>2</code> Out Instruction or data TLB missed. Page table walking request. ptw_ready_i <code>2</code> In Instruction or data miss has been accepted. ptw_va_o <code>2*bits(va_t)</code> Out Instruction or data virtual address requested to be translated. ptw_ppn_o, <code>2*bits(pa_t)</code> Out Instruction or data physical base address. Forwarded from <code>satp</code> register. ptw_pte_i, <code>2*bits(l0_pte_t)</code> In Instruction or data PTE entry in (translated virtual address). ptw_is_4mega_i, <code>2</code> In Instruction or data PTE is a 4 mega page. fpu_rnd_mode_o <code>bits(roundmode_e)</code> Out Side-band signal forwarding the rounding mode from <code>fcsr</code>. fpu_status_i <code>bits(status_t)</code> In Exception status of FPU (can be tied to <code>0</code> if no FPU is used)."},{"location":"rm/snitch/#instantiation-template","title":"Instantiation Template","text":"<pre><code>  snitch #(\n.AddrWidth (),\n.DataWidth (),\n.acc_req_t (),\n.acc_resp_t (),\n.dreq_t (),\n.drsp_t (),\n.pa_t (pa_t,\n.l0_pte_t (),\n.BootAddr (),\n.SnitchPMACfg (),\n.NumIntOutstandingLoads (),\n.NumIntOutstandingMem (),\n.NumDTLBEntries (),\n.NumITLBEntries (),\n.RVE (),\n.FP_EN (),\n.Xdma (),\n.Xssr (),\n.RVF (),\n.RVD (),\n.XF16 (),\n.XF16ALT (),\n.XF8 (),\n.XF8ALT (),\n.XFVEC (),\n.XFDOTP (),\n.FLEN ()\n) i_snitch (\n.clk_i ( ),\n.rst_i (),\n.hart_id_i (),\n.irq_i (),\n.flush_i_valid_o (),\n.flush_i_ready_i (),\n.inst_addr_o (),\n.inst_cacheable_o (),\n.inst_data_i (),\n.inst_valid_o (),\n.inst_ready_i (),\n.acc_qreq_o (),\n.acc_qvalid_o (),\n.acc_qready_i (),\n.acc_prsp_i (),\n.acc_pvalid_i (),\n.acc_pready_o (),\n.data_req_o (),\n.data_rsp_i (),\n.ptw_valid_o (),\n.ptw_ready_i (),\n.ptw_va_o (),\n.ptw_ppn_o (),\n.ptw_pte_i (),\n.ptw_is_4mega_i (),\n.wake_up_sync_i (),\n.fpu_rnd_mode_o (),\n.fpu_status_i ()\n);\n</code></pre>"},{"location":"rm/snitch/#testbench","title":"Testbench","text":"<ul> <li>The L0 TLBs: Random requests are generated. The golden model saves all   requests, if a new request comes in it is either sourced from memory (if it   exists) or re-generated based on constraint randomization. Response from the   DUT are compared to the golden model.</li> </ul>"},{"location":"rm/snitch_cluster/","title":"Snitch Cluster","text":"<p>This ip contains a cluster of Snitch cores, arranged in a specific (but configurable fashion).</p>"},{"location":"rm/snitch_cluster/#memory-map","title":"Memory Map","text":"<p>The memory map of the cluster is determined by the <code>cluster_base_addr_i</code> signal. Depending on the amount of memory the <code>TCDM</code> and <code>Periph</code> regions will be scaled accordingly. The peripheral region will always be the same size as the <code>TCDM</code>.</p> <ul> <li>Let <code>TCDMSize</code> denote the size of the <code>TCDM</code>.</li> <li>Let <code>PeripheralSize</code> denote the size of the cluster peripheral address space.</li> <li>Let <code>TCDMEndAddress = cluster_base_addr_i + TCDMSize</code></li> <li>Let <code>SocEndAddress = TCDMEndAddress + PeripheralSize</code></li> </ul> Range Dest Description [<code>SocEndAddress</code> - ) SoC Routed out of the cluster. Address range depends on available address bits. [<code>TCDMEndAddress</code> - <code>SocEndAddress</code>) Periph Cluster local peripherals. [<code>cluster_base_addr_i</code> - <code>TCDMEndAddress</code>) TCDM Cluster local tightly coupled data memory. [<code>0x0</code> - <code>cluster_base_addr_i</code>) SoC Routed out of the cluster. <p>Info</p> <p>Because the address check on each core's LSU path is quite critical, we rely on a simplified checking scheme were we revert to checking the address against a mask and base combination. This makes the hardware less expensive (and faster) as no complicated adder circuits are needed and a couple of <code>and</code> gates are enough. (In comparison to a full address check where two adders are need)</p> <pre><code>assign match = (addr_base &amp; addr_mask) == (addr_to_check &amp; addr_mask);\n</code></pre> <p>As a consequence the <code>cluster_base_addr_i</code> has to be aligned to the the <code>TCDM</code> size, otherwise this check can't distinguish between routing to the <code>TCDM</code> or <code>SoC</code>/<code>Periph</code>. A static assertion checks that this holds true.</p>"},{"location":"runtime/Classes/","title":"Classes","text":"<ul> <li>struct cnn_t_ </li> <li>struct conv_layer_struct This structure contains all parameters necessary for Convolutional layers. </li> <li>struct gemm_layer_struct This structure contains all parameters necessary for GEMM. </li> <li>struct gemm_result_t </li> <li>struct ident </li> <li>struct kernel_fp32 parameters for single-precision fusedconv kernel </li> <li>struct kernel_fp64 parameters for double-precision fusedconv kernel </li> <li>struct network_benchmark_t_ </li> <li>struct network_fp16_t_ </li> <li>struct network_fp32_t_ </li> <li>struct network_fp64_t_ </li> <li>struct network_fp8_t_ </li> <li>struct network_single_cluster_t_ </li> <li>struct network_t_ This structure contains all parameters necessary for building a simple neural netowork. </li> <li>struct omp_prof_t </li> <li>struct omp_t </li> <li>struct omp_team_t </li> <li>union perf_reg32_t </li> <li>struct perf_reg_t </li> <li>struct snrt_allocator </li> <li>struct snrt_allocator_inst </li> <li>struct snrt_barrier Barrier to use with snrt_barrier. </li> <li>struct snrt_peripherals Peripherals to the Snitch SoC. </li> <li>struct snrt_slice A slice of memory. </li> <li>struct snrt_team </li> <li>struct snrt_team_root </li> <li>union v2s </li> <li>union v4s </li> <li>union v8s </li> </ul> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Classes/structcnn__t__/","title":"cnn_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structcnn__t__/#public-attributes","title":"Public Attributes","text":"Name uint16_t CO uint16_t CI uint16_t H uint16_t W uint16_t K uint16_t M uint16_t padding uint16_t stride double * image double * conv1_weights double * conv1_biases precision_t dtype"},{"location":"runtime/Classes/structcnn__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structcnn__t__/#variable-co","title":"variable CO","text":"<pre><code>uint16_t CO;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-ci","title":"variable CI","text":"<pre><code>uint16_t CI;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-h","title":"variable H","text":"<pre><code>uint16_t H;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-w","title":"variable W","text":"<pre><code>uint16_t W;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-k","title":"variable K","text":"<pre><code>uint16_t K;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-m","title":"variable M","text":"<pre><code>uint16_t M;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-padding","title":"variable padding","text":"<pre><code>uint16_t padding;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-stride","title":"variable stride","text":"<pre><code>uint16_t stride;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-image","title":"variable image","text":"<pre><code>double * image;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-conv1_weights","title":"variable conv1_weights","text":"<pre><code>double * conv1_weights;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-conv1_biases","title":"variable conv1_biases","text":"<pre><code>double * conv1_biases;\n</code></pre>"},{"location":"runtime/Classes/structcnn__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structconv__layer__struct/","title":"conv_layer_struct","text":"<p>This structure contains all parameters necessary for Convolutional layers. </p> <p><code>#include &lt;layer.h&gt;</code></p>"},{"location":"runtime/Classes/structconv__layer__struct/#public-attributes","title":"Public Attributes","text":"Name uint32_t CO uint32_t CI uint32_t IH uint32_t IW uint32_t OH uint32_t OW uint32_t FH uint32_t FW uint32_t pad double * ifmap double * weights double * ofmap uint32_t TILE_CI uint32_t cluster2cluster uint32_t im2col double * gamma double * beta precision_t dtype"},{"location":"runtime/Classes/structconv__layer__struct/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structconv__layer__struct/#variable-co","title":"variable CO","text":"<pre><code>uint32_t CO;\n</code></pre> <p>Number of output channels </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ci","title":"variable CI","text":"<pre><code>uint32_t CI;\n</code></pre> <p>Number of input channels </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ih","title":"variable IH","text":"<pre><code>uint32_t IH;\n</code></pre> <p>Height of input feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-iw","title":"variable IW","text":"<pre><code>uint32_t IW;\n</code></pre> <p>Width of input feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-oh","title":"variable OH","text":"<pre><code>uint32_t OH;\n</code></pre> <p>Height of output feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ow","title":"variable OW","text":"<pre><code>uint32_t OW;\n</code></pre> <p>Width of output feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-fh","title":"variable FH","text":"<pre><code>uint32_t FH;\n</code></pre> <p>Height of filter </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-fw","title":"variable FW","text":"<pre><code>uint32_t FW;\n</code></pre> <p>Width of filter </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-pad","title":"variable pad","text":"<pre><code>uint32_t pad;\n</code></pre> <p>Padding on all sides </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ifmap","title":"variable ifmap","text":"<pre><code>double * ifmap;\n</code></pre> <p>Pointer to input feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-weights","title":"variable weights","text":"<pre><code>double * weights;\n</code></pre> <p>Pointer to weights </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-ofmap","title":"variable ofmap","text":"<pre><code>double * ofmap;\n</code></pre> <p>Pointer to output feature map </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-tile_ci","title":"variable TILE_CI","text":"<pre><code>uint32_t TILE_CI;\n</code></pre> <p>Tiling factor of input channel </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-cluster2cluster","title":"variable cluster2cluster","text":"<pre><code>uint32_t cluster2cluster;\n</code></pre> <p>Flag for enabling cluster 2 cluster communication </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-im2col","title":"variable im2col","text":"<pre><code>uint32_t im2col;\n</code></pre> <p>Flag for enabling im2col + GEMM </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-gamma","title":"variable gamma","text":"<pre><code>double * gamma;\n</code></pre> <p>Pointer to gamma for BatchNorm </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-beta","title":"variable beta","text":"<pre><code>double * beta;\n</code></pre> <p>Pointer to beta for BatchNorm </p>"},{"location":"runtime/Classes/structconv__layer__struct/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structgemm__layer__struct/","title":"gemm_layer_struct","text":"<p>This structure contains all parameters necessary for GEMM. </p> <p><code>#include &lt;layer.h&gt;</code></p>"},{"location":"runtime/Classes/structgemm__layer__struct/#public-attributes","title":"Public Attributes","text":"Name uint32_t M uint32_t M_p uint32_t N uint32_t K uint32_t TA uint32_t TB uint32_t TILE_M uint32_t TILE_N uint32_t TILE_K double * A double * B double * C uint32_t ALPHA precision_t dtype uint32_t expand"},{"location":"runtime/Classes/structgemm__layer__struct/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structgemm__layer__struct/#variable-m","title":"variable M","text":"<pre><code>uint32_t M;\n</code></pre> <p>Dimension of matrix product MxK * KxN </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-m_p","title":"variable M_p","text":"<pre><code>uint32_t M_p;\n</code></pre> <p>M divided by number of compute cores </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-n","title":"variable N","text":"<pre><code>uint32_t N;\n</code></pre> <p>Dimension of matrix product MxK * KxN </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-k","title":"variable K","text":"<pre><code>uint32_t K;\n</code></pre> <p>Dimension of matrix product MxK * KxN </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-ta","title":"variable TA","text":"<pre><code>uint32_t TA;\n</code></pre> <p>Transpose matrix A </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tb","title":"variable TB","text":"<pre><code>uint32_t TB;\n</code></pre> <p>Transpose matrix B </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tile_m","title":"variable TILE_M","text":"<pre><code>uint32_t TILE_M;\n</code></pre> <p>Tile factor across M dimension </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tile_n","title":"variable TILE_N","text":"<pre><code>uint32_t TILE_N;\n</code></pre> <p>Tile factor across N dimension </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-tile_k","title":"variable TILE_K","text":"<pre><code>uint32_t TILE_K;\n</code></pre> <p>Tile factor across K dimension </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-a","title":"variable A","text":"<pre><code>double * A;\n</code></pre> <p>Pointer to matrix A </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-b","title":"variable B","text":"<pre><code>double * B;\n</code></pre> <p>Pointer to matrix B </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-c","title":"variable C","text":"<pre><code>double * C;\n</code></pre> <p>Pointer to matrix C </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-alpha","title":"variable ALPHA","text":"<pre><code>uint32_t ALPHA;\n</code></pre> <p>constant factor: A * B + ALPHA * C </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Precision of GEMM</p> <p>Precision of Convolution layer </p>"},{"location":"runtime/Classes/structgemm__layer__struct/#variable-expand","title":"variable expand","text":"<pre><code>uint32_t expand;\n</code></pre> <p>Use expanding DOTP instructions </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structgemm__result__t/","title":"gemm_result_t","text":"<p><code>#include &lt;matmul.h&gt;</code></p>"},{"location":"runtime/Classes/structgemm__result__t/#public-attributes","title":"Public Attributes","text":"Name size_t errors size_t cycles_core size_t cycles_total"},{"location":"runtime/Classes/structgemm__result__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structgemm__result__t/#variable-errors","title":"variable errors","text":"<pre><code>size_t errors;\n</code></pre>"},{"location":"runtime/Classes/structgemm__result__t/#variable-cycles_core","title":"variable cycles_core","text":"<pre><code>size_t cycles_core;\n</code></pre>"},{"location":"runtime/Classes/structgemm__result__t/#variable-cycles_total","title":"variable cycles_total","text":"<pre><code>size_t cycles_total;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structident/","title":"ident","text":"<p><code>#include &lt;interface.h&gt;</code></p>"},{"location":"runtime/Classes/structident/#public-attributes","title":"Public Attributes","text":"Name kmp_int32 reserved_1 kmp_int32 flags kmp_int32 reserved_2 kmp_int32 reserved_3 char const  * psource"},{"location":"runtime/Classes/structident/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structident/#variable-reserved_1","title":"variable reserved_1","text":"<pre><code>kmp_int32 reserved_1;\n</code></pre> <p>might be used in Fortran; see above </p>"},{"location":"runtime/Classes/structident/#variable-flags","title":"variable flags","text":"<pre><code>kmp_int32 flags;\n</code></pre> <p>also f.flags; KMP_IDENT_xxx flags; KMP_IDENT_KMPC identifies this union member </p>"},{"location":"runtime/Classes/structident/#variable-reserved_2","title":"variable reserved_2","text":"<pre><code>kmp_int32 reserved_2;\n</code></pre> <p>not really used in Fortran any more; see above </p>"},{"location":"runtime/Classes/structident/#variable-reserved_3","title":"variable reserved_3","text":"<pre><code>kmp_int32 reserved_3;\n</code></pre> <p>source[4] in Fortran, do not use for C++ </p>"},{"location":"runtime/Classes/structident/#variable-psource","title":"variable psource","text":"<pre><code>char const  * psource;\n</code></pre> <p>String describing the source location. The string is composed of semi-colon separated fields which describe the source file, the function and a pair of line numbers that delimit the construct. </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structkernel__fp32/","title":"kernel_fp32","text":"<p>parameters for single-precision fusedconv kernel </p> <p><code>#include &lt;conv2d.h&gt;</code></p>"},{"location":"runtime/Classes/structkernel__fp32/#public-attributes","title":"Public Attributes","text":"Name float * pInBuffer uint16_t dim_in_x uint16_t dim_in_y uint16_t ch_in float * pWeight uint16_t ch_out uint16_t dim_kernel_x uint16_t dim_kernel_y uint16_t padding_y_top uint16_t padding_y_bottom uint16_t padding_x_left uint16_t padding_x_right uint16_t stride_x uint16_t stride_y int8_t * bias uint16_t bias_shift uint16_t out_shift uint16_t out_mult float * pOutBuffer uint16_t dim_out_x uint16_t dim_out_y float * kappa float * lambda uint8_t * pIm2ColBuffer int flag_relu int flag_batch_norm int flag_y_accumulate_start int flag_y_accumulate_end unsigned int * memory_chan"},{"location":"runtime/Classes/structkernel__fp32/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structkernel__fp32/#variable-pinbuffer","title":"variable pInBuffer","text":"<pre><code>float * pInBuffer;\n</code></pre> <p>pointer to the input feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_in_x","title":"variable dim_in_x","text":"<pre><code>uint16_t dim_in_x;\n</code></pre> <p>width of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_in_y","title":"variable dim_in_y","text":"<pre><code>uint16_t dim_in_y;\n</code></pre> <p>height of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-ch_in","title":"variable ch_in","text":"<pre><code>uint16_t ch_in;\n</code></pre> <p>number of input channels </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-pweight","title":"variable pWeight","text":"<pre><code>float * pWeight;\n</code></pre> <p>pointer to weights </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-ch_out","title":"variable ch_out","text":"<pre><code>uint16_t ch_out;\n</code></pre> <p>number of output channels </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_kernel_x","title":"variable dim_kernel_x","text":"<pre><code>uint16_t dim_kernel_x;\n</code></pre> <p>width of kernel </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_kernel_y","title":"variable dim_kernel_y","text":"<pre><code>uint16_t dim_kernel_y;\n</code></pre> <p>height of kernel </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_y_top","title":"variable padding_y_top","text":"<pre><code>uint16_t padding_y_top;\n</code></pre> <p>number of pixels padded on the top </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_y_bottom","title":"variable padding_y_bottom","text":"<pre><code>uint16_t padding_y_bottom;\n</code></pre> <p>number of pixels padded on the bottom </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_x_left","title":"variable padding_x_left","text":"<pre><code>uint16_t padding_x_left;\n</code></pre> <p>number of pixels padded on the left </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-padding_x_right","title":"variable padding_x_right","text":"<pre><code>uint16_t padding_x_right;\n</code></pre> <p>number of pixels padded on the right </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-stride_x","title":"variable stride_x","text":"<pre><code>uint16_t stride_x;\n</code></pre> <p>stride in x direction </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-stride_y","title":"variable stride_y","text":"<pre><code>uint16_t stride_y;\n</code></pre> <p>stride in y direction </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-bias","title":"variable bias","text":"<pre><code>int8_t * bias;\n</code></pre> <p>bias of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-bias_shift","title":"variable bias_shift","text":"<pre><code>uint16_t bias_shift;\n</code></pre> <p>bias shift of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-out_shift","title":"variable out_shift","text":"<pre><code>uint16_t out_shift;\n</code></pre> <p>shift factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-out_mult","title":"variable out_mult","text":"<pre><code>uint16_t out_mult;\n</code></pre> <p>mult factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-poutbuffer","title":"variable pOutBuffer","text":"<pre><code>float * pOutBuffer;\n</code></pre> <p>pointer to output feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_out_x","title":"variable dim_out_x","text":"<pre><code>uint16_t dim_out_x;\n</code></pre> <p>width of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-dim_out_y","title":"variable dim_out_y","text":"<pre><code>uint16_t dim_out_y;\n</code></pre> <p>height of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-kappa","title":"variable kappa","text":"<pre><code>float * kappa;\n</code></pre> <p>multiplication factor for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-lambda","title":"variable lambda","text":"<pre><code>float * lambda;\n</code></pre>"},{"location":"runtime/Classes/structkernel__fp32/#variable-pim2colbuffer","title":"variable pIm2ColBuffer","text":"<pre><code>uint8_t * pIm2ColBuffer;\n</code></pre> <p>pointer to im2col Buffer (not used) bias for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_relu","title":"variable flag_relu","text":"<pre><code>int flag_relu;\n</code></pre> <p>RELU activation flag </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_batch_norm","title":"variable flag_batch_norm","text":"<pre><code>int flag_batch_norm;\n</code></pre> <p>BatchNorm flag </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_y_accumulate_start","title":"variable flag_y_accumulate_start","text":"<pre><code>int flag_y_accumulate_start;\n</code></pre> <p>indicates that output feature map is initizialized with zeros </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-flag_y_accumulate_end","title":"variable flag_y_accumulate_end","text":"<pre><code>int flag_y_accumulate_end;\n</code></pre> <p>indicates that BN, RELU can be performed </p>"},{"location":"runtime/Classes/structkernel__fp32/#variable-memory_chan","title":"variable memory_chan","text":"<pre><code>unsigned int * memory_chan;\n</code></pre> <p>Not used </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structkernel__fp64/","title":"kernel_fp64","text":"<p>parameters for double-precision fusedconv kernel </p> <p><code>#include &lt;conv2d.h&gt;</code></p>"},{"location":"runtime/Classes/structkernel__fp64/#public-attributes","title":"Public Attributes","text":"Name double * pInBuffer uint16_t dim_in_x uint16_t dim_in_y uint16_t ch_in double * pWeight uint16_t ch_out uint16_t dim_kernel_x uint16_t dim_kernel_y uint16_t padding_y_top uint16_t padding_y_bottom uint16_t padding_x_left uint16_t padding_x_right uint16_t stride_x uint16_t stride_y int8_t * bias uint16_t bias_shift uint16_t out_shift uint16_t out_mult double * pOutBuffer uint16_t dim_out_x uint16_t dim_out_y double * kappa double * lambda uint8_t * pIm2ColBuffer int flag_relu int flag_batch_norm int flag_y_accumulate_start int flag_y_accumulate_end unsigned int * memory_chan"},{"location":"runtime/Classes/structkernel__fp64/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structkernel__fp64/#variable-pinbuffer","title":"variable pInBuffer","text":"<pre><code>double * pInBuffer;\n</code></pre> <p>pointer to the input feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_in_x","title":"variable dim_in_x","text":"<pre><code>uint16_t dim_in_x;\n</code></pre> <p>width of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_in_y","title":"variable dim_in_y","text":"<pre><code>uint16_t dim_in_y;\n</code></pre> <p>height of input feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-ch_in","title":"variable ch_in","text":"<pre><code>uint16_t ch_in;\n</code></pre> <p>number of input channels </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-pweight","title":"variable pWeight","text":"<pre><code>double * pWeight;\n</code></pre> <p>pointer to weights </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-ch_out","title":"variable ch_out","text":"<pre><code>uint16_t ch_out;\n</code></pre> <p>number of output channels </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_kernel_x","title":"variable dim_kernel_x","text":"<pre><code>uint16_t dim_kernel_x;\n</code></pre> <p>width of kernel </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_kernel_y","title":"variable dim_kernel_y","text":"<pre><code>uint16_t dim_kernel_y;\n</code></pre> <p>height of kernel </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_y_top","title":"variable padding_y_top","text":"<pre><code>uint16_t padding_y_top;\n</code></pre> <p>number of pixels padded on the top </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_y_bottom","title":"variable padding_y_bottom","text":"<pre><code>uint16_t padding_y_bottom;\n</code></pre> <p>number of pixels padded on the bottom </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_x_left","title":"variable padding_x_left","text":"<pre><code>uint16_t padding_x_left;\n</code></pre> <p>number of pixels padded on the left </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-padding_x_right","title":"variable padding_x_right","text":"<pre><code>uint16_t padding_x_right;\n</code></pre> <p>number of pixels padded on the right </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-stride_x","title":"variable stride_x","text":"<pre><code>uint16_t stride_x;\n</code></pre> <p>stride in x direction </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-stride_y","title":"variable stride_y","text":"<pre><code>uint16_t stride_y;\n</code></pre> <p>stride in y direction </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-bias","title":"variable bias","text":"<pre><code>int8_t * bias;\n</code></pre> <p>bias of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-bias_shift","title":"variable bias_shift","text":"<pre><code>uint16_t bias_shift;\n</code></pre> <p>bias shift of convolution (currently not used) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-out_shift","title":"variable out_shift","text":"<pre><code>uint16_t out_shift;\n</code></pre> <p>shift factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-out_mult","title":"variable out_mult","text":"<pre><code>uint16_t out_mult;\n</code></pre> <p>mult factor for requantization (not used for floating point) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-poutbuffer","title":"variable pOutBuffer","text":"<pre><code>double * pOutBuffer;\n</code></pre> <p>pointer to output feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_out_x","title":"variable dim_out_x","text":"<pre><code>uint16_t dim_out_x;\n</code></pre> <p>width of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-dim_out_y","title":"variable dim_out_y","text":"<pre><code>uint16_t dim_out_y;\n</code></pre> <p>height of output feature map </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-kappa","title":"variable kappa","text":"<pre><code>double * kappa;\n</code></pre> <p>multiplication factor for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-lambda","title":"variable lambda","text":"<pre><code>double * lambda;\n</code></pre> <p>bias for BatchNorm </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-pim2colbuffer","title":"variable pIm2ColBuffer","text":"<pre><code>uint8_t * pIm2ColBuffer;\n</code></pre> <p>pointer to im2col Buffer (not used) </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_relu","title":"variable flag_relu","text":"<pre><code>int flag_relu;\n</code></pre> <p>RELU activation flag </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_batch_norm","title":"variable flag_batch_norm","text":"<pre><code>int flag_batch_norm;\n</code></pre> <p>BatchNorm flag </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_y_accumulate_start","title":"variable flag_y_accumulate_start","text":"<pre><code>int flag_y_accumulate_start;\n</code></pre> <p>indicates that output feature map is initizialized with zeros </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-flag_y_accumulate_end","title":"variable flag_y_accumulate_end","text":"<pre><code>int flag_y_accumulate_end;\n</code></pre> <p>indicates that BN, RELU can be performed </p>"},{"location":"runtime/Classes/structkernel__fp64/#variable-memory_chan","title":"variable memory_chan","text":"<pre><code>unsigned int * memory_chan;\n</code></pre> <p>Not used </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/","title":"network_benchmark_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH uint32_t OUT_CH void * b void * W void * images uint32_t * targets precision_t dtype"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-in_ch","title":"variable IN_CH","text":"<pre><code>uint32_t IN_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-b","title":"variable b","text":"<pre><code>void * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-w","title":"variable W","text":"<pre><code>void * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-images","title":"variable images","text":"<pre><code>void * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__benchmark__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp16__t__/","title":"network_fp16_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH __fp16 * b __fp16 * W __fp16 * b_grad __fp16 * W_grad __fp16 * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp16__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-b","title":"variable b","text":"<pre><code>__fp16 * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-w","title":"variable W","text":"<pre><code>__fp16 * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>__fp16 * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>__fp16 * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-images","title":"variable images","text":"<pre><code>__fp16 * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp16__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp32__t__/","title":"network_fp32_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH float * b float * W float * b_grad float * W_grad float * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp32__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-b","title":"variable b","text":"<pre><code>float * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-w","title":"variable W","text":"<pre><code>float * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>float * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>float * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-images","title":"variable images","text":"<pre><code>float * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp32__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp64__t__/","title":"network_fp64_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH double * b double * W double * b_grad double * W_grad double * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp64__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-b","title":"variable b","text":"<pre><code>double * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-w","title":"variable W","text":"<pre><code>double * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>double * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>double * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-images","title":"variable images","text":"<pre><code>double * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp64__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__fp8__t__/","title":"network_fp8_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH char * b char * W char * b_grad char * W_grad char * images uint32_t * targets float learning_rate precision_t dtype"},{"location":"runtime/Classes/structnetwork__fp8__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-b","title":"variable b","text":"<pre><code>char * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-w","title":"variable W","text":"<pre><code>char * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>char * b_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>char * W_grad;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-images","title":"variable images","text":"<pre><code>char * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-learning_rate","title":"variable learning_rate","text":"<pre><code>float learning_rate;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__fp8__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/","title":"network_single_cluster_t_","text":"<p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH uint32_t OUT_CH void * b void * W void * b_grads void * W_grads void * images uint32_t * targets precision_t dtype"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-in_ch","title":"variable IN_CH","text":"<pre><code>uint32_t IN_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-b","title":"variable b","text":"<pre><code>void * b;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-w","title":"variable W","text":"<pre><code>void * W;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-b_grads","title":"variable b_grads","text":"<pre><code>void * b_grads;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-w_grads","title":"variable W_grads","text":"<pre><code>void * W_grads;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-images","title":"variable images","text":"<pre><code>void * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__single__cluster__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structnetwork__t__/","title":"network_t_","text":"<p>This structure contains all parameters necessary for building a simple neural netowork. </p> <p><code>#include &lt;network.h&gt;</code></p>"},{"location":"runtime/Classes/structnetwork__t__/#public-attributes","title":"Public Attributes","text":"Name uint32_t IN_CH1 uint32_t IN_CH2 uint32_t OUT_CH float * b float * W float * b_grad float * W_grad float * images uint32_t * targets precision_t dtype"},{"location":"runtime/Classes/structnetwork__t__/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structnetwork__t__/#variable-in_ch1","title":"variable IN_CH1","text":"<pre><code>uint32_t IN_CH1;\n</code></pre> <p>First dimension of the input data matrix (first channel) </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-in_ch2","title":"variable IN_CH2","text":"<pre><code>uint32_t IN_CH2;\n</code></pre> <p>Second dimension of the input data matrix (second channel) </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-out_ch","title":"variable OUT_CH","text":"<pre><code>uint32_t OUT_CH;\n</code></pre> <p>Dimension of input matix along which we perform SoftMax </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-b","title":"variable b","text":"<pre><code>float * b;\n</code></pre> <p>Pointer to biases of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-w","title":"variable W","text":"<pre><code>float * W;\n</code></pre> <p>Pointer to weights of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-b_grad","title":"variable b_grad","text":"<pre><code>float * b_grad;\n</code></pre> <p>Pointer to bias gradients of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-w_grad","title":"variable W_grad","text":"<pre><code>float * W_grad;\n</code></pre> <p>Pointer to weight gradients of the network </p>"},{"location":"runtime/Classes/structnetwork__t__/#variable-images","title":"variable images","text":"<pre><code>float * images;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__t__/#variable-targets","title":"variable targets","text":"<pre><code>uint32_t * targets;\n</code></pre>"},{"location":"runtime/Classes/structnetwork__t__/#variable-dtype","title":"variable dtype","text":"<pre><code>precision_t dtype;\n</code></pre> <p>Precision of the neural network (uniform for now) </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structomp__prof__t/","title":"omp_prof_t","text":"<p><code>#include &lt;omp.h&gt;</code></p>"},{"location":"runtime/Classes/structomp__prof__t/#public-attributes","title":"Public Attributes","text":"Name uint32_t fork_oh"},{"location":"runtime/Classes/structomp__prof__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structomp__prof__t/#variable-fork_oh","title":"variable fork_oh","text":"<pre><code>uint32_t fork_oh;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structomp__t/","title":"omp_t","text":"<p><code>#include &lt;omp.h&gt;</code></p>"},{"location":"runtime/Classes/structomp__t/#public-attributes","title":"Public Attributes","text":"Name omp_team_t plainTeam int numThreads int maxThreads struct snrt_barrier * kmpc_barrier Pointer to the barrier register used for synchronization eg with #pragma omp barrier. _kmp_ptr32 * kmpc_args Usually the arguments passed to __kmpc_fork_call would do a malloc with the amount of arguments passed. This is too slow for our case and thus we reserve a chunk of arguments in TCDM and use it. This limits the maximum number of arguments."},{"location":"runtime/Classes/structomp__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structomp__t/#variable-plainteam","title":"variable plainTeam","text":"<pre><code>omp_team_t plainTeam;\n</code></pre>"},{"location":"runtime/Classes/structomp__t/#variable-numthreads","title":"variable numThreads","text":"<pre><code>int numThreads;\n</code></pre>"},{"location":"runtime/Classes/structomp__t/#variable-maxthreads","title":"variable maxThreads","text":"<pre><code>int maxThreads;\n</code></pre>"},{"location":"runtime/Classes/structomp__t/#variable-kmpc_barrier","title":"variable kmpc_barrier","text":"<pre><code>struct snrt_barrier * kmpc_barrier;\n</code></pre> <p>Pointer to the barrier register used for synchronization eg with #pragma omp barrier. </p>"},{"location":"runtime/Classes/structomp__t/#variable-kmpc_args","title":"variable kmpc_args","text":"<pre><code>_kmp_ptr32 * kmpc_args;\n</code></pre> <p>Usually the arguments passed to __kmpc_fork_call would do a malloc with the amount of arguments passed. This is too slow for our case and thus we reserve a chunk of arguments in TCDM and use it. This limits the maximum number of arguments. </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structomp__team__t/","title":"omp_team_t","text":"<p><code>#include &lt;omp.h&gt;</code></p>"},{"location":"runtime/Classes/structomp__team__t/#public-attributes","title":"Public Attributes","text":"Name char nbThreads int loop_epoch int loop_start int loop_end int loop_incr int loop_chunk int loop_is_setup int core_epoch"},{"location":"runtime/Classes/structomp__team__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structomp__team__t/#variable-nbthreads","title":"variable nbThreads","text":"<pre><code>char nbThreads;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_epoch","title":"variable loop_epoch","text":"<pre><code>int loop_epoch;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_start","title":"variable loop_start","text":"<pre><code>int loop_start;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_end","title":"variable loop_end","text":"<pre><code>int loop_end;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_incr","title":"variable loop_incr","text":"<pre><code>int loop_incr;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_chunk","title":"variable loop_chunk","text":"<pre><code>int loop_chunk;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-loop_is_setup","title":"variable loop_is_setup","text":"<pre><code>int loop_is_setup;\n</code></pre>"},{"location":"runtime/Classes/structomp__team__t/#variable-core_epoch","title":"variable core_epoch","text":"<pre><code>int core_epoch;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structperf__reg__t/","title":"perf_reg_t","text":"<p><code>#include &lt;perf_cnt.h&gt;</code></p>"},{"location":"runtime/Classes/structperf__reg__t/#public-attributes","title":"Public Attributes","text":"Name volatile perf_reg32_t enable volatile perf_reg32_t hart_select volatile perf_reg32_t perf_counter"},{"location":"runtime/Classes/structperf__reg__t/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structperf__reg__t/#variable-enable","title":"variable enable","text":"<pre><code>volatile perf_reg32_t enable;\n</code></pre>"},{"location":"runtime/Classes/structperf__reg__t/#variable-hart_select","title":"variable hart_select","text":"<pre><code>volatile perf_reg32_t hart_select;\n</code></pre>"},{"location":"runtime/Classes/structperf__reg__t/#variable-perf_counter","title":"variable perf_counter","text":"<pre><code>volatile perf_reg32_t perf_counter;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__allocator/","title":"snrt_allocator","text":"<p><code>#include &lt;team.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__allocator/#public-attributes","title":"Public Attributes","text":"Name struct snrt_allocator_inst l1 struct snrt_allocator_inst l3"},{"location":"runtime/Classes/structsnrt__allocator/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__allocator/#variable-l1","title":"variable l1","text":"<pre><code>struct snrt_allocator_inst l1;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__allocator/#variable-l3","title":"variable l3","text":"<pre><code>struct snrt_allocator_inst l3;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__allocator__inst/","title":"snrt_allocator_inst","text":"<p><code>#include &lt;team.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__allocator__inst/#public-attributes","title":"Public Attributes","text":"Name uint32_t base uint32_t size uint32_t next"},{"location":"runtime/Classes/structsnrt__allocator__inst/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__allocator__inst/#variable-base","title":"variable base","text":"<pre><code>uint32_t base;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__allocator__inst/#variable-size","title":"variable size","text":"<pre><code>uint32_t size;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__allocator__inst/#variable-next","title":"variable next","text":"<pre><code>uint32_t next;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__barrier/","title":"snrt_barrier","text":"<p>Barrier to use with snrt_barrier. </p> <p><code>#include &lt;snrt.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__barrier/#public-attributes","title":"Public Attributes","text":"Name uint32_t volatile barrier uint32_t volatile barrier_iteration"},{"location":"runtime/Classes/structsnrt__barrier/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__barrier/#variable-barrier","title":"variable barrier","text":"<pre><code>uint32_t volatile barrier;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__barrier/#variable-barrier_iteration","title":"variable barrier_iteration","text":"<pre><code>uint32_t volatile barrier_iteration;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__peripherals/","title":"snrt_peripherals","text":"<p>Peripherals to the Snitch SoC. </p> <p><code>#include &lt;snrt.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__peripherals/#public-attributes","title":"Public Attributes","text":"Name volatile uint32_t * clint volatile uint32_t * wakeup uint32_t * perf_counters volatile uint32_t * cl_clint Cluster-local CLINT."},{"location":"runtime/Classes/structsnrt__peripherals/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__peripherals/#variable-clint","title":"variable clint","text":"<pre><code>volatile uint32_t * clint;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__peripherals/#variable-wakeup","title":"variable wakeup","text":"<pre><code>volatile uint32_t * wakeup;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__peripherals/#variable-perf_counters","title":"variable perf_counters","text":"<pre><code>uint32_t * perf_counters;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__peripherals/#variable-cl_clint","title":"variable cl_clint","text":"<pre><code>volatile uint32_t * cl_clint;\n</code></pre> <p>Cluster-local CLINT. </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__slice/","title":"snrt_slice","text":"<p>A slice of memory. </p> <p><code>#include &lt;snrt.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__slice/#public-attributes","title":"Public Attributes","text":"Name uint64_t start uint64_t end"},{"location":"runtime/Classes/structsnrt__slice/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__slice/#variable-start","title":"variable start","text":"<pre><code>uint64_t start;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__slice/#variable-end","title":"variable end","text":"<pre><code>uint64_t end;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__team/","title":"snrt_team","text":"<p><code>#include &lt;team.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__team/#public-attributes","title":"Public Attributes","text":"Name struct snrt_team_root * root Pointer to the root team description of this cluster."},{"location":"runtime/Classes/structsnrt__team/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__team/#variable-root","title":"variable root","text":"<pre><code>struct snrt_team_root * root;\n</code></pre> <p>Pointer to the root team description of this cluster. </p> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/structsnrt__team__root/","title":"snrt_team_root","text":"<p><code>#include &lt;team.h&gt;</code></p>"},{"location":"runtime/Classes/structsnrt__team__root/#public-attributes","title":"Public Attributes","text":"Name struct snrt_team base const void * bootdata uint32_t global_core_base_hartid uint32_t global_core_num uint32_t cluster_idx uint32_t cluster_num uint32_t cluster_core_base_hartid uint32_t cluster_core_num snrt_slice_t global_mem snrt_slice_t cluster_mem snrt_slice_t zero_mem struct snrt_allocator allocator struct snrt_barrier cluster_barrier uint32_t barrier_reg_ptr struct snrt_peripherals peripherals"},{"location":"runtime/Classes/structsnrt__team__root/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/structsnrt__team__root/#variable-base","title":"variable base","text":"<pre><code>struct snrt_team base;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-bootdata","title":"variable bootdata","text":"<pre><code>const void * bootdata;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-global_core_base_hartid","title":"variable global_core_base_hartid","text":"<pre><code>uint32_t global_core_base_hartid;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-global_core_num","title":"variable global_core_num","text":"<pre><code>uint32_t global_core_num;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-cluster_idx","title":"variable cluster_idx","text":"<pre><code>uint32_t cluster_idx;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-cluster_num","title":"variable cluster_num","text":"<pre><code>uint32_t cluster_num;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-cluster_core_base_hartid","title":"variable cluster_core_base_hartid","text":"<pre><code>uint32_t cluster_core_base_hartid;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-cluster_core_num","title":"variable cluster_core_num","text":"<pre><code>uint32_t cluster_core_num;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-global_mem","title":"variable global_mem","text":"<pre><code>snrt_slice_t global_mem;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-cluster_mem","title":"variable cluster_mem","text":"<pre><code>snrt_slice_t cluster_mem;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-zero_mem","title":"variable zero_mem","text":"<pre><code>snrt_slice_t zero_mem;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-allocator","title":"variable allocator","text":"<pre><code>struct snrt_allocator allocator;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-cluster_barrier","title":"variable cluster_barrier","text":"<pre><code>struct snrt_barrier cluster_barrier;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-barrier_reg_ptr","title":"variable barrier_reg_ptr","text":"<pre><code>uint32_t barrier_reg_ptr;\n</code></pre>"},{"location":"runtime/Classes/structsnrt__team__root/#variable-peripherals","title":"variable peripherals","text":"<pre><code>struct snrt_peripherals peripherals;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/unionperf__reg32__t/","title":"perf_reg32_t","text":"<p><code>#include &lt;perf_cnt.h&gt;</code></p>"},{"location":"runtime/Classes/unionperf__reg32__t/#public-functions","title":"Public Functions","text":"Name uint32_t value attribute((aligned(8)) )"},{"location":"runtime/Classes/unionperf__reg32__t/#public-functions-documentation","title":"Public Functions Documentation","text":""},{"location":"runtime/Classes/unionperf__reg32__t/#function-attribute","title":"function attribute","text":"<pre><code>uint32_t value __attribute__(\n(aligned(8)) )\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/unionv2s/","title":"v2s","text":"<p><code>#include &lt;nnlinear_baseline.h&gt;</code></p>"},{"location":"runtime/Classes/unionv2s/#public-attributes","title":"Public Attributes","text":"Name double f64 v2f32 vec"},{"location":"runtime/Classes/unionv2s/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/unionv2s/#variable-f64","title":"variable f64","text":"<pre><code>double f64;\n</code></pre>"},{"location":"runtime/Classes/unionv2s/#variable-vec","title":"variable vec","text":"<pre><code>v2f32 vec;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/unionv4s/","title":"v4s","text":"<p><code>#include &lt;nnlinear_baseline.h&gt;</code></p>"},{"location":"runtime/Classes/unionv4s/#public-attributes","title":"Public Attributes","text":"Name double f64 v4f16 vec"},{"location":"runtime/Classes/unionv4s/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/unionv4s/#variable-f64","title":"variable f64","text":"<pre><code>double f64;\n</code></pre>"},{"location":"runtime/Classes/unionv4s/#variable-vec","title":"variable vec","text":"<pre><code>v4f16 vec;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Classes/unionv8s/","title":"v8s","text":"<p><code>#include &lt;nnlinear_baseline.h&gt;</code></p>"},{"location":"runtime/Classes/unionv8s/#public-attributes","title":"Public Attributes","text":"Name double f64 v8f8 vec"},{"location":"runtime/Classes/unionv8s/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"runtime/Classes/unionv8s/#variable-f64","title":"variable f64","text":"<pre><code>double f64;\n</code></pre>"},{"location":"runtime/Classes/unionv8s/#variable-vec","title":"variable vec","text":"<pre><code>v8f8 vec;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Examples/","title":"Examples","text":"<p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/","title":"Files","text":"<ul> <li>file README.md </li> <li>file README.md </li> <li>file README.md </li> <li>dir applications <ul> <li>dir applications/data <ul> <li>file applications/data/data_fp32_nnlinear.h </li> </ul> </li> <li>dir applications/include <ul> <li>file applications/include/layer.h </li> <li>file applications/include/network.h </li> </ul> </li> <li>dir applications/src <ul> <li>dir applications/src/kernels <ul> <li>file applications/src/kernels/batchnorm.h </li> <li>file applications/src/kernels/conv2d.h </li> <li>file applications/src/kernels/gemm.h </li> <li>file applications/src/kernels/maxpool.h </li> <li>file applications/src/kernels/nnlinear_baseline.h </li> </ul> </li> <li>dir applications/src/layers <ul> <li>file applications/src/layers/batchnorm_layer.h </li> <li>file applications/src/layers/conv2d_layer.h </li> <li>file applications/src/layers/maxpool_layer.h </li> <li>file applications/src/layers/nnlinear_backend_baseline.h </li> </ul> </li> <li>dir applications/src/utils <ul> <li>file applications/src/utils/utils.h </li> </ul> </li> </ul> </li> </ul> </li> <li>dir benchmark <ul> <li>dir benchmark/include <ul> <li>file benchmark/include/benchmark.h </li> </ul> </li> <li>dir benchmark/src <ul> <li>dir benchmark/src/matmul <ul> <li>file benchmark/src/matmul/matmul.h </li> </ul> </li> </ul> </li> </ul> </li> <li>dir snBLAS <ul> <li>dir snBLAS/include <ul> <li>file snBLAS/include/snblas.h </li> </ul> </li> </ul> </li> <li>dir snRuntime <ul> <li>dir snRuntime/include <ul> <li>file snRuntime/include/debug.h </li> <li>file snRuntime/include/dm.h </li> <li>file snRuntime/include/eu.h </li> <li>file snRuntime/include/interface.h </li> <li>file snRuntime/include/kmp.h </li> <li>file snRuntime/include/occamy_base_addr.h </li> <li>file snRuntime/include/occamy_hbm_xbar_peripheral.h </li> <li>file snRuntime/include/occamy_quad_peripheral.h </li> <li>file snRuntime/include/occamy_soc_peripheral.h </li> <li>file snRuntime/include/omp.h </li> <li>file snRuntime/include/perf_cnt.h </li> <li>file snRuntime/include/snitch_cluster_peripheral.h </li> <li>file snRuntime/include/snrt.h </li> </ul> </li> <li>dir snRuntime/src <ul> <li>file snRuntime/src/team.h </li> </ul> </li> <li>dir snRuntime/tests <ul> <li>file snRuntime/tests/data.h </li> <li>file snRuntime/tests/lto_a.h </li> </ul> </li> <li>dir snRuntime/vendor <ul> <li>file snRuntime/vendor/printf.h </li> <li>dir snRuntime/vendor/riscv-opcodes <ul> <li>file snRuntime/vendor/riscv-opcodes/encoding.h </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/applications_2README_8md/","title":"README.md","text":""},{"location":"runtime/Files/applications_2README_8md/#source-code","title":"Source code","text":"<p><pre><code># Applications\n\nThis subdirectory contains some applications or benchmarks specifically implemented and optimized for Snitch.\n\n## Contents\n- Data generation:\n    - `data_gen.py`: script to generate data and expected results for various benchmarks\n    - `data`: output folder of `data_gen.py` which also contains the configuration to generate the data\n- `src`:\n    - `kernels`: basic kernels, currently contains `GEMM`, `BatchNorm`, `Maxpool`, `Fusedconv`\n- `layers`: wraps the kernel to form a DNN layer. Manages data-movement, synchronization, double buffering etc.\n    - `utils`: some helpful functions for benchmarking, verification, fast `memset`\n- `net_layer.c`: various ready tests to run layers.\n- `include`: includes `layer` struct.\n\n## SW Testbenches\nThere are currently a few tests for various layer types. Some additional information about these tests is given below:\n- `net_maxpool.c`: Naive implementation of a maxpooling layer, not optimized in any way due to memory-boundness\n- `net-batchnorm.c`: Implementation of a batchnorm layer with SSR streams (both read and write)\n- `net-conv2d.c`: Implementation and tiling of a 2D convolution that can be distributed to multiple clusters. The convolution is implemented as an `im2col` transformation (performed by 2D DMA transfers) + optimized GEMM. The memory layout of input and output feature map is Height x Width x Channels. The convolution is globally parallelized over output channels. Inside a cluster, the output pixels are distributed among the cores. There is an option to load the feature map from a different cluster instead of the main memory by setting `cluster2cluster` in the layer struct to `1`. Currently only `fp64` is implemented, but the data movement for `fp32` or lower precision SIMD should be analogously.\n- `net-gemm.c`: Testbench to benchmark the optimized GEMM implementation for different memory layouts, dimensions and precisions.\n- `net-fusedconv.c`: Implementation of a fused kernel with Conv2d + BatchNorm + ReLU. The interface of the kernel is compatible with DORY. Parameters of a tile can be specified in `data/fusedconv_param.hjson`. Supported paramters are input/output dimension, padding, kernel dimension &amp; stride, flags for BatchNorm and ReLU. Further there are two additional specialized kernels 1) a CHW kernel for input layers with very few input channels, the output of this kernel is in the HWC layout again 2) A depthwise kernel\n\n## Usage\nTo run a specific benchmark, first configure the dimensions and the desired precision `data/app_params.hjson`.\n</code></pre> {     kernel: \"GEMM\"     M: 16,     N: 16,     K: 16,     alpha: 0,     transpose_A: false,     transpose_B: true,     prec: 16 } <pre><code>The file will be automatically generated with a `cmake` macro and is stored in `data/data_app.h`. The result will also be checked. Reference is a golden model written in `python` with help of the `torch`.\n\nThe applications are compiled into a folder which can be enabled by adding `add_subdirectory(${SNITCH_SOFTWARE_DIR}/applications` to `CMakeLists.txt` in the specific `sw` folder.\n\n## Requirements\n- `torch`\n</code></pre></p> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/batchnorm_8h/","title":"applications/src/kernels/batchnorm.h","text":""},{"location":"runtime/Files/batchnorm_8h/#functions","title":"Functions","text":"Name void batchnorm_fp64(double * ifmap, double * gamma, double * beta, double * ofmap, uint32_t OW, uint32_t CI, uint32_t compute_num, uint32_t setup_SSR)implementation of a FP64 batchnorm as a linear combination y = gamma * x + beta"},{"location":"runtime/Files/batchnorm_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/batchnorm_8h/#function-batchnorm_fp64","title":"function batchnorm_fp64","text":"<pre><code>void batchnorm_fp64(\ndouble * ifmap,\ndouble * gamma,\ndouble * beta,\ndouble * ofmap,\nuint32_t OW,\nuint32_t CI,\nuint32_t compute_num,\nuint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP64 batchnorm as a linear combination y = gamma * x + beta </p> <p>Parameters: </p> <ul> <li>ifmap pointer to input feature map </li> <li>gamma pointer to gamma </li> <li>beta pointer to beta </li> <li>ofmap pointer to output feature map </li> <li>OW width of output feature map </li> <li>CI number of input channels </li> <li>compute_num number of compute units </li> <li>setup_SSR setup SSR strides and bounds </li> </ul>"},{"location":"runtime/Files/batchnorm_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"snrt.h\"\n\nvoid batchnorm_fp64(double *ifmap, double *gamma, double *beta, double *ofmap,\nuint32_t OW, uint32_t CI, uint32_t compute_num,\nuint32_t setup_SSR);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/batchnorm__layer_8h/","title":"applications/src/layers/batchnorm_layer.h","text":""},{"location":"runtime/Files/batchnorm__layer_8h/#functions","title":"Functions","text":"Name void batchnorm_layer(const conv_layer * l)batchnorm layer that handles data transfers in a double buffered fashion"},{"location":"runtime/Files/batchnorm__layer_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/batchnorm__layer_8h/#function-batchnorm_layer","title":"function batchnorm_layer","text":"<pre><code>void batchnorm_layer(\nconst conv_layer * l\n)\n</code></pre> <p>batchnorm layer that handles data transfers in a double buffered fashion </p> <p>Parameters: </p> <ul> <li>l conv_layer struct that holds addresses and parameters </li> </ul>"},{"location":"runtime/Files/batchnorm__layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n\nvoid batchnorm_layer(const conv_layer *l);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/benchmark_8h/","title":"benchmark/include/benchmark.h","text":""},{"location":"runtime/Files/benchmark_8h/#functions","title":"Functions","text":"Name size_t benchmark_get_cycle()"},{"location":"runtime/Files/benchmark_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/benchmark_8h/#function-benchmark_get_cycle","title":"function benchmark_get_cycle","text":"<pre><code>size_t benchmark_get_cycle()\n</code></pre>"},{"location":"runtime/Files/benchmark_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n#include &lt;snrt.h&gt;\n#include &lt;stddef.h&gt;\n\n#include \"printf.h\"\n\nsize_t benchmark_get_cycle();\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/conv2d_8h/","title":"applications/src/kernels/conv2d.h","text":""},{"location":"runtime/Files/conv2d_8h/#classes","title":"Classes","text":"Name struct kernel_fp32 parameters for single-precision fusedconv kernel struct kernel_fp64 parameters for double-precision fusedconv kernel"},{"location":"runtime/Files/conv2d_8h/#functions","title":"Functions","text":"Name void occamy_conv_opt_fp64(kernel_fp64 * k)implementation of a double-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void occamy_conv_opt_fp32(kernel_fp32 * k)implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void occamy_conv_dw_opt_fp32(kernel_fp32 * k)implementation of a single-precision fp DEPTHWISE convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void occamy_conv_chw_opt_fp32(kernel_fp32 * k)implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input feature map is C x H x W, resp. Co x Fh x Fw x Ci for weights Howevever, the output memory layout is H x W x C. This kernel should be used for the first layers in a network where Ci is very small and usually odd numbered. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag void bn_relu(const float * pBuffer, const uint16_t dim_x, const uint16_t dim_y, const uint16_t ch, float * kappa, float * lambda, int flag_relu, int flag_batch_norm)helper function that implements Batch Normalization and ReLU"},{"location":"runtime/Files/conv2d_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_opt_fp64","title":"function occamy_conv_opt_fp64","text":"<pre><code>void occamy_conv_opt_fp64(\nkernel_fp64 * k\n)\n</code></pre> <p>implementation of a double-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp64 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_opt_fp32","title":"function occamy_conv_opt_fp32","text":"<pre><code>void occamy_conv_opt_fp32(\nkernel_fp32 * k\n)\n</code></pre> <p>implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp32 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_dw_opt_fp32","title":"function occamy_conv_dw_opt_fp32","text":"<pre><code>void occamy_conv_dw_opt_fp32(\nkernel_fp32 * k\n)\n</code></pre> <p>implementation of a single-precision fp DEPTHWISE convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input/output feature map is HxWxC, resp. CoxFhxFwxCi. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp32 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-occamy_conv_chw_opt_fp32","title":"function occamy_conv_chw_opt_fp32","text":"<pre><code>void occamy_conv_chw_opt_fp32(\nkernel_fp32 * k\n)\n</code></pre> <p>implementation of a single-precision fp convolutional kernel for DORY trials. Currently does a direct convolution without im2col. The memory layout of input feature map is C x H x W, resp. Co x Fh x Fw x Ci for weights Howevever, the output memory layout is H x W x C. This kernel should be used for the first layers in a network where Ci is very small and usually odd numbered. Fuses multiple layers together (Conv2d, Batchnorm, Relu) that can be enabled with a flag </p> <p>Parameters: </p> <ul> <li>k kernel_fp32 struct reference that holds all parameters </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#function-bn_relu","title":"function bn_relu","text":"<pre><code>void bn_relu(\nconst float * pBuffer,\nconst uint16_t dim_x,\nconst uint16_t dim_y,\nconst uint16_t ch,\nfloat * kappa,\nfloat * lambda,\nint flag_relu,\nint flag_batch_norm\n)\n</code></pre> <p>helper function that implements Batch Normalization and ReLU </p> <p>Parameters: </p> <ul> <li>pBuffer pointer to the feature map </li> <li>dim_x width of feature map </li> <li>dim_y height of feature map </li> <li>ch number of channels (SIMD restricts multiple of 2) </li> <li>kappa multiplication factor for BatchNorm </li> <li>lambda bias for BatchNorm </li> <li>flag_relu RELU activation flag </li> <li>flag_batch_norm BatchNorm flag </li> </ul>"},{"location":"runtime/Files/conv2d_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include \"snrt.h\"\n\ntypedef struct {\nfloat *pInBuffer;\nuint16_t dim_in_x;\nuint16_t dim_in_y;\nuint16_t ch_in;\nfloat *pWeight;\nuint16_t ch_out;\nuint16_t dim_kernel_x;\nuint16_t dim_kernel_y;\nuint16_t padding_y_top;\nuint16_t padding_y_bottom;\nuint16_t padding_x_left;\nuint16_t padding_x_right;\nuint16_t stride_x;\nuint16_t stride_y;\nint8_t *bias;\nuint16_t bias_shift;\nuint16_t out_shift;\nuint16_t out_mult;\nfloat *pOutBuffer;\nuint16_t dim_out_x;\nuint16_t dim_out_y;\nfloat *kappa;\nfloat *lambda;\nuint8_t *pIm2ColBuffer;\nint flag_relu;\nint flag_batch_norm;\nint flag_y_accumulate_start;\nint flag_y_accumulate_end;\nunsigned int *memory_chan;\n} kernel_fp32;\n\ntypedef struct {\ndouble *pInBuffer;\nuint16_t dim_in_x;\nuint16_t dim_in_y;\nuint16_t ch_in;\ndouble *pWeight;\nuint16_t ch_out;\nuint16_t dim_kernel_x;\nuint16_t dim_kernel_y;\nuint16_t padding_y_top;\nuint16_t padding_y_bottom;\nuint16_t padding_x_left;\nuint16_t padding_x_right;\nuint16_t stride_x;\nuint16_t stride_y;\nint8_t *bias;\nuint16_t bias_shift;\nuint16_t out_shift;\nuint16_t out_mult;\ndouble *pOutBuffer;\nuint16_t dim_out_x;\nuint16_t dim_out_y;\ndouble *kappa;\ndouble *lambda;\nuint8_t *pIm2ColBuffer;\nint flag_relu;\nint flag_batch_norm;\nint flag_y_accumulate_start;\nint flag_y_accumulate_end;\nunsigned int *memory_chan;\n} kernel_fp64;\n\nvoid occamy_conv_opt_fp64(kernel_fp64 *k);\n\nvoid occamy_conv_opt_fp32(kernel_fp32 *k);\n\nvoid occamy_conv_dw_opt_fp32(kernel_fp32 *k);\n\nvoid occamy_conv_chw_opt_fp32(kernel_fp32 *k);\n\nvoid bn_relu(const float *pBuffer, const uint16_t dim_x, const uint16_t dim_y,\nconst uint16_t ch, float *kappa, float *lambda, int flag_relu,\nint flag_batch_norm);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/conv2d__layer_8h/","title":"applications/src/layers/conv2d_layer.h","text":""},{"location":"runtime/Files/conv2d__layer_8h/#functions","title":"Functions","text":"Name void conv2d_layer(const conv_layer * l)conv2d layer that handles data transfers in a double buffered fashion"},{"location":"runtime/Files/conv2d__layer_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/conv2d__layer_8h/#function-conv2d_layer","title":"function conv2d_layer","text":"<pre><code>void conv2d_layer(\nconst conv_layer * l\n)\n</code></pre> <p>conv2d layer that handles data transfers in a double buffered fashion </p> <p>Parameters: </p> <ul> <li>l conv_layer struct that holds addresses and parameters </li> </ul>"},{"location":"runtime/Files/conv2d__layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n\nvoid conv2d_layer(const conv_layer *l);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/data_8h/","title":"snRuntime/tests/data.h","text":""},{"location":"runtime/Files/data_8h/#attributes","title":"Attributes","text":"Name double axpy_4096_x double axpy_4096_y double axpy_4096_g double axpy_4096_a"},{"location":"runtime/Files/data_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/data_8h/#variable-axpy_4096_x","title":"variable axpy_4096_x","text":"<pre><code>static double axpy_4096_x;\n</code></pre>"},{"location":"runtime/Files/data_8h/#variable-axpy_4096_y","title":"variable axpy_4096_y","text":"<pre><code>static double axpy_4096_y;\n</code></pre>"},{"location":"runtime/Files/data_8h/#variable-axpy_4096_g","title":"variable axpy_4096_g","text":"<pre><code>static double axpy_4096_g;\n</code></pre>"},{"location":"runtime/Files/data_8h/#variable-axpy_4096_a","title":"variable axpy_4096_a","text":"<pre><code>static double axpy_4096_a = 2.000000;\n</code></pre>"},{"location":"runtime/Files/data_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\nstatic double axpy_4096_x[4096] = {\n0.000000,    1.000000,    2.000000,    3.000000,    4.000000,\n5.000000,    6.000000,    7.000000,    8.000000,    9.000000,\n10.000000,   11.000000,   12.000000,   13.000000,   14.000000,\n15.000000,   16.000000,   17.000000,   18.000000,   19.000000,\n20.000000,   21.000000,   22.000000,   23.000000,   24.000000,\n25.000000,   26.000000,   27.000000,   28.000000,   29.000000,\n30.000000,   31.000000,   32.000000,   33.000000,   34.000000,\n35.000000,   36.000000,   37.000000,   38.000000,   39.000000,\n40.000000,   41.000000,   42.000000,   43.000000,   44.000000,\n45.000000,   46.000000,   47.000000,   48.000000,   49.000000,\n50.000000,   51.000000,   52.000000,   53.000000,   54.000000,\n55.000000,   56.000000,   57.000000,   58.000000,   59.000000,\n60.000000,   61.000000,   62.000000,   63.000000,   64.000000,\n65.000000,   66.000000,   67.000000,   68.000000,   69.000000,\n70.000000,   71.000000,   72.000000,   73.000000,   74.000000,\n75.000000,   76.000000,   77.000000,   78.000000,   79.000000,\n80.000000,   81.000000,   82.000000,   83.000000,   84.000000,\n85.000000,   86.000000,   87.000000,   88.000000,   89.000000,\n90.000000,   91.000000,   92.000000,   93.000000,   94.000000,\n95.000000,   96.000000,   97.000000,   98.000000,   99.000000,\n100.000000,  101.000000,  102.000000,  103.000000,  104.000000,\n105.000000,  106.000000,  107.000000,  108.000000,  109.000000,\n110.000000,  111.000000,  112.000000,  113.000000,  114.000000,\n115.000000,  116.000000,  117.000000,  118.000000,  119.000000,\n120.000000,  121.000000,  122.000000,  123.000000,  124.000000,\n125.000000,  126.000000,  127.000000,  128.000000,  129.000000,\n130.000000,  131.000000,  132.000000,  133.000000,  134.000000,\n135.000000,  136.000000,  137.000000,  138.000000,  139.000000,\n140.000000,  141.000000,  142.000000,  143.000000,  144.000000,\n145.000000,  146.000000,  147.000000,  148.000000,  149.000000,\n150.000000,  151.000000,  152.000000,  153.000000,  154.000000,\n155.000000,  156.000000,  157.000000,  158.000000,  159.000000,\n160.000000,  161.000000,  162.000000,  163.000000,  164.000000,\n165.000000,  166.000000,  167.000000,  168.000000,  169.000000,\n170.000000,  171.000000,  172.000000,  173.000000,  174.000000,\n175.000000,  176.000000,  177.000000,  178.000000,  179.000000,\n180.000000,  181.000000,  182.000000,  183.000000,  184.000000,\n185.000000,  186.000000,  187.000000,  188.000000,  189.000000,\n190.000000,  191.000000,  192.000000,  193.000000,  194.000000,\n195.000000,  196.000000,  197.000000,  198.000000,  199.000000,\n200.000000,  201.000000,  202.000000,  203.000000,  204.000000,\n205.000000,  206.000000,  207.000000,  208.000000,  209.000000,\n210.000000,  211.000000,  212.000000,  213.000000,  214.000000,\n215.000000,  216.000000,  217.000000,  218.000000,  219.000000,\n220.000000,  221.000000,  222.000000,  223.000000,  224.000000,\n225.000000,  226.000000,  227.000000,  228.000000,  229.000000,\n230.000000,  231.000000,  232.000000,  233.000000,  234.000000,\n235.000000,  236.000000,  237.000000,  238.000000,  239.000000,\n240.000000,  241.000000,  242.000000,  243.000000,  244.000000,\n245.000000,  246.000000,  247.000000,  248.000000,  249.000000,\n250.000000,  251.000000,  252.000000,  253.000000,  254.000000,\n255.000000,  256.000000,  257.000000,  258.000000,  259.000000,\n260.000000,  261.000000,  262.000000,  263.000000,  264.000000,\n265.000000,  266.000000,  267.000000,  268.000000,  269.000000,\n270.000000,  271.000000,  272.000000,  273.000000,  274.000000,\n275.000000,  276.000000,  277.000000,  278.000000,  279.000000,\n280.000000,  281.000000,  282.000000,  283.000000,  284.000000,\n285.000000,  286.000000,  287.000000,  288.000000,  289.000000,\n290.000000,  291.000000,  292.000000,  293.000000,  294.000000,\n295.000000,  296.000000,  297.000000,  298.000000,  299.000000,\n300.000000,  301.000000,  302.000000,  303.000000,  304.000000,\n305.000000,  306.000000,  307.000000,  308.000000,  309.000000,\n310.000000,  311.000000,  312.000000,  313.000000,  314.000000,\n315.000000,  316.000000,  317.000000,  318.000000,  319.000000,\n320.000000,  321.000000,  322.000000,  323.000000,  324.000000,\n325.000000,  326.000000,  327.000000,  328.000000,  329.000000,\n330.000000,  331.000000,  332.000000,  333.000000,  334.000000,\n335.000000,  336.000000,  337.000000,  338.000000,  339.000000,\n340.000000,  341.000000,  342.000000,  343.000000,  344.000000,\n345.000000,  346.000000,  347.000000,  348.000000,  349.000000,\n350.000000,  351.000000,  352.000000,  353.000000,  354.000000,\n355.000000,  356.000000,  357.000000,  358.000000,  359.000000,\n360.000000,  361.000000,  362.000000,  363.000000,  364.000000,\n365.000000,  366.000000,  367.000000,  368.000000,  369.000000,\n370.000000,  371.000000,  372.000000,  373.000000,  374.000000,\n375.000000,  376.000000,  377.000000,  378.000000,  379.000000,\n380.000000,  381.000000,  382.000000,  383.000000,  384.000000,\n385.000000,  386.000000,  387.000000,  388.000000,  389.000000,\n390.000000,  391.000000,  392.000000,  393.000000,  394.000000,\n395.000000,  396.000000,  397.000000,  398.000000,  399.000000,\n400.000000,  401.000000,  402.000000,  403.000000,  404.000000,\n405.000000,  406.000000,  407.000000,  408.000000,  409.000000,\n410.000000,  411.000000,  412.000000,  413.000000,  414.000000,\n415.000000,  416.000000,  417.000000,  418.000000,  419.000000,\n420.000000,  421.000000,  422.000000,  423.000000,  424.000000,\n425.000000,  426.000000,  427.000000,  428.000000,  429.000000,\n430.000000,  431.000000,  432.000000,  433.000000,  434.000000,\n435.000000,  436.000000,  437.000000,  438.000000,  439.000000,\n440.000000,  441.000000,  442.000000,  443.000000,  444.000000,\n445.000000,  446.000000,  447.000000,  448.000000,  449.000000,\n450.000000,  451.000000,  452.000000,  453.000000,  454.000000,\n455.000000,  456.000000,  457.000000,  458.000000,  459.000000,\n460.000000,  461.000000,  462.000000,  463.000000,  464.000000,\n465.000000,  466.000000,  467.000000,  468.000000,  469.000000,\n470.000000,  471.000000,  472.000000,  473.000000,  474.000000,\n475.000000,  476.000000,  477.000000,  478.000000,  479.000000,\n480.000000,  481.000000,  482.000000,  483.000000,  484.000000,\n485.000000,  486.000000,  487.000000,  488.000000,  489.000000,\n490.000000,  491.000000,  492.000000,  493.000000,  494.000000,\n495.000000,  496.000000,  497.000000,  498.000000,  499.000000,\n500.000000,  501.000000,  502.000000,  503.000000,  504.000000,\n505.000000,  506.000000,  507.000000,  508.000000,  509.000000,\n510.000000,  511.000000,  512.000000,  513.000000,  514.000000,\n515.000000,  516.000000,  517.000000,  518.000000,  519.000000,\n520.000000,  521.000000,  522.000000,  523.000000,  524.000000,\n525.000000,  526.000000,  527.000000,  528.000000,  529.000000,\n530.000000,  531.000000,  532.000000,  533.000000,  534.000000,\n535.000000,  536.000000,  537.000000,  538.000000,  539.000000,\n540.000000,  541.000000,  542.000000,  543.000000,  544.000000,\n545.000000,  546.000000,  547.000000,  548.000000,  549.000000,\n550.000000,  551.000000,  552.000000,  553.000000,  554.000000,\n555.000000,  556.000000,  557.000000,  558.000000,  559.000000,\n560.000000,  561.000000,  562.000000,  563.000000,  564.000000,\n565.000000,  566.000000,  567.000000,  568.000000,  569.000000,\n570.000000,  571.000000,  572.000000,  573.000000,  574.000000,\n575.000000,  576.000000,  577.000000,  578.000000,  579.000000,\n580.000000,  581.000000,  582.000000,  583.000000,  584.000000,\n585.000000,  586.000000,  587.000000,  588.000000,  589.000000,\n590.000000,  591.000000,  592.000000,  593.000000,  594.000000,\n595.000000,  596.000000,  597.000000,  598.000000,  599.000000,\n600.000000,  601.000000,  602.000000,  603.000000,  604.000000,\n605.000000,  606.000000,  607.000000,  608.000000,  609.000000,\n610.000000,  611.000000,  612.000000,  613.000000,  614.000000,\n615.000000,  616.000000,  617.000000,  618.000000,  619.000000,\n620.000000,  621.000000,  622.000000,  623.000000,  624.000000,\n625.000000,  626.000000,  627.000000,  628.000000,  629.000000,\n630.000000,  631.000000,  632.000000,  633.000000,  634.000000,\n635.000000,  636.000000,  637.000000,  638.000000,  639.000000,\n640.000000,  641.000000,  642.000000,  643.000000,  644.000000,\n645.000000,  646.000000,  647.000000,  648.000000,  649.000000,\n650.000000,  651.000000,  652.000000,  653.000000,  654.000000,\n655.000000,  656.000000,  657.000000,  658.000000,  659.000000,\n660.000000,  661.000000,  662.000000,  663.000000,  664.000000,\n665.000000,  666.000000,  667.000000,  668.000000,  669.000000,\n670.000000,  671.000000,  672.000000,  673.000000,  674.000000,\n675.000000,  676.000000,  677.000000,  678.000000,  679.000000,\n680.000000,  681.000000,  682.000000,  683.000000,  684.000000,\n685.000000,  686.000000,  687.000000,  688.000000,  689.000000,\n690.000000,  691.000000,  692.000000,  693.000000,  694.000000,\n695.000000,  696.000000,  697.000000,  698.000000,  699.000000,\n700.000000,  701.000000,  702.000000,  703.000000,  704.000000,\n705.000000,  706.000000,  707.000000,  708.000000,  709.000000,\n710.000000,  711.000000,  712.000000,  713.000000,  714.000000,\n715.000000,  716.000000,  717.000000,  718.000000,  719.000000,\n720.000000,  721.000000,  722.000000,  723.000000,  724.000000,\n725.000000,  726.000000,  727.000000,  728.000000,  729.000000,\n730.000000,  731.000000,  732.000000,  733.000000,  734.000000,\n735.000000,  736.000000,  737.000000,  738.000000,  739.000000,\n740.000000,  741.000000,  742.000000,  743.000000,  744.000000,\n745.000000,  746.000000,  747.000000,  748.000000,  749.000000,\n750.000000,  751.000000,  752.000000,  753.000000,  754.000000,\n755.000000,  756.000000,  757.000000,  758.000000,  759.000000,\n760.000000,  761.000000,  762.000000,  763.000000,  764.000000,\n765.000000,  766.000000,  767.000000,  768.000000,  769.000000,\n770.000000,  771.000000,  772.000000,  773.000000,  774.000000,\n775.000000,  776.000000,  777.000000,  778.000000,  779.000000,\n780.000000,  781.000000,  782.000000,  783.000000,  784.000000,\n785.000000,  786.000000,  787.000000,  788.000000,  789.000000,\n790.000000,  791.000000,  792.000000,  793.000000,  794.000000,\n795.000000,  796.000000,  797.000000,  798.000000,  799.000000,\n800.000000,  801.000000,  802.000000,  803.000000,  804.000000,\n805.000000,  806.000000,  807.000000,  808.000000,  809.000000,\n810.000000,  811.000000,  812.000000,  813.000000,  814.000000,\n815.000000,  816.000000,  817.000000,  818.000000,  819.000000,\n820.000000,  821.000000,  822.000000,  823.000000,  824.000000,\n825.000000,  826.000000,  827.000000,  828.000000,  829.000000,\n830.000000,  831.000000,  832.000000,  833.000000,  834.000000,\n835.000000,  836.000000,  837.000000,  838.000000,  839.000000,\n840.000000,  841.000000,  842.000000,  843.000000,  844.000000,\n845.000000,  846.000000,  847.000000,  848.000000,  849.000000,\n850.000000,  851.000000,  852.000000,  853.000000,  854.000000,\n855.000000,  856.000000,  857.000000,  858.000000,  859.000000,\n860.000000,  861.000000,  862.000000,  863.000000,  864.000000,\n865.000000,  866.000000,  867.000000,  868.000000,  869.000000,\n870.000000,  871.000000,  872.000000,  873.000000,  874.000000,\n875.000000,  876.000000,  877.000000,  878.000000,  879.000000,\n880.000000,  881.000000,  882.000000,  883.000000,  884.000000,\n885.000000,  886.000000,  887.000000,  888.000000,  889.000000,\n890.000000,  891.000000,  892.000000,  893.000000,  894.000000,\n895.000000,  896.000000,  897.000000,  898.000000,  899.000000,\n900.000000,  901.000000,  902.000000,  903.000000,  904.000000,\n905.000000,  906.000000,  907.000000,  908.000000,  909.000000,\n910.000000,  911.000000,  912.000000,  913.000000,  914.000000,\n915.000000,  916.000000,  917.000000,  918.000000,  919.000000,\n920.000000,  921.000000,  922.000000,  923.000000,  924.000000,\n925.000000,  926.000000,  927.000000,  928.000000,  929.000000,\n930.000000,  931.000000,  932.000000,  933.000000,  934.000000,\n935.000000,  936.000000,  937.000000,  938.000000,  939.000000,\n940.000000,  941.000000,  942.000000,  943.000000,  944.000000,\n945.000000,  946.000000,  947.000000,  948.000000,  949.000000,\n950.000000,  951.000000,  952.000000,  953.000000,  954.000000,\n955.000000,  956.000000,  957.000000,  958.000000,  959.000000,\n960.000000,  961.000000,  962.000000,  963.000000,  964.000000,\n965.000000,  966.000000,  967.000000,  968.000000,  969.000000,\n970.000000,  971.000000,  972.000000,  973.000000,  974.000000,\n975.000000,  976.000000,  977.000000,  978.000000,  979.000000,\n980.000000,  981.000000,  982.000000,  983.000000,  984.000000,\n985.000000,  986.000000,  987.000000,  988.000000,  989.000000,\n990.000000,  991.000000,  992.000000,  993.000000,  994.000000,\n995.000000,  996.000000,  997.000000,  998.000000,  999.000000,\n1000.000000, 1001.000000, 1002.000000, 1003.000000, 1004.000000,\n1005.000000, 1006.000000, 1007.000000, 1008.000000, 1009.000000,\n1010.000000, 1011.000000, 1012.000000, 1013.000000, 1014.000000,\n1015.000000, 1016.000000, 1017.000000, 1018.000000, 1019.000000,\n1020.000000, 1021.000000, 1022.000000, 1023.000000, 1024.000000,\n1025.000000, 1026.000000, 1027.000000, 1028.000000, 1029.000000,\n1030.000000, 1031.000000, 1032.000000, 1033.000000, 1034.000000,\n1035.000000, 1036.000000, 1037.000000, 1038.000000, 1039.000000,\n1040.000000, 1041.000000, 1042.000000, 1043.000000, 1044.000000,\n1045.000000, 1046.000000, 1047.000000, 1048.000000, 1049.000000,\n1050.000000, 1051.000000, 1052.000000, 1053.000000, 1054.000000,\n1055.000000, 1056.000000, 1057.000000, 1058.000000, 1059.000000,\n1060.000000, 1061.000000, 1062.000000, 1063.000000, 1064.000000,\n1065.000000, 1066.000000, 1067.000000, 1068.000000, 1069.000000,\n1070.000000, 1071.000000, 1072.000000, 1073.000000, 1074.000000,\n1075.000000, 1076.000000, 1077.000000, 1078.000000, 1079.000000,\n1080.000000, 1081.000000, 1082.000000, 1083.000000, 1084.000000,\n1085.000000, 1086.000000, 1087.000000, 1088.000000, 1089.000000,\n1090.000000, 1091.000000, 1092.000000, 1093.000000, 1094.000000,\n1095.000000, 1096.000000, 1097.000000, 1098.000000, 1099.000000,\n1100.000000, 1101.000000, 1102.000000, 1103.000000, 1104.000000,\n1105.000000, 1106.000000, 1107.000000, 1108.000000, 1109.000000,\n1110.000000, 1111.000000, 1112.000000, 1113.000000, 1114.000000,\n1115.000000, 1116.000000, 1117.000000, 1118.000000, 1119.000000,\n1120.000000, 1121.000000, 1122.000000, 1123.000000, 1124.000000,\n1125.000000, 1126.000000, 1127.000000, 1128.000000, 1129.000000,\n1130.000000, 1131.000000, 1132.000000, 1133.000000, 1134.000000,\n1135.000000, 1136.000000, 1137.000000, 1138.000000, 1139.000000,\n1140.000000, 1141.000000, 1142.000000, 1143.000000, 1144.000000,\n1145.000000, 1146.000000, 1147.000000, 1148.000000, 1149.000000,\n1150.000000, 1151.000000, 1152.000000, 1153.000000, 1154.000000,\n1155.000000, 1156.000000, 1157.000000, 1158.000000, 1159.000000,\n1160.000000, 1161.000000, 1162.000000, 1163.000000, 1164.000000,\n1165.000000, 1166.000000, 1167.000000, 1168.000000, 1169.000000,\n1170.000000, 1171.000000, 1172.000000, 1173.000000, 1174.000000,\n1175.000000, 1176.000000, 1177.000000, 1178.000000, 1179.000000,\n1180.000000, 1181.000000, 1182.000000, 1183.000000, 1184.000000,\n1185.000000, 1186.000000, 1187.000000, 1188.000000, 1189.000000,\n1190.000000, 1191.000000, 1192.000000, 1193.000000, 1194.000000,\n1195.000000, 1196.000000, 1197.000000, 1198.000000, 1199.000000,\n1200.000000, 1201.000000, 1202.000000, 1203.000000, 1204.000000,\n1205.000000, 1206.000000, 1207.000000, 1208.000000, 1209.000000,\n1210.000000, 1211.000000, 1212.000000, 1213.000000, 1214.000000,\n1215.000000, 1216.000000, 1217.000000, 1218.000000, 1219.000000,\n1220.000000, 1221.000000, 1222.000000, 1223.000000, 1224.000000,\n1225.000000, 1226.000000, 1227.000000, 1228.000000, 1229.000000,\n1230.000000, 1231.000000, 1232.000000, 1233.000000, 1234.000000,\n1235.000000, 1236.000000, 1237.000000, 1238.000000, 1239.000000,\n1240.000000, 1241.000000, 1242.000000, 1243.000000, 1244.000000,\n1245.000000, 1246.000000, 1247.000000, 1248.000000, 1249.000000,\n1250.000000, 1251.000000, 1252.000000, 1253.000000, 1254.000000,\n1255.000000, 1256.000000, 1257.000000, 1258.000000, 1259.000000,\n1260.000000, 1261.000000, 1262.000000, 1263.000000, 1264.000000,\n1265.000000, 1266.000000, 1267.000000, 1268.000000, 1269.000000,\n1270.000000, 1271.000000, 1272.000000, 1273.000000, 1274.000000,\n1275.000000, 1276.000000, 1277.000000, 1278.000000, 1279.000000,\n1280.000000, 1281.000000, 1282.000000, 1283.000000, 1284.000000,\n1285.000000, 1286.000000, 1287.000000, 1288.000000, 1289.000000,\n1290.000000, 1291.000000, 1292.000000, 1293.000000, 1294.000000,\n1295.000000, 1296.000000, 1297.000000, 1298.000000, 1299.000000,\n1300.000000, 1301.000000, 1302.000000, 1303.000000, 1304.000000,\n1305.000000, 1306.000000, 1307.000000, 1308.000000, 1309.000000,\n1310.000000, 1311.000000, 1312.000000, 1313.000000, 1314.000000,\n1315.000000, 1316.000000, 1317.000000, 1318.000000, 1319.000000,\n1320.000000, 1321.000000, 1322.000000, 1323.000000, 1324.000000,\n1325.000000, 1326.000000, 1327.000000, 1328.000000, 1329.000000,\n1330.000000, 1331.000000, 1332.000000, 1333.000000, 1334.000000,\n1335.000000, 1336.000000, 1337.000000, 1338.000000, 1339.000000,\n1340.000000, 1341.000000, 1342.000000, 1343.000000, 1344.000000,\n1345.000000, 1346.000000, 1347.000000, 1348.000000, 1349.000000,\n1350.000000, 1351.000000, 1352.000000, 1353.000000, 1354.000000,\n1355.000000, 1356.000000, 1357.000000, 1358.000000, 1359.000000,\n1360.000000, 1361.000000, 1362.000000, 1363.000000, 1364.000000,\n1365.000000, 1366.000000, 1367.000000, 1368.000000, 1369.000000,\n1370.000000, 1371.000000, 1372.000000, 1373.000000, 1374.000000,\n1375.000000, 1376.000000, 1377.000000, 1378.000000, 1379.000000,\n1380.000000, 1381.000000, 1382.000000, 1383.000000, 1384.000000,\n1385.000000, 1386.000000, 1387.000000, 1388.000000, 1389.000000,\n1390.000000, 1391.000000, 1392.000000, 1393.000000, 1394.000000,\n1395.000000, 1396.000000, 1397.000000, 1398.000000, 1399.000000,\n1400.000000, 1401.000000, 1402.000000, 1403.000000, 1404.000000,\n1405.000000, 1406.000000, 1407.000000, 1408.000000, 1409.000000,\n1410.000000, 1411.000000, 1412.000000, 1413.000000, 1414.000000,\n1415.000000, 1416.000000, 1417.000000, 1418.000000, 1419.000000,\n1420.000000, 1421.000000, 1422.000000, 1423.000000, 1424.000000,\n1425.000000, 1426.000000, 1427.000000, 1428.000000, 1429.000000,\n1430.000000, 1431.000000, 1432.000000, 1433.000000, 1434.000000,\n1435.000000, 1436.000000, 1437.000000, 1438.000000, 1439.000000,\n1440.000000, 1441.000000, 1442.000000, 1443.000000, 1444.000000,\n1445.000000, 1446.000000, 1447.000000, 1448.000000, 1449.000000,\n1450.000000, 1451.000000, 1452.000000, 1453.000000, 1454.000000,\n1455.000000, 1456.000000, 1457.000000, 1458.000000, 1459.000000,\n1460.000000, 1461.000000, 1462.000000, 1463.000000, 1464.000000,\n1465.000000, 1466.000000, 1467.000000, 1468.000000, 1469.000000,\n1470.000000, 1471.000000, 1472.000000, 1473.000000, 1474.000000,\n1475.000000, 1476.000000, 1477.000000, 1478.000000, 1479.000000,\n1480.000000, 1481.000000, 1482.000000, 1483.000000, 1484.000000,\n1485.000000, 1486.000000, 1487.000000, 1488.000000, 1489.000000,\n1490.000000, 1491.000000, 1492.000000, 1493.000000, 1494.000000,\n1495.000000, 1496.000000, 1497.000000, 1498.000000, 1499.000000,\n1500.000000, 1501.000000, 1502.000000, 1503.000000, 1504.000000,\n1505.000000, 1506.000000, 1507.000000, 1508.000000, 1509.000000,\n1510.000000, 1511.000000, 1512.000000, 1513.000000, 1514.000000,\n1515.000000, 1516.000000, 1517.000000, 1518.000000, 1519.000000,\n1520.000000, 1521.000000, 1522.000000, 1523.000000, 1524.000000,\n1525.000000, 1526.000000, 1527.000000, 1528.000000, 1529.000000,\n1530.000000, 1531.000000, 1532.000000, 1533.000000, 1534.000000,\n1535.000000, 1536.000000, 1537.000000, 1538.000000, 1539.000000,\n1540.000000, 1541.000000, 1542.000000, 1543.000000, 1544.000000,\n1545.000000, 1546.000000, 1547.000000, 1548.000000, 1549.000000,\n1550.000000, 1551.000000, 1552.000000, 1553.000000, 1554.000000,\n1555.000000, 1556.000000, 1557.000000, 1558.000000, 1559.000000,\n1560.000000, 1561.000000, 1562.000000, 1563.000000, 1564.000000,\n1565.000000, 1566.000000, 1567.000000, 1568.000000, 1569.000000,\n1570.000000, 1571.000000, 1572.000000, 1573.000000, 1574.000000,\n1575.000000, 1576.000000, 1577.000000, 1578.000000, 1579.000000,\n1580.000000, 1581.000000, 1582.000000, 1583.000000, 1584.000000,\n1585.000000, 1586.000000, 1587.000000, 1588.000000, 1589.000000,\n1590.000000, 1591.000000, 1592.000000, 1593.000000, 1594.000000,\n1595.000000, 1596.000000, 1597.000000, 1598.000000, 1599.000000,\n1600.000000, 1601.000000, 1602.000000, 1603.000000, 1604.000000,\n1605.000000, 1606.000000, 1607.000000, 1608.000000, 1609.000000,\n1610.000000, 1611.000000, 1612.000000, 1613.000000, 1614.000000,\n1615.000000, 1616.000000, 1617.000000, 1618.000000, 1619.000000,\n1620.000000, 1621.000000, 1622.000000, 1623.000000, 1624.000000,\n1625.000000, 1626.000000, 1627.000000, 1628.000000, 1629.000000,\n1630.000000, 1631.000000, 1632.000000, 1633.000000, 1634.000000,\n1635.000000, 1636.000000, 1637.000000, 1638.000000, 1639.000000,\n1640.000000, 1641.000000, 1642.000000, 1643.000000, 1644.000000,\n1645.000000, 1646.000000, 1647.000000, 1648.000000, 1649.000000,\n1650.000000, 1651.000000, 1652.000000, 1653.000000, 1654.000000,\n1655.000000, 1656.000000, 1657.000000, 1658.000000, 1659.000000,\n1660.000000, 1661.000000, 1662.000000, 1663.000000, 1664.000000,\n1665.000000, 1666.000000, 1667.000000, 1668.000000, 1669.000000,\n1670.000000, 1671.000000, 1672.000000, 1673.000000, 1674.000000,\n1675.000000, 1676.000000, 1677.000000, 1678.000000, 1679.000000,\n1680.000000, 1681.000000, 1682.000000, 1683.000000, 1684.000000,\n1685.000000, 1686.000000, 1687.000000, 1688.000000, 1689.000000,\n1690.000000, 1691.000000, 1692.000000, 1693.000000, 1694.000000,\n1695.000000, 1696.000000, 1697.000000, 1698.000000, 1699.000000,\n1700.000000, 1701.000000, 1702.000000, 1703.000000, 1704.000000,\n1705.000000, 1706.000000, 1707.000000, 1708.000000, 1709.000000,\n1710.000000, 1711.000000, 1712.000000, 1713.000000, 1714.000000,\n1715.000000, 1716.000000, 1717.000000, 1718.000000, 1719.000000,\n1720.000000, 1721.000000, 1722.000000, 1723.000000, 1724.000000,\n1725.000000, 1726.000000, 1727.000000, 1728.000000, 1729.000000,\n1730.000000, 1731.000000, 1732.000000, 1733.000000, 1734.000000,\n1735.000000, 1736.000000, 1737.000000, 1738.000000, 1739.000000,\n1740.000000, 1741.000000, 1742.000000, 1743.000000, 1744.000000,\n1745.000000, 1746.000000, 1747.000000, 1748.000000, 1749.000000,\n1750.000000, 1751.000000, 1752.000000, 1753.000000, 1754.000000,\n1755.000000, 1756.000000, 1757.000000, 1758.000000, 1759.000000,\n1760.000000, 1761.000000, 1762.000000, 1763.000000, 1764.000000,\n1765.000000, 1766.000000, 1767.000000, 1768.000000, 1769.000000,\n1770.000000, 1771.000000, 1772.000000, 1773.000000, 1774.000000,\n1775.000000, 1776.000000, 1777.000000, 1778.000000, 1779.000000,\n1780.000000, 1781.000000, 1782.000000, 1783.000000, 1784.000000,\n1785.000000, 1786.000000, 1787.000000, 1788.000000, 1789.000000,\n1790.000000, 1791.000000, 1792.000000, 1793.000000, 1794.000000,\n1795.000000, 1796.000000, 1797.000000, 1798.000000, 1799.000000,\n1800.000000, 1801.000000, 1802.000000, 1803.000000, 1804.000000,\n1805.000000, 1806.000000, 1807.000000, 1808.000000, 1809.000000,\n1810.000000, 1811.000000, 1812.000000, 1813.000000, 1814.000000,\n1815.000000, 1816.000000, 1817.000000, 1818.000000, 1819.000000,\n1820.000000, 1821.000000, 1822.000000, 1823.000000, 1824.000000,\n1825.000000, 1826.000000, 1827.000000, 1828.000000, 1829.000000,\n1830.000000, 1831.000000, 1832.000000, 1833.000000, 1834.000000,\n1835.000000, 1836.000000, 1837.000000, 1838.000000, 1839.000000,\n1840.000000, 1841.000000, 1842.000000, 1843.000000, 1844.000000,\n1845.000000, 1846.000000, 1847.000000, 1848.000000, 1849.000000,\n1850.000000, 1851.000000, 1852.000000, 1853.000000, 1854.000000,\n1855.000000, 1856.000000, 1857.000000, 1858.000000, 1859.000000,\n1860.000000, 1861.000000, 1862.000000, 1863.000000, 1864.000000,\n1865.000000, 1866.000000, 1867.000000, 1868.000000, 1869.000000,\n1870.000000, 1871.000000, 1872.000000, 1873.000000, 1874.000000,\n1875.000000, 1876.000000, 1877.000000, 1878.000000, 1879.000000,\n1880.000000, 1881.000000, 1882.000000, 1883.000000, 1884.000000,\n1885.000000, 1886.000000, 1887.000000, 1888.000000, 1889.000000,\n1890.000000, 1891.000000, 1892.000000, 1893.000000, 1894.000000,\n1895.000000, 1896.000000, 1897.000000, 1898.000000, 1899.000000,\n1900.000000, 1901.000000, 1902.000000, 1903.000000, 1904.000000,\n1905.000000, 1906.000000, 1907.000000, 1908.000000, 1909.000000,\n1910.000000, 1911.000000, 1912.000000, 1913.000000, 1914.000000,\n1915.000000, 1916.000000, 1917.000000, 1918.000000, 1919.000000,\n1920.000000, 1921.000000, 1922.000000, 1923.000000, 1924.000000,\n1925.000000, 1926.000000, 1927.000000, 1928.000000, 1929.000000,\n1930.000000, 1931.000000, 1932.000000, 1933.000000, 1934.000000,\n1935.000000, 1936.000000, 1937.000000, 1938.000000, 1939.000000,\n1940.000000, 1941.000000, 1942.000000, 1943.000000, 1944.000000,\n1945.000000, 1946.000000, 1947.000000, 1948.000000, 1949.000000,\n1950.000000, 1951.000000, 1952.000000, 1953.000000, 1954.000000,\n1955.000000, 1956.000000, 1957.000000, 1958.000000, 1959.000000,\n1960.000000, 1961.000000, 1962.000000, 1963.000000, 1964.000000,\n1965.000000, 1966.000000, 1967.000000, 1968.000000, 1969.000000,\n1970.000000, 1971.000000, 1972.000000, 1973.000000, 1974.000000,\n1975.000000, 1976.000000, 1977.000000, 1978.000000, 1979.000000,\n1980.000000, 1981.000000, 1982.000000, 1983.000000, 1984.000000,\n1985.000000, 1986.000000, 1987.000000, 1988.000000, 1989.000000,\n1990.000000, 1991.000000, 1992.000000, 1993.000000, 1994.000000,\n1995.000000, 1996.000000, 1997.000000, 1998.000000, 1999.000000,\n2000.000000, 2001.000000, 2002.000000, 2003.000000, 2004.000000,\n2005.000000, 2006.000000, 2007.000000, 2008.000000, 2009.000000,\n2010.000000, 2011.000000, 2012.000000, 2013.000000, 2014.000000,\n2015.000000, 2016.000000, 2017.000000, 2018.000000, 2019.000000,\n2020.000000, 2021.000000, 2022.000000, 2023.000000, 2024.000000,\n2025.000000, 2026.000000, 2027.000000, 2028.000000, 2029.000000,\n2030.000000, 2031.000000, 2032.000000, 2033.000000, 2034.000000,\n2035.000000, 2036.000000, 2037.000000, 2038.000000, 2039.000000,\n2040.000000, 2041.000000, 2042.000000, 2043.000000, 2044.000000,\n2045.000000, 2046.000000, 2047.000000, 2048.000000, 2049.000000,\n2050.000000, 2051.000000, 2052.000000, 2053.000000, 2054.000000,\n2055.000000, 2056.000000, 2057.000000, 2058.000000, 2059.000000,\n2060.000000, 2061.000000, 2062.000000, 2063.000000, 2064.000000,\n2065.000000, 2066.000000, 2067.000000, 2068.000000, 2069.000000,\n2070.000000, 2071.000000, 2072.000000, 2073.000000, 2074.000000,\n2075.000000, 2076.000000, 2077.000000, 2078.000000, 2079.000000,\n2080.000000, 2081.000000, 2082.000000, 2083.000000, 2084.000000,\n2085.000000, 2086.000000, 2087.000000, 2088.000000, 2089.000000,\n2090.000000, 2091.000000, 2092.000000, 2093.000000, 2094.000000,\n2095.000000, 2096.000000, 2097.000000, 2098.000000, 2099.000000,\n2100.000000, 2101.000000, 2102.000000, 2103.000000, 2104.000000,\n2105.000000, 2106.000000, 2107.000000, 2108.000000, 2109.000000,\n2110.000000, 2111.000000, 2112.000000, 2113.000000, 2114.000000,\n2115.000000, 2116.000000, 2117.000000, 2118.000000, 2119.000000,\n2120.000000, 2121.000000, 2122.000000, 2123.000000, 2124.000000,\n2125.000000, 2126.000000, 2127.000000, 2128.000000, 2129.000000,\n2130.000000, 2131.000000, 2132.000000, 2133.000000, 2134.000000,\n2135.000000, 2136.000000, 2137.000000, 2138.000000, 2139.000000,\n2140.000000, 2141.000000, 2142.000000, 2143.000000, 2144.000000,\n2145.000000, 2146.000000, 2147.000000, 2148.000000, 2149.000000,\n2150.000000, 2151.000000, 2152.000000, 2153.000000, 2154.000000,\n2155.000000, 2156.000000, 2157.000000, 2158.000000, 2159.000000,\n2160.000000, 2161.000000, 2162.000000, 2163.000000, 2164.000000,\n2165.000000, 2166.000000, 2167.000000, 2168.000000, 2169.000000,\n2170.000000, 2171.000000, 2172.000000, 2173.000000, 2174.000000,\n2175.000000, 2176.000000, 2177.000000, 2178.000000, 2179.000000,\n2180.000000, 2181.000000, 2182.000000, 2183.000000, 2184.000000,\n2185.000000, 2186.000000, 2187.000000, 2188.000000, 2189.000000,\n2190.000000, 2191.000000, 2192.000000, 2193.000000, 2194.000000,\n2195.000000, 2196.000000, 2197.000000, 2198.000000, 2199.000000,\n2200.000000, 2201.000000, 2202.000000, 2203.000000, 2204.000000,\n2205.000000, 2206.000000, 2207.000000, 2208.000000, 2209.000000,\n2210.000000, 2211.000000, 2212.000000, 2213.000000, 2214.000000,\n2215.000000, 2216.000000, 2217.000000, 2218.000000, 2219.000000,\n2220.000000, 2221.000000, 2222.000000, 2223.000000, 2224.000000,\n2225.000000, 2226.000000, 2227.000000, 2228.000000, 2229.000000,\n2230.000000, 2231.000000, 2232.000000, 2233.000000, 2234.000000,\n2235.000000, 2236.000000, 2237.000000, 2238.000000, 2239.000000,\n2240.000000, 2241.000000, 2242.000000, 2243.000000, 2244.000000,\n2245.000000, 2246.000000, 2247.000000, 2248.000000, 2249.000000,\n2250.000000, 2251.000000, 2252.000000, 2253.000000, 2254.000000,\n2255.000000, 2256.000000, 2257.000000, 2258.000000, 2259.000000,\n2260.000000, 2261.000000, 2262.000000, 2263.000000, 2264.000000,\n2265.000000, 2266.000000, 2267.000000, 2268.000000, 2269.000000,\n2270.000000, 2271.000000, 2272.000000, 2273.000000, 2274.000000,\n2275.000000, 2276.000000, 2277.000000, 2278.000000, 2279.000000,\n2280.000000, 2281.000000, 2282.000000, 2283.000000, 2284.000000,\n2285.000000, 2286.000000, 2287.000000, 2288.000000, 2289.000000,\n2290.000000, 2291.000000, 2292.000000, 2293.000000, 2294.000000,\n2295.000000, 2296.000000, 2297.000000, 2298.000000, 2299.000000,\n2300.000000, 2301.000000, 2302.000000, 2303.000000, 2304.000000,\n2305.000000, 2306.000000, 2307.000000, 2308.000000, 2309.000000,\n2310.000000, 2311.000000, 2312.000000, 2313.000000, 2314.000000,\n2315.000000, 2316.000000, 2317.000000, 2318.000000, 2319.000000,\n2320.000000, 2321.000000, 2322.000000, 2323.000000, 2324.000000,\n2325.000000, 2326.000000, 2327.000000, 2328.000000, 2329.000000,\n2330.000000, 2331.000000, 2332.000000, 2333.000000, 2334.000000,\n2335.000000, 2336.000000, 2337.000000, 2338.000000, 2339.000000,\n2340.000000, 2341.000000, 2342.000000, 2343.000000, 2344.000000,\n2345.000000, 2346.000000, 2347.000000, 2348.000000, 2349.000000,\n2350.000000, 2351.000000, 2352.000000, 2353.000000, 2354.000000,\n2355.000000, 2356.000000, 2357.000000, 2358.000000, 2359.000000,\n2360.000000, 2361.000000, 2362.000000, 2363.000000, 2364.000000,\n2365.000000, 2366.000000, 2367.000000, 2368.000000, 2369.000000,\n2370.000000, 2371.000000, 2372.000000, 2373.000000, 2374.000000,\n2375.000000, 2376.000000, 2377.000000, 2378.000000, 2379.000000,\n2380.000000, 2381.000000, 2382.000000, 2383.000000, 2384.000000,\n2385.000000, 2386.000000, 2387.000000, 2388.000000, 2389.000000,\n2390.000000, 2391.000000, 2392.000000, 2393.000000, 2394.000000,\n2395.000000, 2396.000000, 2397.000000, 2398.000000, 2399.000000,\n2400.000000, 2401.000000, 2402.000000, 2403.000000, 2404.000000,\n2405.000000, 2406.000000, 2407.000000, 2408.000000, 2409.000000,\n2410.000000, 2411.000000, 2412.000000, 2413.000000, 2414.000000,\n2415.000000, 2416.000000, 2417.000000, 2418.000000, 2419.000000,\n2420.000000, 2421.000000, 2422.000000, 2423.000000, 2424.000000,\n2425.000000, 2426.000000, 2427.000000, 2428.000000, 2429.000000,\n2430.000000, 2431.000000, 2432.000000, 2433.000000, 2434.000000,\n2435.000000, 2436.000000, 2437.000000, 2438.000000, 2439.000000,\n2440.000000, 2441.000000, 2442.000000, 2443.000000, 2444.000000,\n2445.000000, 2446.000000, 2447.000000, 2448.000000, 2449.000000,\n2450.000000, 2451.000000, 2452.000000, 2453.000000, 2454.000000,\n2455.000000, 2456.000000, 2457.000000, 2458.000000, 2459.000000,\n2460.000000, 2461.000000, 2462.000000, 2463.000000, 2464.000000,\n2465.000000, 2466.000000, 2467.000000, 2468.000000, 2469.000000,\n2470.000000, 2471.000000, 2472.000000, 2473.000000, 2474.000000,\n2475.000000, 2476.000000, 2477.000000, 2478.000000, 2479.000000,\n2480.000000, 2481.000000, 2482.000000, 2483.000000, 2484.000000,\n2485.000000, 2486.000000, 2487.000000, 2488.000000, 2489.000000,\n2490.000000, 2491.000000, 2492.000000, 2493.000000, 2494.000000,\n2495.000000, 2496.000000, 2497.000000, 2498.000000, 2499.000000,\n2500.000000, 2501.000000, 2502.000000, 2503.000000, 2504.000000,\n2505.000000, 2506.000000, 2507.000000, 2508.000000, 2509.000000,\n2510.000000, 2511.000000, 2512.000000, 2513.000000, 2514.000000,\n2515.000000, 2516.000000, 2517.000000, 2518.000000, 2519.000000,\n2520.000000, 2521.000000, 2522.000000, 2523.000000, 2524.000000,\n2525.000000, 2526.000000, 2527.000000, 2528.000000, 2529.000000,\n2530.000000, 2531.000000, 2532.000000, 2533.000000, 2534.000000,\n2535.000000, 2536.000000, 2537.000000, 2538.000000, 2539.000000,\n2540.000000, 2541.000000, 2542.000000, 2543.000000, 2544.000000,\n2545.000000, 2546.000000, 2547.000000, 2548.000000, 2549.000000,\n2550.000000, 2551.000000, 2552.000000, 2553.000000, 2554.000000,\n2555.000000, 2556.000000, 2557.000000, 2558.000000, 2559.000000,\n2560.000000, 2561.000000, 2562.000000, 2563.000000, 2564.000000,\n2565.000000, 2566.000000, 2567.000000, 2568.000000, 2569.000000,\n2570.000000, 2571.000000, 2572.000000, 2573.000000, 2574.000000,\n2575.000000, 2576.000000, 2577.000000, 2578.000000, 2579.000000,\n2580.000000, 2581.000000, 2582.000000, 2583.000000, 2584.000000,\n2585.000000, 2586.000000, 2587.000000, 2588.000000, 2589.000000,\n2590.000000, 2591.000000, 2592.000000, 2593.000000, 2594.000000,\n2595.000000, 2596.000000, 2597.000000, 2598.000000, 2599.000000,\n2600.000000, 2601.000000, 2602.000000, 2603.000000, 2604.000000,\n2605.000000, 2606.000000, 2607.000000, 2608.000000, 2609.000000,\n2610.000000, 2611.000000, 2612.000000, 2613.000000, 2614.000000,\n2615.000000, 2616.000000, 2617.000000, 2618.000000, 2619.000000,\n2620.000000, 2621.000000, 2622.000000, 2623.000000, 2624.000000,\n2625.000000, 2626.000000, 2627.000000, 2628.000000, 2629.000000,\n2630.000000, 2631.000000, 2632.000000, 2633.000000, 2634.000000,\n2635.000000, 2636.000000, 2637.000000, 2638.000000, 2639.000000,\n2640.000000, 2641.000000, 2642.000000, 2643.000000, 2644.000000,\n2645.000000, 2646.000000, 2647.000000, 2648.000000, 2649.000000,\n2650.000000, 2651.000000, 2652.000000, 2653.000000, 2654.000000,\n2655.000000, 2656.000000, 2657.000000, 2658.000000, 2659.000000,\n2660.000000, 2661.000000, 2662.000000, 2663.000000, 2664.000000,\n2665.000000, 2666.000000, 2667.000000, 2668.000000, 2669.000000,\n2670.000000, 2671.000000, 2672.000000, 2673.000000, 2674.000000,\n2675.000000, 2676.000000, 2677.000000, 2678.000000, 2679.000000,\n2680.000000, 2681.000000, 2682.000000, 2683.000000, 2684.000000,\n2685.000000, 2686.000000, 2687.000000, 2688.000000, 2689.000000,\n2690.000000, 2691.000000, 2692.000000, 2693.000000, 2694.000000,\n2695.000000, 2696.000000, 2697.000000, 2698.000000, 2699.000000,\n2700.000000, 2701.000000, 2702.000000, 2703.000000, 2704.000000,\n2705.000000, 2706.000000, 2707.000000, 2708.000000, 2709.000000,\n2710.000000, 2711.000000, 2712.000000, 2713.000000, 2714.000000,\n2715.000000, 2716.000000, 2717.000000, 2718.000000, 2719.000000,\n2720.000000, 2721.000000, 2722.000000, 2723.000000, 2724.000000,\n2725.000000, 2726.000000, 2727.000000, 2728.000000, 2729.000000,\n2730.000000, 2731.000000, 2732.000000, 2733.000000, 2734.000000,\n2735.000000, 2736.000000, 2737.000000, 2738.000000, 2739.000000,\n2740.000000, 2741.000000, 2742.000000, 2743.000000, 2744.000000,\n2745.000000, 2746.000000, 2747.000000, 2748.000000, 2749.000000,\n2750.000000, 2751.000000, 2752.000000, 2753.000000, 2754.000000,\n2755.000000, 2756.000000, 2757.000000, 2758.000000, 2759.000000,\n2760.000000, 2761.000000, 2762.000000, 2763.000000, 2764.000000,\n2765.000000, 2766.000000, 2767.000000, 2768.000000, 2769.000000,\n2770.000000, 2771.000000, 2772.000000, 2773.000000, 2774.000000,\n2775.000000, 2776.000000, 2777.000000, 2778.000000, 2779.000000,\n2780.000000, 2781.000000, 2782.000000, 2783.000000, 2784.000000,\n2785.000000, 2786.000000, 2787.000000, 2788.000000, 2789.000000,\n2790.000000, 2791.000000, 2792.000000, 2793.000000, 2794.000000,\n2795.000000, 2796.000000, 2797.000000, 2798.000000, 2799.000000,\n2800.000000, 2801.000000, 2802.000000, 2803.000000, 2804.000000,\n2805.000000, 2806.000000, 2807.000000, 2808.000000, 2809.000000,\n2810.000000, 2811.000000, 2812.000000, 2813.000000, 2814.000000,\n2815.000000, 2816.000000, 2817.000000, 2818.000000, 2819.000000,\n2820.000000, 2821.000000, 2822.000000, 2823.000000, 2824.000000,\n2825.000000, 2826.000000, 2827.000000, 2828.000000, 2829.000000,\n2830.000000, 2831.000000, 2832.000000, 2833.000000, 2834.000000,\n2835.000000, 2836.000000, 2837.000000, 2838.000000, 2839.000000,\n2840.000000, 2841.000000, 2842.000000, 2843.000000, 2844.000000,\n2845.000000, 2846.000000, 2847.000000, 2848.000000, 2849.000000,\n2850.000000, 2851.000000, 2852.000000, 2853.000000, 2854.000000,\n2855.000000, 2856.000000, 2857.000000, 2858.000000, 2859.000000,\n2860.000000, 2861.000000, 2862.000000, 2863.000000, 2864.000000,\n2865.000000, 2866.000000, 2867.000000, 2868.000000, 2869.000000,\n2870.000000, 2871.000000, 2872.000000, 2873.000000, 2874.000000,\n2875.000000, 2876.000000, 2877.000000, 2878.000000, 2879.000000,\n2880.000000, 2881.000000, 2882.000000, 2883.000000, 2884.000000,\n2885.000000, 2886.000000, 2887.000000, 2888.000000, 2889.000000,\n2890.000000, 2891.000000, 2892.000000, 2893.000000, 2894.000000,\n2895.000000, 2896.000000, 2897.000000, 2898.000000, 2899.000000,\n2900.000000, 2901.000000, 2902.000000, 2903.000000, 2904.000000,\n2905.000000, 2906.000000, 2907.000000, 2908.000000, 2909.000000,\n2910.000000, 2911.000000, 2912.000000, 2913.000000, 2914.000000,\n2915.000000, 2916.000000, 2917.000000, 2918.000000, 2919.000000,\n2920.000000, 2921.000000, 2922.000000, 2923.000000, 2924.000000,\n2925.000000, 2926.000000, 2927.000000, 2928.000000, 2929.000000,\n2930.000000, 2931.000000, 2932.000000, 2933.000000, 2934.000000,\n2935.000000, 2936.000000, 2937.000000, 2938.000000, 2939.000000,\n2940.000000, 2941.000000, 2942.000000, 2943.000000, 2944.000000,\n2945.000000, 2946.000000, 2947.000000, 2948.000000, 2949.000000,\n2950.000000, 2951.000000, 2952.000000, 2953.000000, 2954.000000,\n2955.000000, 2956.000000, 2957.000000, 2958.000000, 2959.000000,\n2960.000000, 2961.000000, 2962.000000, 2963.000000, 2964.000000,\n2965.000000, 2966.000000, 2967.000000, 2968.000000, 2969.000000,\n2970.000000, 2971.000000, 2972.000000, 2973.000000, 2974.000000,\n2975.000000, 2976.000000, 2977.000000, 2978.000000, 2979.000000,\n2980.000000, 2981.000000, 2982.000000, 2983.000000, 2984.000000,\n2985.000000, 2986.000000, 2987.000000, 2988.000000, 2989.000000,\n2990.000000, 2991.000000, 2992.000000, 2993.000000, 2994.000000,\n2995.000000, 2996.000000, 2997.000000, 2998.000000, 2999.000000,\n3000.000000, 3001.000000, 3002.000000, 3003.000000, 3004.000000,\n3005.000000, 3006.000000, 3007.000000, 3008.000000, 3009.000000,\n3010.000000, 3011.000000, 3012.000000, 3013.000000, 3014.000000,\n3015.000000, 3016.000000, 3017.000000, 3018.000000, 3019.000000,\n3020.000000, 3021.000000, 3022.000000, 3023.000000, 3024.000000,\n3025.000000, 3026.000000, 3027.000000, 3028.000000, 3029.000000,\n3030.000000, 3031.000000, 3032.000000, 3033.000000, 3034.000000,\n3035.000000, 3036.000000, 3037.000000, 3038.000000, 3039.000000,\n3040.000000, 3041.000000, 3042.000000, 3043.000000, 3044.000000,\n3045.000000, 3046.000000, 3047.000000, 3048.000000, 3049.000000,\n3050.000000, 3051.000000, 3052.000000, 3053.000000, 3054.000000,\n3055.000000, 3056.000000, 3057.000000, 3058.000000, 3059.000000,\n3060.000000, 3061.000000, 3062.000000, 3063.000000, 3064.000000,\n3065.000000, 3066.000000, 3067.000000, 3068.000000, 3069.000000,\n3070.000000, 3071.000000, 3072.000000, 3073.000000, 3074.000000,\n3075.000000, 3076.000000, 3077.000000, 3078.000000, 3079.000000,\n3080.000000, 3081.000000, 3082.000000, 3083.000000, 3084.000000,\n3085.000000, 3086.000000, 3087.000000, 3088.000000, 3089.000000,\n3090.000000, 3091.000000, 3092.000000, 3093.000000, 3094.000000,\n3095.000000, 3096.000000, 3097.000000, 3098.000000, 3099.000000,\n3100.000000, 3101.000000, 3102.000000, 3103.000000, 3104.000000,\n3105.000000, 3106.000000, 3107.000000, 3108.000000, 3109.000000,\n3110.000000, 3111.000000, 3112.000000, 3113.000000, 3114.000000,\n3115.000000, 3116.000000, 3117.000000, 3118.000000, 3119.000000,\n3120.000000, 3121.000000, 3122.000000, 3123.000000, 3124.000000,\n3125.000000, 3126.000000, 3127.000000, 3128.000000, 3129.000000,\n3130.000000, 3131.000000, 3132.000000, 3133.000000, 3134.000000,\n3135.000000, 3136.000000, 3137.000000, 3138.000000, 3139.000000,\n3140.000000, 3141.000000, 3142.000000, 3143.000000, 3144.000000,\n3145.000000, 3146.000000, 3147.000000, 3148.000000, 3149.000000,\n3150.000000, 3151.000000, 3152.000000, 3153.000000, 3154.000000,\n3155.000000, 3156.000000, 3157.000000, 3158.000000, 3159.000000,\n3160.000000, 3161.000000, 3162.000000, 3163.000000, 3164.000000,\n3165.000000, 3166.000000, 3167.000000, 3168.000000, 3169.000000,\n3170.000000, 3171.000000, 3172.000000, 3173.000000, 3174.000000,\n3175.000000, 3176.000000, 3177.000000, 3178.000000, 3179.000000,\n3180.000000, 3181.000000, 3182.000000, 3183.000000, 3184.000000,\n3185.000000, 3186.000000, 3187.000000, 3188.000000, 3189.000000,\n3190.000000, 3191.000000, 3192.000000, 3193.000000, 3194.000000,\n3195.000000, 3196.000000, 3197.000000, 3198.000000, 3199.000000,\n3200.000000, 3201.000000, 3202.000000, 3203.000000, 3204.000000,\n3205.000000, 3206.000000, 3207.000000, 3208.000000, 3209.000000,\n3210.000000, 3211.000000, 3212.000000, 3213.000000, 3214.000000,\n3215.000000, 3216.000000, 3217.000000, 3218.000000, 3219.000000,\n3220.000000, 3221.000000, 3222.000000, 3223.000000, 3224.000000,\n3225.000000, 3226.000000, 3227.000000, 3228.000000, 3229.000000,\n3230.000000, 3231.000000, 3232.000000, 3233.000000, 3234.000000,\n3235.000000, 3236.000000, 3237.000000, 3238.000000, 3239.000000,\n3240.000000, 3241.000000, 3242.000000, 3243.000000, 3244.000000,\n3245.000000, 3246.000000, 3247.000000, 3248.000000, 3249.000000,\n3250.000000, 3251.000000, 3252.000000, 3253.000000, 3254.000000,\n3255.000000, 3256.000000, 3257.000000, 3258.000000, 3259.000000,\n3260.000000, 3261.000000, 3262.000000, 3263.000000, 3264.000000,\n3265.000000, 3266.000000, 3267.000000, 3268.000000, 3269.000000,\n3270.000000, 3271.000000, 3272.000000, 3273.000000, 3274.000000,\n3275.000000, 3276.000000, 3277.000000, 3278.000000, 3279.000000,\n3280.000000, 3281.000000, 3282.000000, 3283.000000, 3284.000000,\n3285.000000, 3286.000000, 3287.000000, 3288.000000, 3289.000000,\n3290.000000, 3291.000000, 3292.000000, 3293.000000, 3294.000000,\n3295.000000, 3296.000000, 3297.000000, 3298.000000, 3299.000000,\n3300.000000, 3301.000000, 3302.000000, 3303.000000, 3304.000000,\n3305.000000, 3306.000000, 3307.000000, 3308.000000, 3309.000000,\n3310.000000, 3311.000000, 3312.000000, 3313.000000, 3314.000000,\n3315.000000, 3316.000000, 3317.000000, 3318.000000, 3319.000000,\n3320.000000, 3321.000000, 3322.000000, 3323.000000, 3324.000000,\n3325.000000, 3326.000000, 3327.000000, 3328.000000, 3329.000000,\n3330.000000, 3331.000000, 3332.000000, 3333.000000, 3334.000000,\n3335.000000, 3336.000000, 3337.000000, 3338.000000, 3339.000000,\n3340.000000, 3341.000000, 3342.000000, 3343.000000, 3344.000000,\n3345.000000, 3346.000000, 3347.000000, 3348.000000, 3349.000000,\n3350.000000, 3351.000000, 3352.000000, 3353.000000, 3354.000000,\n3355.000000, 3356.000000, 3357.000000, 3358.000000, 3359.000000,\n3360.000000, 3361.000000, 3362.000000, 3363.000000, 3364.000000,\n3365.000000, 3366.000000, 3367.000000, 3368.000000, 3369.000000,\n3370.000000, 3371.000000, 3372.000000, 3373.000000, 3374.000000,\n3375.000000, 3376.000000, 3377.000000, 3378.000000, 3379.000000,\n3380.000000, 3381.000000, 3382.000000, 3383.000000, 3384.000000,\n3385.000000, 3386.000000, 3387.000000, 3388.000000, 3389.000000,\n3390.000000, 3391.000000, 3392.000000, 3393.000000, 3394.000000,\n3395.000000, 3396.000000, 3397.000000, 3398.000000, 3399.000000,\n3400.000000, 3401.000000, 3402.000000, 3403.000000, 3404.000000,\n3405.000000, 3406.000000, 3407.000000, 3408.000000, 3409.000000,\n3410.000000, 3411.000000, 3412.000000, 3413.000000, 3414.000000,\n3415.000000, 3416.000000, 3417.000000, 3418.000000, 3419.000000,\n3420.000000, 3421.000000, 3422.000000, 3423.000000, 3424.000000,\n3425.000000, 3426.000000, 3427.000000, 3428.000000, 3429.000000,\n3430.000000, 3431.000000, 3432.000000, 3433.000000, 3434.000000,\n3435.000000, 3436.000000, 3437.000000, 3438.000000, 3439.000000,\n3440.000000, 3441.000000, 3442.000000, 3443.000000, 3444.000000,\n3445.000000, 3446.000000, 3447.000000, 3448.000000, 3449.000000,\n3450.000000, 3451.000000, 3452.000000, 3453.000000, 3454.000000,\n3455.000000, 3456.000000, 3457.000000, 3458.000000, 3459.000000,\n3460.000000, 3461.000000, 3462.000000, 3463.000000, 3464.000000,\n3465.000000, 3466.000000, 3467.000000, 3468.000000, 3469.000000,\n3470.000000, 3471.000000, 3472.000000, 3473.000000, 3474.000000,\n3475.000000, 3476.000000, 3477.000000, 3478.000000, 3479.000000,\n3480.000000, 3481.000000, 3482.000000, 3483.000000, 3484.000000,\n3485.000000, 3486.000000, 3487.000000, 3488.000000, 3489.000000,\n3490.000000, 3491.000000, 3492.000000, 3493.000000, 3494.000000,\n3495.000000, 3496.000000, 3497.000000, 3498.000000, 3499.000000,\n3500.000000, 3501.000000, 3502.000000, 3503.000000, 3504.000000,\n3505.000000, 3506.000000, 3507.000000, 3508.000000, 3509.000000,\n3510.000000, 3511.000000, 3512.000000, 3513.000000, 3514.000000,\n3515.000000, 3516.000000, 3517.000000, 3518.000000, 3519.000000,\n3520.000000, 3521.000000, 3522.000000, 3523.000000, 3524.000000,\n3525.000000, 3526.000000, 3527.000000, 3528.000000, 3529.000000,\n3530.000000, 3531.000000, 3532.000000, 3533.000000, 3534.000000,\n3535.000000, 3536.000000, 3537.000000, 3538.000000, 3539.000000,\n3540.000000, 3541.000000, 3542.000000, 3543.000000, 3544.000000,\n3545.000000, 3546.000000, 3547.000000, 3548.000000, 3549.000000,\n3550.000000, 3551.000000, 3552.000000, 3553.000000, 3554.000000,\n3555.000000, 3556.000000, 3557.000000, 3558.000000, 3559.000000,\n3560.000000, 3561.000000, 3562.000000, 3563.000000, 3564.000000,\n3565.000000, 3566.000000, 3567.000000, 3568.000000, 3569.000000,\n3570.000000, 3571.000000, 3572.000000, 3573.000000, 3574.000000,\n3575.000000, 3576.000000, 3577.000000, 3578.000000, 3579.000000,\n3580.000000, 3581.000000, 3582.000000, 3583.000000, 3584.000000,\n3585.000000, 3586.000000, 3587.000000, 3588.000000, 3589.000000,\n3590.000000, 3591.000000, 3592.000000, 3593.000000, 3594.000000,\n3595.000000, 3596.000000, 3597.000000, 3598.000000, 3599.000000,\n3600.000000, 3601.000000, 3602.000000, 3603.000000, 3604.000000,\n3605.000000, 3606.000000, 3607.000000, 3608.000000, 3609.000000,\n3610.000000, 3611.000000, 3612.000000, 3613.000000, 3614.000000,\n3615.000000, 3616.000000, 3617.000000, 3618.000000, 3619.000000,\n3620.000000, 3621.000000, 3622.000000, 3623.000000, 3624.000000,\n3625.000000, 3626.000000, 3627.000000, 3628.000000, 3629.000000,\n3630.000000, 3631.000000, 3632.000000, 3633.000000, 3634.000000,\n3635.000000, 3636.000000, 3637.000000, 3638.000000, 3639.000000,\n3640.000000, 3641.000000, 3642.000000, 3643.000000, 3644.000000,\n3645.000000, 3646.000000, 3647.000000, 3648.000000, 3649.000000,\n3650.000000, 3651.000000, 3652.000000, 3653.000000, 3654.000000,\n3655.000000, 3656.000000, 3657.000000, 3658.000000, 3659.000000,\n3660.000000, 3661.000000, 3662.000000, 3663.000000, 3664.000000,\n3665.000000, 3666.000000, 3667.000000, 3668.000000, 3669.000000,\n3670.000000, 3671.000000, 3672.000000, 3673.000000, 3674.000000,\n3675.000000, 3676.000000, 3677.000000, 3678.000000, 3679.000000,\n3680.000000, 3681.000000, 3682.000000, 3683.000000, 3684.000000,\n3685.000000, 3686.000000, 3687.000000, 3688.000000, 3689.000000,\n3690.000000, 3691.000000, 3692.000000, 3693.000000, 3694.000000,\n3695.000000, 3696.000000, 3697.000000, 3698.000000, 3699.000000,\n3700.000000, 3701.000000, 3702.000000, 3703.000000, 3704.000000,\n3705.000000, 3706.000000, 3707.000000, 3708.000000, 3709.000000,\n3710.000000, 3711.000000, 3712.000000, 3713.000000, 3714.000000,\n3715.000000, 3716.000000, 3717.000000, 3718.000000, 3719.000000,\n3720.000000, 3721.000000, 3722.000000, 3723.000000, 3724.000000,\n3725.000000, 3726.000000, 3727.000000, 3728.000000, 3729.000000,\n3730.000000, 3731.000000, 3732.000000, 3733.000000, 3734.000000,\n3735.000000, 3736.000000, 3737.000000, 3738.000000, 3739.000000,\n3740.000000, 3741.000000, 3742.000000, 3743.000000, 3744.000000,\n3745.000000, 3746.000000, 3747.000000, 3748.000000, 3749.000000,\n3750.000000, 3751.000000, 3752.000000, 3753.000000, 3754.000000,\n3755.000000, 3756.000000, 3757.000000, 3758.000000, 3759.000000,\n3760.000000, 3761.000000, 3762.000000, 3763.000000, 3764.000000,\n3765.000000, 3766.000000, 3767.000000, 3768.000000, 3769.000000,\n3770.000000, 3771.000000, 3772.000000, 3773.000000, 3774.000000,\n3775.000000, 3776.000000, 3777.000000, 3778.000000, 3779.000000,\n3780.000000, 3781.000000, 3782.000000, 3783.000000, 3784.000000,\n3785.000000, 3786.000000, 3787.000000, 3788.000000, 3789.000000,\n3790.000000, 3791.000000, 3792.000000, 3793.000000, 3794.000000,\n3795.000000, 3796.000000, 3797.000000, 3798.000000, 3799.000000,\n3800.000000, 3801.000000, 3802.000000, 3803.000000, 3804.000000,\n3805.000000, 3806.000000, 3807.000000, 3808.000000, 3809.000000,\n3810.000000, 3811.000000, 3812.000000, 3813.000000, 3814.000000,\n3815.000000, 3816.000000, 3817.000000, 3818.000000, 3819.000000,\n3820.000000, 3821.000000, 3822.000000, 3823.000000, 3824.000000,\n3825.000000, 3826.000000, 3827.000000, 3828.000000, 3829.000000,\n3830.000000, 3831.000000, 3832.000000, 3833.000000, 3834.000000,\n3835.000000, 3836.000000, 3837.000000, 3838.000000, 3839.000000,\n3840.000000, 3841.000000, 3842.000000, 3843.000000, 3844.000000,\n3845.000000, 3846.000000, 3847.000000, 3848.000000, 3849.000000,\n3850.000000, 3851.000000, 3852.000000, 3853.000000, 3854.000000,\n3855.000000, 3856.000000, 3857.000000, 3858.000000, 3859.000000,\n3860.000000, 3861.000000, 3862.000000, 3863.000000, 3864.000000,\n3865.000000, 3866.000000, 3867.000000, 3868.000000, 3869.000000,\n3870.000000, 3871.000000, 3872.000000, 3873.000000, 3874.000000,\n3875.000000, 3876.000000, 3877.000000, 3878.000000, 3879.000000,\n3880.000000, 3881.000000, 3882.000000, 3883.000000, 3884.000000,\n3885.000000, 3886.000000, 3887.000000, 3888.000000, 3889.000000,\n3890.000000, 3891.000000, 3892.000000, 3893.000000, 3894.000000,\n3895.000000, 3896.000000, 3897.000000, 3898.000000, 3899.000000,\n3900.000000, 3901.000000, 3902.000000, 3903.000000, 3904.000000,\n3905.000000, 3906.000000, 3907.000000, 3908.000000, 3909.000000,\n3910.000000, 3911.000000, 3912.000000, 3913.000000, 3914.000000,\n3915.000000, 3916.000000, 3917.000000, 3918.000000, 3919.000000,\n3920.000000, 3921.000000, 3922.000000, 3923.000000, 3924.000000,\n3925.000000, 3926.000000, 3927.000000, 3928.000000, 3929.000000,\n3930.000000, 3931.000000, 3932.000000, 3933.000000, 3934.000000,\n3935.000000, 3936.000000, 3937.000000, 3938.000000, 3939.000000,\n3940.000000, 3941.000000, 3942.000000, 3943.000000, 3944.000000,\n3945.000000, 3946.000000, 3947.000000, 3948.000000, 3949.000000,\n3950.000000, 3951.000000, 3952.000000, 3953.000000, 3954.000000,\n3955.000000, 3956.000000, 3957.000000, 3958.000000, 3959.000000,\n3960.000000, 3961.000000, 3962.000000, 3963.000000, 3964.000000,\n3965.000000, 3966.000000, 3967.000000, 3968.000000, 3969.000000,\n3970.000000, 3971.000000, 3972.000000, 3973.000000, 3974.000000,\n3975.000000, 3976.000000, 3977.000000, 3978.000000, 3979.000000,\n3980.000000, 3981.000000, 3982.000000, 3983.000000, 3984.000000,\n3985.000000, 3986.000000, 3987.000000, 3988.000000, 3989.000000,\n3990.000000, 3991.000000, 3992.000000, 3993.000000, 3994.000000,\n3995.000000, 3996.000000, 3997.000000, 3998.000000, 3999.000000,\n4000.000000, 4001.000000, 4002.000000, 4003.000000, 4004.000000,\n4005.000000, 4006.000000, 4007.000000, 4008.000000, 4009.000000,\n4010.000000, 4011.000000, 4012.000000, 4013.000000, 4014.000000,\n4015.000000, 4016.000000, 4017.000000, 4018.000000, 4019.000000,\n4020.000000, 4021.000000, 4022.000000, 4023.000000, 4024.000000,\n4025.000000, 4026.000000, 4027.000000, 4028.000000, 4029.000000,\n4030.000000, 4031.000000, 4032.000000, 4033.000000, 4034.000000,\n4035.000000, 4036.000000, 4037.000000, 4038.000000, 4039.000000,\n4040.000000, 4041.000000, 4042.000000, 4043.000000, 4044.000000,\n4045.000000, 4046.000000, 4047.000000, 4048.000000, 4049.000000,\n4050.000000, 4051.000000, 4052.000000, 4053.000000, 4054.000000,\n4055.000000, 4056.000000, 4057.000000, 4058.000000, 4059.000000,\n4060.000000, 4061.000000, 4062.000000, 4063.000000, 4064.000000,\n4065.000000, 4066.000000, 4067.000000, 4068.000000, 4069.000000,\n4070.000000, 4071.000000, 4072.000000, 4073.000000, 4074.000000,\n4075.000000, 4076.000000, 4077.000000, 4078.000000, 4079.000000,\n4080.000000, 4081.000000, 4082.000000, 4083.000000, 4084.000000,\n4085.000000, 4086.000000, 4087.000000, 4088.000000, 4089.000000,\n4090.000000, 4091.000000, 4092.000000, 4093.000000, 4094.000000,\n4095.000000};\nstatic double axpy_4096_y[4096] = {\n1.000000,    2.000000,    3.000000,    4.000000,    5.000000,\n6.000000,    7.000000,    8.000000,    9.000000,    10.000000,\n11.000000,   12.000000,   13.000000,   14.000000,   15.000000,\n16.000000,   17.000000,   18.000000,   19.000000,   20.000000,\n21.000000,   22.000000,   23.000000,   24.000000,   25.000000,\n26.000000,   27.000000,   28.000000,   29.000000,   30.000000,\n31.000000,   32.000000,   33.000000,   34.000000,   35.000000,\n36.000000,   37.000000,   38.000000,   39.000000,   40.000000,\n41.000000,   42.000000,   43.000000,   44.000000,   45.000000,\n46.000000,   47.000000,   48.000000,   49.000000,   50.000000,\n51.000000,   52.000000,   53.000000,   54.000000,   55.000000,\n56.000000,   57.000000,   58.000000,   59.000000,   60.000000,\n61.000000,   62.000000,   63.000000,   64.000000,   65.000000,\n66.000000,   67.000000,   68.000000,   69.000000,   70.000000,\n71.000000,   72.000000,   73.000000,   74.000000,   75.000000,\n76.000000,   77.000000,   78.000000,   79.000000,   80.000000,\n81.000000,   82.000000,   83.000000,   84.000000,   85.000000,\n86.000000,   87.000000,   88.000000,   89.000000,   90.000000,\n91.000000,   92.000000,   93.000000,   94.000000,   95.000000,\n96.000000,   97.000000,   98.000000,   99.000000,   100.000000,\n101.000000,  102.000000,  103.000000,  104.000000,  105.000000,\n106.000000,  107.000000,  108.000000,  109.000000,  110.000000,\n111.000000,  112.000000,  113.000000,  114.000000,  115.000000,\n116.000000,  117.000000,  118.000000,  119.000000,  120.000000,\n121.000000,  122.000000,  123.000000,  124.000000,  125.000000,\n126.000000,  127.000000,  128.000000,  129.000000,  130.000000,\n131.000000,  132.000000,  133.000000,  134.000000,  135.000000,\n136.000000,  137.000000,  138.000000,  139.000000,  140.000000,\n141.000000,  142.000000,  143.000000,  144.000000,  145.000000,\n146.000000,  147.000000,  148.000000,  149.000000,  150.000000,\n151.000000,  152.000000,  153.000000,  154.000000,  155.000000,\n156.000000,  157.000000,  158.000000,  159.000000,  160.000000,\n161.000000,  162.000000,  163.000000,  164.000000,  165.000000,\n166.000000,  167.000000,  168.000000,  169.000000,  170.000000,\n171.000000,  172.000000,  173.000000,  174.000000,  175.000000,\n176.000000,  177.000000,  178.000000,  179.000000,  180.000000,\n181.000000,  182.000000,  183.000000,  184.000000,  185.000000,\n186.000000,  187.000000,  188.000000,  189.000000,  190.000000,\n191.000000,  192.000000,  193.000000,  194.000000,  195.000000,\n196.000000,  197.000000,  198.000000,  199.000000,  200.000000,\n201.000000,  202.000000,  203.000000,  204.000000,  205.000000,\n206.000000,  207.000000,  208.000000,  209.000000,  210.000000,\n211.000000,  212.000000,  213.000000,  214.000000,  215.000000,\n216.000000,  217.000000,  218.000000,  219.000000,  220.000000,\n221.000000,  222.000000,  223.000000,  224.000000,  225.000000,\n226.000000,  227.000000,  228.000000,  229.000000,  230.000000,\n231.000000,  232.000000,  233.000000,  234.000000,  235.000000,\n236.000000,  237.000000,  238.000000,  239.000000,  240.000000,\n241.000000,  242.000000,  243.000000,  244.000000,  245.000000,\n246.000000,  247.000000,  248.000000,  249.000000,  250.000000,\n251.000000,  252.000000,  253.000000,  254.000000,  255.000000,\n256.000000,  257.000000,  258.000000,  259.000000,  260.000000,\n261.000000,  262.000000,  263.000000,  264.000000,  265.000000,\n266.000000,  267.000000,  268.000000,  269.000000,  270.000000,\n271.000000,  272.000000,  273.000000,  274.000000,  275.000000,\n276.000000,  277.000000,  278.000000,  279.000000,  280.000000,\n281.000000,  282.000000,  283.000000,  284.000000,  285.000000,\n286.000000,  287.000000,  288.000000,  289.000000,  290.000000,\n291.000000,  292.000000,  293.000000,  294.000000,  295.000000,\n296.000000,  297.000000,  298.000000,  299.000000,  300.000000,\n301.000000,  302.000000,  303.000000,  304.000000,  305.000000,\n306.000000,  307.000000,  308.000000,  309.000000,  310.000000,\n311.000000,  312.000000,  313.000000,  314.000000,  315.000000,\n316.000000,  317.000000,  318.000000,  319.000000,  320.000000,\n321.000000,  322.000000,  323.000000,  324.000000,  325.000000,\n326.000000,  327.000000,  328.000000,  329.000000,  330.000000,\n331.000000,  332.000000,  333.000000,  334.000000,  335.000000,\n336.000000,  337.000000,  338.000000,  339.000000,  340.000000,\n341.000000,  342.000000,  343.000000,  344.000000,  345.000000,\n346.000000,  347.000000,  348.000000,  349.000000,  350.000000,\n351.000000,  352.000000,  353.000000,  354.000000,  355.000000,\n356.000000,  357.000000,  358.000000,  359.000000,  360.000000,\n361.000000,  362.000000,  363.000000,  364.000000,  365.000000,\n366.000000,  367.000000,  368.000000,  369.000000,  370.000000,\n371.000000,  372.000000,  373.000000,  374.000000,  375.000000,\n376.000000,  377.000000,  378.000000,  379.000000,  380.000000,\n381.000000,  382.000000,  383.000000,  384.000000,  385.000000,\n386.000000,  387.000000,  388.000000,  389.000000,  390.000000,\n391.000000,  392.000000,  393.000000,  394.000000,  395.000000,\n396.000000,  397.000000,  398.000000,  399.000000,  400.000000,\n401.000000,  402.000000,  403.000000,  404.000000,  405.000000,\n406.000000,  407.000000,  408.000000,  409.000000,  410.000000,\n411.000000,  412.000000,  413.000000,  414.000000,  415.000000,\n416.000000,  417.000000,  418.000000,  419.000000,  420.000000,\n421.000000,  422.000000,  423.000000,  424.000000,  425.000000,\n426.000000,  427.000000,  428.000000,  429.000000,  430.000000,\n431.000000,  432.000000,  433.000000,  434.000000,  435.000000,\n436.000000,  437.000000,  438.000000,  439.000000,  440.000000,\n441.000000,  442.000000,  443.000000,  444.000000,  445.000000,\n446.000000,  447.000000,  448.000000,  449.000000,  450.000000,\n451.000000,  452.000000,  453.000000,  454.000000,  455.000000,\n456.000000,  457.000000,  458.000000,  459.000000,  460.000000,\n461.000000,  462.000000,  463.000000,  464.000000,  465.000000,\n466.000000,  467.000000,  468.000000,  469.000000,  470.000000,\n471.000000,  472.000000,  473.000000,  474.000000,  475.000000,\n476.000000,  477.000000,  478.000000,  479.000000,  480.000000,\n481.000000,  482.000000,  483.000000,  484.000000,  485.000000,\n486.000000,  487.000000,  488.000000,  489.000000,  490.000000,\n491.000000,  492.000000,  493.000000,  494.000000,  495.000000,\n496.000000,  497.000000,  498.000000,  499.000000,  500.000000,\n501.000000,  502.000000,  503.000000,  504.000000,  505.000000,\n506.000000,  507.000000,  508.000000,  509.000000,  510.000000,\n511.000000,  512.000000,  513.000000,  514.000000,  515.000000,\n516.000000,  517.000000,  518.000000,  519.000000,  520.000000,\n521.000000,  522.000000,  523.000000,  524.000000,  525.000000,\n526.000000,  527.000000,  528.000000,  529.000000,  530.000000,\n531.000000,  532.000000,  533.000000,  534.000000,  535.000000,\n536.000000,  537.000000,  538.000000,  539.000000,  540.000000,\n541.000000,  542.000000,  543.000000,  544.000000,  545.000000,\n546.000000,  547.000000,  548.000000,  549.000000,  550.000000,\n551.000000,  552.000000,  553.000000,  554.000000,  555.000000,\n556.000000,  557.000000,  558.000000,  559.000000,  560.000000,\n561.000000,  562.000000,  563.000000,  564.000000,  565.000000,\n566.000000,  567.000000,  568.000000,  569.000000,  570.000000,\n571.000000,  572.000000,  573.000000,  574.000000,  575.000000,\n576.000000,  577.000000,  578.000000,  579.000000,  580.000000,\n581.000000,  582.000000,  583.000000,  584.000000,  585.000000,\n586.000000,  587.000000,  588.000000,  589.000000,  590.000000,\n591.000000,  592.000000,  593.000000,  594.000000,  595.000000,\n596.000000,  597.000000,  598.000000,  599.000000,  600.000000,\n601.000000,  602.000000,  603.000000,  604.000000,  605.000000,\n606.000000,  607.000000,  608.000000,  609.000000,  610.000000,\n611.000000,  612.000000,  613.000000,  614.000000,  615.000000,\n616.000000,  617.000000,  618.000000,  619.000000,  620.000000,\n621.000000,  622.000000,  623.000000,  624.000000,  625.000000,\n626.000000,  627.000000,  628.000000,  629.000000,  630.000000,\n631.000000,  632.000000,  633.000000,  634.000000,  635.000000,\n636.000000,  637.000000,  638.000000,  639.000000,  640.000000,\n641.000000,  642.000000,  643.000000,  644.000000,  645.000000,\n646.000000,  647.000000,  648.000000,  649.000000,  650.000000,\n651.000000,  652.000000,  653.000000,  654.000000,  655.000000,\n656.000000,  657.000000,  658.000000,  659.000000,  660.000000,\n661.000000,  662.000000,  663.000000,  664.000000,  665.000000,\n666.000000,  667.000000,  668.000000,  669.000000,  670.000000,\n671.000000,  672.000000,  673.000000,  674.000000,  675.000000,\n676.000000,  677.000000,  678.000000,  679.000000,  680.000000,\n681.000000,  682.000000,  683.000000,  684.000000,  685.000000,\n686.000000,  687.000000,  688.000000,  689.000000,  690.000000,\n691.000000,  692.000000,  693.000000,  694.000000,  695.000000,\n696.000000,  697.000000,  698.000000,  699.000000,  700.000000,\n701.000000,  702.000000,  703.000000,  704.000000,  705.000000,\n706.000000,  707.000000,  708.000000,  709.000000,  710.000000,\n711.000000,  712.000000,  713.000000,  714.000000,  715.000000,\n716.000000,  717.000000,  718.000000,  719.000000,  720.000000,\n721.000000,  722.000000,  723.000000,  724.000000,  725.000000,\n726.000000,  727.000000,  728.000000,  729.000000,  730.000000,\n731.000000,  732.000000,  733.000000,  734.000000,  735.000000,\n736.000000,  737.000000,  738.000000,  739.000000,  740.000000,\n741.000000,  742.000000,  743.000000,  744.000000,  745.000000,\n746.000000,  747.000000,  748.000000,  749.000000,  750.000000,\n751.000000,  752.000000,  753.000000,  754.000000,  755.000000,\n756.000000,  757.000000,  758.000000,  759.000000,  760.000000,\n761.000000,  762.000000,  763.000000,  764.000000,  765.000000,\n766.000000,  767.000000,  768.000000,  769.000000,  770.000000,\n771.000000,  772.000000,  773.000000,  774.000000,  775.000000,\n776.000000,  777.000000,  778.000000,  779.000000,  780.000000,\n781.000000,  782.000000,  783.000000,  784.000000,  785.000000,\n786.000000,  787.000000,  788.000000,  789.000000,  790.000000,\n791.000000,  792.000000,  793.000000,  794.000000,  795.000000,\n796.000000,  797.000000,  798.000000,  799.000000,  800.000000,\n801.000000,  802.000000,  803.000000,  804.000000,  805.000000,\n806.000000,  807.000000,  808.000000,  809.000000,  810.000000,\n811.000000,  812.000000,  813.000000,  814.000000,  815.000000,\n816.000000,  817.000000,  818.000000,  819.000000,  820.000000,\n821.000000,  822.000000,  823.000000,  824.000000,  825.000000,\n826.000000,  827.000000,  828.000000,  829.000000,  830.000000,\n831.000000,  832.000000,  833.000000,  834.000000,  835.000000,\n836.000000,  837.000000,  838.000000,  839.000000,  840.000000,\n841.000000,  842.000000,  843.000000,  844.000000,  845.000000,\n846.000000,  847.000000,  848.000000,  849.000000,  850.000000,\n851.000000,  852.000000,  853.000000,  854.000000,  855.000000,\n856.000000,  857.000000,  858.000000,  859.000000,  860.000000,\n861.000000,  862.000000,  863.000000,  864.000000,  865.000000,\n866.000000,  867.000000,  868.000000,  869.000000,  870.000000,\n871.000000,  872.000000,  873.000000,  874.000000,  875.000000,\n876.000000,  877.000000,  878.000000,  879.000000,  880.000000,\n881.000000,  882.000000,  883.000000,  884.000000,  885.000000,\n886.000000,  887.000000,  888.000000,  889.000000,  890.000000,\n891.000000,  892.000000,  893.000000,  894.000000,  895.000000,\n896.000000,  897.000000,  898.000000,  899.000000,  900.000000,\n901.000000,  902.000000,  903.000000,  904.000000,  905.000000,\n906.000000,  907.000000,  908.000000,  909.000000,  910.000000,\n911.000000,  912.000000,  913.000000,  914.000000,  915.000000,\n916.000000,  917.000000,  918.000000,  919.000000,  920.000000,\n921.000000,  922.000000,  923.000000,  924.000000,  925.000000,\n926.000000,  927.000000,  928.000000,  929.000000,  930.000000,\n931.000000,  932.000000,  933.000000,  934.000000,  935.000000,\n936.000000,  937.000000,  938.000000,  939.000000,  940.000000,\n941.000000,  942.000000,  943.000000,  944.000000,  945.000000,\n946.000000,  947.000000,  948.000000,  949.000000,  950.000000,\n951.000000,  952.000000,  953.000000,  954.000000,  955.000000,\n956.000000,  957.000000,  958.000000,  959.000000,  960.000000,\n961.000000,  962.000000,  963.000000,  964.000000,  965.000000,\n966.000000,  967.000000,  968.000000,  969.000000,  970.000000,\n971.000000,  972.000000,  973.000000,  974.000000,  975.000000,\n976.000000,  977.000000,  978.000000,  979.000000,  980.000000,\n981.000000,  982.000000,  983.000000,  984.000000,  985.000000,\n986.000000,  987.000000,  988.000000,  989.000000,  990.000000,\n991.000000,  992.000000,  993.000000,  994.000000,  995.000000,\n996.000000,  997.000000,  998.000000,  999.000000,  1000.000000,\n1001.000000, 1002.000000, 1003.000000, 1004.000000, 1005.000000,\n1006.000000, 1007.000000, 1008.000000, 1009.000000, 1010.000000,\n1011.000000, 1012.000000, 1013.000000, 1014.000000, 1015.000000,\n1016.000000, 1017.000000, 1018.000000, 1019.000000, 1020.000000,\n1021.000000, 1022.000000, 1023.000000, 1024.000000, 1025.000000,\n1026.000000, 1027.000000, 1028.000000, 1029.000000, 1030.000000,\n1031.000000, 1032.000000, 1033.000000, 1034.000000, 1035.000000,\n1036.000000, 1037.000000, 1038.000000, 1039.000000, 1040.000000,\n1041.000000, 1042.000000, 1043.000000, 1044.000000, 1045.000000,\n1046.000000, 1047.000000, 1048.000000, 1049.000000, 1050.000000,\n1051.000000, 1052.000000, 1053.000000, 1054.000000, 1055.000000,\n1056.000000, 1057.000000, 1058.000000, 1059.000000, 1060.000000,\n1061.000000, 1062.000000, 1063.000000, 1064.000000, 1065.000000,\n1066.000000, 1067.000000, 1068.000000, 1069.000000, 1070.000000,\n1071.000000, 1072.000000, 1073.000000, 1074.000000, 1075.000000,\n1076.000000, 1077.000000, 1078.000000, 1079.000000, 1080.000000,\n1081.000000, 1082.000000, 1083.000000, 1084.000000, 1085.000000,\n1086.000000, 1087.000000, 1088.000000, 1089.000000, 1090.000000,\n1091.000000, 1092.000000, 1093.000000, 1094.000000, 1095.000000,\n1096.000000, 1097.000000, 1098.000000, 1099.000000, 1100.000000,\n1101.000000, 1102.000000, 1103.000000, 1104.000000, 1105.000000,\n1106.000000, 1107.000000, 1108.000000, 1109.000000, 1110.000000,\n1111.000000, 1112.000000, 1113.000000, 1114.000000, 1115.000000,\n1116.000000, 1117.000000, 1118.000000, 1119.000000, 1120.000000,\n1121.000000, 1122.000000, 1123.000000, 1124.000000, 1125.000000,\n1126.000000, 1127.000000, 1128.000000, 1129.000000, 1130.000000,\n1131.000000, 1132.000000, 1133.000000, 1134.000000, 1135.000000,\n1136.000000, 1137.000000, 1138.000000, 1139.000000, 1140.000000,\n1141.000000, 1142.000000, 1143.000000, 1144.000000, 1145.000000,\n1146.000000, 1147.000000, 1148.000000, 1149.000000, 1150.000000,\n1151.000000, 1152.000000, 1153.000000, 1154.000000, 1155.000000,\n1156.000000, 1157.000000, 1158.000000, 1159.000000, 1160.000000,\n1161.000000, 1162.000000, 1163.000000, 1164.000000, 1165.000000,\n1166.000000, 1167.000000, 1168.000000, 1169.000000, 1170.000000,\n1171.000000, 1172.000000, 1173.000000, 1174.000000, 1175.000000,\n1176.000000, 1177.000000, 1178.000000, 1179.000000, 1180.000000,\n1181.000000, 1182.000000, 1183.000000, 1184.000000, 1185.000000,\n1186.000000, 1187.000000, 1188.000000, 1189.000000, 1190.000000,\n1191.000000, 1192.000000, 1193.000000, 1194.000000, 1195.000000,\n1196.000000, 1197.000000, 1198.000000, 1199.000000, 1200.000000,\n1201.000000, 1202.000000, 1203.000000, 1204.000000, 1205.000000,\n1206.000000, 1207.000000, 1208.000000, 1209.000000, 1210.000000,\n1211.000000, 1212.000000, 1213.000000, 1214.000000, 1215.000000,\n1216.000000, 1217.000000, 1218.000000, 1219.000000, 1220.000000,\n1221.000000, 1222.000000, 1223.000000, 1224.000000, 1225.000000,\n1226.000000, 1227.000000, 1228.000000, 1229.000000, 1230.000000,\n1231.000000, 1232.000000, 1233.000000, 1234.000000, 1235.000000,\n1236.000000, 1237.000000, 1238.000000, 1239.000000, 1240.000000,\n1241.000000, 1242.000000, 1243.000000, 1244.000000, 1245.000000,\n1246.000000, 1247.000000, 1248.000000, 1249.000000, 1250.000000,\n1251.000000, 1252.000000, 1253.000000, 1254.000000, 1255.000000,\n1256.000000, 1257.000000, 1258.000000, 1259.000000, 1260.000000,\n1261.000000, 1262.000000, 1263.000000, 1264.000000, 1265.000000,\n1266.000000, 1267.000000, 1268.000000, 1269.000000, 1270.000000,\n1271.000000, 1272.000000, 1273.000000, 1274.000000, 1275.000000,\n1276.000000, 1277.000000, 1278.000000, 1279.000000, 1280.000000,\n1281.000000, 1282.000000, 1283.000000, 1284.000000, 1285.000000,\n1286.000000, 1287.000000, 1288.000000, 1289.000000, 1290.000000,\n1291.000000, 1292.000000, 1293.000000, 1294.000000, 1295.000000,\n1296.000000, 1297.000000, 1298.000000, 1299.000000, 1300.000000,\n1301.000000, 1302.000000, 1303.000000, 1304.000000, 1305.000000,\n1306.000000, 1307.000000, 1308.000000, 1309.000000, 1310.000000,\n1311.000000, 1312.000000, 1313.000000, 1314.000000, 1315.000000,\n1316.000000, 1317.000000, 1318.000000, 1319.000000, 1320.000000,\n1321.000000, 1322.000000, 1323.000000, 1324.000000, 1325.000000,\n1326.000000, 1327.000000, 1328.000000, 1329.000000, 1330.000000,\n1331.000000, 1332.000000, 1333.000000, 1334.000000, 1335.000000,\n1336.000000, 1337.000000, 1338.000000, 1339.000000, 1340.000000,\n1341.000000, 1342.000000, 1343.000000, 1344.000000, 1345.000000,\n1346.000000, 1347.000000, 1348.000000, 1349.000000, 1350.000000,\n1351.000000, 1352.000000, 1353.000000, 1354.000000, 1355.000000,\n1356.000000, 1357.000000, 1358.000000, 1359.000000, 1360.000000,\n1361.000000, 1362.000000, 1363.000000, 1364.000000, 1365.000000,\n1366.000000, 1367.000000, 1368.000000, 1369.000000, 1370.000000,\n1371.000000, 1372.000000, 1373.000000, 1374.000000, 1375.000000,\n1376.000000, 1377.000000, 1378.000000, 1379.000000, 1380.000000,\n1381.000000, 1382.000000, 1383.000000, 1384.000000, 1385.000000,\n1386.000000, 1387.000000, 1388.000000, 1389.000000, 1390.000000,\n1391.000000, 1392.000000, 1393.000000, 1394.000000, 1395.000000,\n1396.000000, 1397.000000, 1398.000000, 1399.000000, 1400.000000,\n1401.000000, 1402.000000, 1403.000000, 1404.000000, 1405.000000,\n1406.000000, 1407.000000, 1408.000000, 1409.000000, 1410.000000,\n1411.000000, 1412.000000, 1413.000000, 1414.000000, 1415.000000,\n1416.000000, 1417.000000, 1418.000000, 1419.000000, 1420.000000,\n1421.000000, 1422.000000, 1423.000000, 1424.000000, 1425.000000,\n1426.000000, 1427.000000, 1428.000000, 1429.000000, 1430.000000,\n1431.000000, 1432.000000, 1433.000000, 1434.000000, 1435.000000,\n1436.000000, 1437.000000, 1438.000000, 1439.000000, 1440.000000,\n1441.000000, 1442.000000, 1443.000000, 1444.000000, 1445.000000,\n1446.000000, 1447.000000, 1448.000000, 1449.000000, 1450.000000,\n1451.000000, 1452.000000, 1453.000000, 1454.000000, 1455.000000,\n1456.000000, 1457.000000, 1458.000000, 1459.000000, 1460.000000,\n1461.000000, 1462.000000, 1463.000000, 1464.000000, 1465.000000,\n1466.000000, 1467.000000, 1468.000000, 1469.000000, 1470.000000,\n1471.000000, 1472.000000, 1473.000000, 1474.000000, 1475.000000,\n1476.000000, 1477.000000, 1478.000000, 1479.000000, 1480.000000,\n1481.000000, 1482.000000, 1483.000000, 1484.000000, 1485.000000,\n1486.000000, 1487.000000, 1488.000000, 1489.000000, 1490.000000,\n1491.000000, 1492.000000, 1493.000000, 1494.000000, 1495.000000,\n1496.000000, 1497.000000, 1498.000000, 1499.000000, 1500.000000,\n1501.000000, 1502.000000, 1503.000000, 1504.000000, 1505.000000,\n1506.000000, 1507.000000, 1508.000000, 1509.000000, 1510.000000,\n1511.000000, 1512.000000, 1513.000000, 1514.000000, 1515.000000,\n1516.000000, 1517.000000, 1518.000000, 1519.000000, 1520.000000,\n1521.000000, 1522.000000, 1523.000000, 1524.000000, 1525.000000,\n1526.000000, 1527.000000, 1528.000000, 1529.000000, 1530.000000,\n1531.000000, 1532.000000, 1533.000000, 1534.000000, 1535.000000,\n1536.000000, 1537.000000, 1538.000000, 1539.000000, 1540.000000,\n1541.000000, 1542.000000, 1543.000000, 1544.000000, 1545.000000,\n1546.000000, 1547.000000, 1548.000000, 1549.000000, 1550.000000,\n1551.000000, 1552.000000, 1553.000000, 1554.000000, 1555.000000,\n1556.000000, 1557.000000, 1558.000000, 1559.000000, 1560.000000,\n1561.000000, 1562.000000, 1563.000000, 1564.000000, 1565.000000,\n1566.000000, 1567.000000, 1568.000000, 1569.000000, 1570.000000,\n1571.000000, 1572.000000, 1573.000000, 1574.000000, 1575.000000,\n1576.000000, 1577.000000, 1578.000000, 1579.000000, 1580.000000,\n1581.000000, 1582.000000, 1583.000000, 1584.000000, 1585.000000,\n1586.000000, 1587.000000, 1588.000000, 1589.000000, 1590.000000,\n1591.000000, 1592.000000, 1593.000000, 1594.000000, 1595.000000,\n1596.000000, 1597.000000, 1598.000000, 1599.000000, 1600.000000,\n1601.000000, 1602.000000, 1603.000000, 1604.000000, 1605.000000,\n1606.000000, 1607.000000, 1608.000000, 1609.000000, 1610.000000,\n1611.000000, 1612.000000, 1613.000000, 1614.000000, 1615.000000,\n1616.000000, 1617.000000, 1618.000000, 1619.000000, 1620.000000,\n1621.000000, 1622.000000, 1623.000000, 1624.000000, 1625.000000,\n1626.000000, 1627.000000, 1628.000000, 1629.000000, 1630.000000,\n1631.000000, 1632.000000, 1633.000000, 1634.000000, 1635.000000,\n1636.000000, 1637.000000, 1638.000000, 1639.000000, 1640.000000,\n1641.000000, 1642.000000, 1643.000000, 1644.000000, 1645.000000,\n1646.000000, 1647.000000, 1648.000000, 1649.000000, 1650.000000,\n1651.000000, 1652.000000, 1653.000000, 1654.000000, 1655.000000,\n1656.000000, 1657.000000, 1658.000000, 1659.000000, 1660.000000,\n1661.000000, 1662.000000, 1663.000000, 1664.000000, 1665.000000,\n1666.000000, 1667.000000, 1668.000000, 1669.000000, 1670.000000,\n1671.000000, 1672.000000, 1673.000000, 1674.000000, 1675.000000,\n1676.000000, 1677.000000, 1678.000000, 1679.000000, 1680.000000,\n1681.000000, 1682.000000, 1683.000000, 1684.000000, 1685.000000,\n1686.000000, 1687.000000, 1688.000000, 1689.000000, 1690.000000,\n1691.000000, 1692.000000, 1693.000000, 1694.000000, 1695.000000,\n1696.000000, 1697.000000, 1698.000000, 1699.000000, 1700.000000,\n1701.000000, 1702.000000, 1703.000000, 1704.000000, 1705.000000,\n1706.000000, 1707.000000, 1708.000000, 1709.000000, 1710.000000,\n1711.000000, 1712.000000, 1713.000000, 1714.000000, 1715.000000,\n1716.000000, 1717.000000, 1718.000000, 1719.000000, 1720.000000,\n1721.000000, 1722.000000, 1723.000000, 1724.000000, 1725.000000,\n1726.000000, 1727.000000, 1728.000000, 1729.000000, 1730.000000,\n1731.000000, 1732.000000, 1733.000000, 1734.000000, 1735.000000,\n1736.000000, 1737.000000, 1738.000000, 1739.000000, 1740.000000,\n1741.000000, 1742.000000, 1743.000000, 1744.000000, 1745.000000,\n1746.000000, 1747.000000, 1748.000000, 1749.000000, 1750.000000,\n1751.000000, 1752.000000, 1753.000000, 1754.000000, 1755.000000,\n1756.000000, 1757.000000, 1758.000000, 1759.000000, 1760.000000,\n1761.000000, 1762.000000, 1763.000000, 1764.000000, 1765.000000,\n1766.000000, 1767.000000, 1768.000000, 1769.000000, 1770.000000,\n1771.000000, 1772.000000, 1773.000000, 1774.000000, 1775.000000,\n1776.000000, 1777.000000, 1778.000000, 1779.000000, 1780.000000,\n1781.000000, 1782.000000, 1783.000000, 1784.000000, 1785.000000,\n1786.000000, 1787.000000, 1788.000000, 1789.000000, 1790.000000,\n1791.000000, 1792.000000, 1793.000000, 1794.000000, 1795.000000,\n1796.000000, 1797.000000, 1798.000000, 1799.000000, 1800.000000,\n1801.000000, 1802.000000, 1803.000000, 1804.000000, 1805.000000,\n1806.000000, 1807.000000, 1808.000000, 1809.000000, 1810.000000,\n1811.000000, 1812.000000, 1813.000000, 1814.000000, 1815.000000,\n1816.000000, 1817.000000, 1818.000000, 1819.000000, 1820.000000,\n1821.000000, 1822.000000, 1823.000000, 1824.000000, 1825.000000,\n1826.000000, 1827.000000, 1828.000000, 1829.000000, 1830.000000,\n1831.000000, 1832.000000, 1833.000000, 1834.000000, 1835.000000,\n1836.000000, 1837.000000, 1838.000000, 1839.000000, 1840.000000,\n1841.000000, 1842.000000, 1843.000000, 1844.000000, 1845.000000,\n1846.000000, 1847.000000, 1848.000000, 1849.000000, 1850.000000,\n1851.000000, 1852.000000, 1853.000000, 1854.000000, 1855.000000,\n1856.000000, 1857.000000, 1858.000000, 1859.000000, 1860.000000,\n1861.000000, 1862.000000, 1863.000000, 1864.000000, 1865.000000,\n1866.000000, 1867.000000, 1868.000000, 1869.000000, 1870.000000,\n1871.000000, 1872.000000, 1873.000000, 1874.000000, 1875.000000,\n1876.000000, 1877.000000, 1878.000000, 1879.000000, 1880.000000,\n1881.000000, 1882.000000, 1883.000000, 1884.000000, 1885.000000,\n1886.000000, 1887.000000, 1888.000000, 1889.000000, 1890.000000,\n1891.000000, 1892.000000, 1893.000000, 1894.000000, 1895.000000,\n1896.000000, 1897.000000, 1898.000000, 1899.000000, 1900.000000,\n1901.000000, 1902.000000, 1903.000000, 1904.000000, 1905.000000,\n1906.000000, 1907.000000, 1908.000000, 1909.000000, 1910.000000,\n1911.000000, 1912.000000, 1913.000000, 1914.000000, 1915.000000,\n1916.000000, 1917.000000, 1918.000000, 1919.000000, 1920.000000,\n1921.000000, 1922.000000, 1923.000000, 1924.000000, 1925.000000,\n1926.000000, 1927.000000, 1928.000000, 1929.000000, 1930.000000,\n1931.000000, 1932.000000, 1933.000000, 1934.000000, 1935.000000,\n1936.000000, 1937.000000, 1938.000000, 1939.000000, 1940.000000,\n1941.000000, 1942.000000, 1943.000000, 1944.000000, 1945.000000,\n1946.000000, 1947.000000, 1948.000000, 1949.000000, 1950.000000,\n1951.000000, 1952.000000, 1953.000000, 1954.000000, 1955.000000,\n1956.000000, 1957.000000, 1958.000000, 1959.000000, 1960.000000,\n1961.000000, 1962.000000, 1963.000000, 1964.000000, 1965.000000,\n1966.000000, 1967.000000, 1968.000000, 1969.000000, 1970.000000,\n1971.000000, 1972.000000, 1973.000000, 1974.000000, 1975.000000,\n1976.000000, 1977.000000, 1978.000000, 1979.000000, 1980.000000,\n1981.000000, 1982.000000, 1983.000000, 1984.000000, 1985.000000,\n1986.000000, 1987.000000, 1988.000000, 1989.000000, 1990.000000,\n1991.000000, 1992.000000, 1993.000000, 1994.000000, 1995.000000,\n1996.000000, 1997.000000, 1998.000000, 1999.000000, 2000.000000,\n2001.000000, 2002.000000, 2003.000000, 2004.000000, 2005.000000,\n2006.000000, 2007.000000, 2008.000000, 2009.000000, 2010.000000,\n2011.000000, 2012.000000, 2013.000000, 2014.000000, 2015.000000,\n2016.000000, 2017.000000, 2018.000000, 2019.000000, 2020.000000,\n2021.000000, 2022.000000, 2023.000000, 2024.000000, 2025.000000,\n2026.000000, 2027.000000, 2028.000000, 2029.000000, 2030.000000,\n2031.000000, 2032.000000, 2033.000000, 2034.000000, 2035.000000,\n2036.000000, 2037.000000, 2038.000000, 2039.000000, 2040.000000,\n2041.000000, 2042.000000, 2043.000000, 2044.000000, 2045.000000,\n2046.000000, 2047.000000, 2048.000000, 2049.000000, 2050.000000,\n2051.000000, 2052.000000, 2053.000000, 2054.000000, 2055.000000,\n2056.000000, 2057.000000, 2058.000000, 2059.000000, 2060.000000,\n2061.000000, 2062.000000, 2063.000000, 2064.000000, 2065.000000,\n2066.000000, 2067.000000, 2068.000000, 2069.000000, 2070.000000,\n2071.000000, 2072.000000, 2073.000000, 2074.000000, 2075.000000,\n2076.000000, 2077.000000, 2078.000000, 2079.000000, 2080.000000,\n2081.000000, 2082.000000, 2083.000000, 2084.000000, 2085.000000,\n2086.000000, 2087.000000, 2088.000000, 2089.000000, 2090.000000,\n2091.000000, 2092.000000, 2093.000000, 2094.000000, 2095.000000,\n2096.000000, 2097.000000, 2098.000000, 2099.000000, 2100.000000,\n2101.000000, 2102.000000, 2103.000000, 2104.000000, 2105.000000,\n2106.000000, 2107.000000, 2108.000000, 2109.000000, 2110.000000,\n2111.000000, 2112.000000, 2113.000000, 2114.000000, 2115.000000,\n2116.000000, 2117.000000, 2118.000000, 2119.000000, 2120.000000,\n2121.000000, 2122.000000, 2123.000000, 2124.000000, 2125.000000,\n2126.000000, 2127.000000, 2128.000000, 2129.000000, 2130.000000,\n2131.000000, 2132.000000, 2133.000000, 2134.000000, 2135.000000,\n2136.000000, 2137.000000, 2138.000000, 2139.000000, 2140.000000,\n2141.000000, 2142.000000, 2143.000000, 2144.000000, 2145.000000,\n2146.000000, 2147.000000, 2148.000000, 2149.000000, 2150.000000,\n2151.000000, 2152.000000, 2153.000000, 2154.000000, 2155.000000,\n2156.000000, 2157.000000, 2158.000000, 2159.000000, 2160.000000,\n2161.000000, 2162.000000, 2163.000000, 2164.000000, 2165.000000,\n2166.000000, 2167.000000, 2168.000000, 2169.000000, 2170.000000,\n2171.000000, 2172.000000, 2173.000000, 2174.000000, 2175.000000,\n2176.000000, 2177.000000, 2178.000000, 2179.000000, 2180.000000,\n2181.000000, 2182.000000, 2183.000000, 2184.000000, 2185.000000,\n2186.000000, 2187.000000, 2188.000000, 2189.000000, 2190.000000,\n2191.000000, 2192.000000, 2193.000000, 2194.000000, 2195.000000,\n2196.000000, 2197.000000, 2198.000000, 2199.000000, 2200.000000,\n2201.000000, 2202.000000, 2203.000000, 2204.000000, 2205.000000,\n2206.000000, 2207.000000, 2208.000000, 2209.000000, 2210.000000,\n2211.000000, 2212.000000, 2213.000000, 2214.000000, 2215.000000,\n2216.000000, 2217.000000, 2218.000000, 2219.000000, 2220.000000,\n2221.000000, 2222.000000, 2223.000000, 2224.000000, 2225.000000,\n2226.000000, 2227.000000, 2228.000000, 2229.000000, 2230.000000,\n2231.000000, 2232.000000, 2233.000000, 2234.000000, 2235.000000,\n2236.000000, 2237.000000, 2238.000000, 2239.000000, 2240.000000,\n2241.000000, 2242.000000, 2243.000000, 2244.000000, 2245.000000,\n2246.000000, 2247.000000, 2248.000000, 2249.000000, 2250.000000,\n2251.000000, 2252.000000, 2253.000000, 2254.000000, 2255.000000,\n2256.000000, 2257.000000, 2258.000000, 2259.000000, 2260.000000,\n2261.000000, 2262.000000, 2263.000000, 2264.000000, 2265.000000,\n2266.000000, 2267.000000, 2268.000000, 2269.000000, 2270.000000,\n2271.000000, 2272.000000, 2273.000000, 2274.000000, 2275.000000,\n2276.000000, 2277.000000, 2278.000000, 2279.000000, 2280.000000,\n2281.000000, 2282.000000, 2283.000000, 2284.000000, 2285.000000,\n2286.000000, 2287.000000, 2288.000000, 2289.000000, 2290.000000,\n2291.000000, 2292.000000, 2293.000000, 2294.000000, 2295.000000,\n2296.000000, 2297.000000, 2298.000000, 2299.000000, 2300.000000,\n2301.000000, 2302.000000, 2303.000000, 2304.000000, 2305.000000,\n2306.000000, 2307.000000, 2308.000000, 2309.000000, 2310.000000,\n2311.000000, 2312.000000, 2313.000000, 2314.000000, 2315.000000,\n2316.000000, 2317.000000, 2318.000000, 2319.000000, 2320.000000,\n2321.000000, 2322.000000, 2323.000000, 2324.000000, 2325.000000,\n2326.000000, 2327.000000, 2328.000000, 2329.000000, 2330.000000,\n2331.000000, 2332.000000, 2333.000000, 2334.000000, 2335.000000,\n2336.000000, 2337.000000, 2338.000000, 2339.000000, 2340.000000,\n2341.000000, 2342.000000, 2343.000000, 2344.000000, 2345.000000,\n2346.000000, 2347.000000, 2348.000000, 2349.000000, 2350.000000,\n2351.000000, 2352.000000, 2353.000000, 2354.000000, 2355.000000,\n2356.000000, 2357.000000, 2358.000000, 2359.000000, 2360.000000,\n2361.000000, 2362.000000, 2363.000000, 2364.000000, 2365.000000,\n2366.000000, 2367.000000, 2368.000000, 2369.000000, 2370.000000,\n2371.000000, 2372.000000, 2373.000000, 2374.000000, 2375.000000,\n2376.000000, 2377.000000, 2378.000000, 2379.000000, 2380.000000,\n2381.000000, 2382.000000, 2383.000000, 2384.000000, 2385.000000,\n2386.000000, 2387.000000, 2388.000000, 2389.000000, 2390.000000,\n2391.000000, 2392.000000, 2393.000000, 2394.000000, 2395.000000,\n2396.000000, 2397.000000, 2398.000000, 2399.000000, 2400.000000,\n2401.000000, 2402.000000, 2403.000000, 2404.000000, 2405.000000,\n2406.000000, 2407.000000, 2408.000000, 2409.000000, 2410.000000,\n2411.000000, 2412.000000, 2413.000000, 2414.000000, 2415.000000,\n2416.000000, 2417.000000, 2418.000000, 2419.000000, 2420.000000,\n2421.000000, 2422.000000, 2423.000000, 2424.000000, 2425.000000,\n2426.000000, 2427.000000, 2428.000000, 2429.000000, 2430.000000,\n2431.000000, 2432.000000, 2433.000000, 2434.000000, 2435.000000,\n2436.000000, 2437.000000, 2438.000000, 2439.000000, 2440.000000,\n2441.000000, 2442.000000, 2443.000000, 2444.000000, 2445.000000,\n2446.000000, 2447.000000, 2448.000000, 2449.000000, 2450.000000,\n2451.000000, 2452.000000, 2453.000000, 2454.000000, 2455.000000,\n2456.000000, 2457.000000, 2458.000000, 2459.000000, 2460.000000,\n2461.000000, 2462.000000, 2463.000000, 2464.000000, 2465.000000,\n2466.000000, 2467.000000, 2468.000000, 2469.000000, 2470.000000,\n2471.000000, 2472.000000, 2473.000000, 2474.000000, 2475.000000,\n2476.000000, 2477.000000, 2478.000000, 2479.000000, 2480.000000,\n2481.000000, 2482.000000, 2483.000000, 2484.000000, 2485.000000,\n2486.000000, 2487.000000, 2488.000000, 2489.000000, 2490.000000,\n2491.000000, 2492.000000, 2493.000000, 2494.000000, 2495.000000,\n2496.000000, 2497.000000, 2498.000000, 2499.000000, 2500.000000,\n2501.000000, 2502.000000, 2503.000000, 2504.000000, 2505.000000,\n2506.000000, 2507.000000, 2508.000000, 2509.000000, 2510.000000,\n2511.000000, 2512.000000, 2513.000000, 2514.000000, 2515.000000,\n2516.000000, 2517.000000, 2518.000000, 2519.000000, 2520.000000,\n2521.000000, 2522.000000, 2523.000000, 2524.000000, 2525.000000,\n2526.000000, 2527.000000, 2528.000000, 2529.000000, 2530.000000,\n2531.000000, 2532.000000, 2533.000000, 2534.000000, 2535.000000,\n2536.000000, 2537.000000, 2538.000000, 2539.000000, 2540.000000,\n2541.000000, 2542.000000, 2543.000000, 2544.000000, 2545.000000,\n2546.000000, 2547.000000, 2548.000000, 2549.000000, 2550.000000,\n2551.000000, 2552.000000, 2553.000000, 2554.000000, 2555.000000,\n2556.000000, 2557.000000, 2558.000000, 2559.000000, 2560.000000,\n2561.000000, 2562.000000, 2563.000000, 2564.000000, 2565.000000,\n2566.000000, 2567.000000, 2568.000000, 2569.000000, 2570.000000,\n2571.000000, 2572.000000, 2573.000000, 2574.000000, 2575.000000,\n2576.000000, 2577.000000, 2578.000000, 2579.000000, 2580.000000,\n2581.000000, 2582.000000, 2583.000000, 2584.000000, 2585.000000,\n2586.000000, 2587.000000, 2588.000000, 2589.000000, 2590.000000,\n2591.000000, 2592.000000, 2593.000000, 2594.000000, 2595.000000,\n2596.000000, 2597.000000, 2598.000000, 2599.000000, 2600.000000,\n2601.000000, 2602.000000, 2603.000000, 2604.000000, 2605.000000,\n2606.000000, 2607.000000, 2608.000000, 2609.000000, 2610.000000,\n2611.000000, 2612.000000, 2613.000000, 2614.000000, 2615.000000,\n2616.000000, 2617.000000, 2618.000000, 2619.000000, 2620.000000,\n2621.000000, 2622.000000, 2623.000000, 2624.000000, 2625.000000,\n2626.000000, 2627.000000, 2628.000000, 2629.000000, 2630.000000,\n2631.000000, 2632.000000, 2633.000000, 2634.000000, 2635.000000,\n2636.000000, 2637.000000, 2638.000000, 2639.000000, 2640.000000,\n2641.000000, 2642.000000, 2643.000000, 2644.000000, 2645.000000,\n2646.000000, 2647.000000, 2648.000000, 2649.000000, 2650.000000,\n2651.000000, 2652.000000, 2653.000000, 2654.000000, 2655.000000,\n2656.000000, 2657.000000, 2658.000000, 2659.000000, 2660.000000,\n2661.000000, 2662.000000, 2663.000000, 2664.000000, 2665.000000,\n2666.000000, 2667.000000, 2668.000000, 2669.000000, 2670.000000,\n2671.000000, 2672.000000, 2673.000000, 2674.000000, 2675.000000,\n2676.000000, 2677.000000, 2678.000000, 2679.000000, 2680.000000,\n2681.000000, 2682.000000, 2683.000000, 2684.000000, 2685.000000,\n2686.000000, 2687.000000, 2688.000000, 2689.000000, 2690.000000,\n2691.000000, 2692.000000, 2693.000000, 2694.000000, 2695.000000,\n2696.000000, 2697.000000, 2698.000000, 2699.000000, 2700.000000,\n2701.000000, 2702.000000, 2703.000000, 2704.000000, 2705.000000,\n2706.000000, 2707.000000, 2708.000000, 2709.000000, 2710.000000,\n2711.000000, 2712.000000, 2713.000000, 2714.000000, 2715.000000,\n2716.000000, 2717.000000, 2718.000000, 2719.000000, 2720.000000,\n2721.000000, 2722.000000, 2723.000000, 2724.000000, 2725.000000,\n2726.000000, 2727.000000, 2728.000000, 2729.000000, 2730.000000,\n2731.000000, 2732.000000, 2733.000000, 2734.000000, 2735.000000,\n2736.000000, 2737.000000, 2738.000000, 2739.000000, 2740.000000,\n2741.000000, 2742.000000, 2743.000000, 2744.000000, 2745.000000,\n2746.000000, 2747.000000, 2748.000000, 2749.000000, 2750.000000,\n2751.000000, 2752.000000, 2753.000000, 2754.000000, 2755.000000,\n2756.000000, 2757.000000, 2758.000000, 2759.000000, 2760.000000,\n2761.000000, 2762.000000, 2763.000000, 2764.000000, 2765.000000,\n2766.000000, 2767.000000, 2768.000000, 2769.000000, 2770.000000,\n2771.000000, 2772.000000, 2773.000000, 2774.000000, 2775.000000,\n2776.000000, 2777.000000, 2778.000000, 2779.000000, 2780.000000,\n2781.000000, 2782.000000, 2783.000000, 2784.000000, 2785.000000,\n2786.000000, 2787.000000, 2788.000000, 2789.000000, 2790.000000,\n2791.000000, 2792.000000, 2793.000000, 2794.000000, 2795.000000,\n2796.000000, 2797.000000, 2798.000000, 2799.000000, 2800.000000,\n2801.000000, 2802.000000, 2803.000000, 2804.000000, 2805.000000,\n2806.000000, 2807.000000, 2808.000000, 2809.000000, 2810.000000,\n2811.000000, 2812.000000, 2813.000000, 2814.000000, 2815.000000,\n2816.000000, 2817.000000, 2818.000000, 2819.000000, 2820.000000,\n2821.000000, 2822.000000, 2823.000000, 2824.000000, 2825.000000,\n2826.000000, 2827.000000, 2828.000000, 2829.000000, 2830.000000,\n2831.000000, 2832.000000, 2833.000000, 2834.000000, 2835.000000,\n2836.000000, 2837.000000, 2838.000000, 2839.000000, 2840.000000,\n2841.000000, 2842.000000, 2843.000000, 2844.000000, 2845.000000,\n2846.000000, 2847.000000, 2848.000000, 2849.000000, 2850.000000,\n2851.000000, 2852.000000, 2853.000000, 2854.000000, 2855.000000,\n2856.000000, 2857.000000, 2858.000000, 2859.000000, 2860.000000,\n2861.000000, 2862.000000, 2863.000000, 2864.000000, 2865.000000,\n2866.000000, 2867.000000, 2868.000000, 2869.000000, 2870.000000,\n2871.000000, 2872.000000, 2873.000000, 2874.000000, 2875.000000,\n2876.000000, 2877.000000, 2878.000000, 2879.000000, 2880.000000,\n2881.000000, 2882.000000, 2883.000000, 2884.000000, 2885.000000,\n2886.000000, 2887.000000, 2888.000000, 2889.000000, 2890.000000,\n2891.000000, 2892.000000, 2893.000000, 2894.000000, 2895.000000,\n2896.000000, 2897.000000, 2898.000000, 2899.000000, 2900.000000,\n2901.000000, 2902.000000, 2903.000000, 2904.000000, 2905.000000,\n2906.000000, 2907.000000, 2908.000000, 2909.000000, 2910.000000,\n2911.000000, 2912.000000, 2913.000000, 2914.000000, 2915.000000,\n2916.000000, 2917.000000, 2918.000000, 2919.000000, 2920.000000,\n2921.000000, 2922.000000, 2923.000000, 2924.000000, 2925.000000,\n2926.000000, 2927.000000, 2928.000000, 2929.000000, 2930.000000,\n2931.000000, 2932.000000, 2933.000000, 2934.000000, 2935.000000,\n2936.000000, 2937.000000, 2938.000000, 2939.000000, 2940.000000,\n2941.000000, 2942.000000, 2943.000000, 2944.000000, 2945.000000,\n2946.000000, 2947.000000, 2948.000000, 2949.000000, 2950.000000,\n2951.000000, 2952.000000, 2953.000000, 2954.000000, 2955.000000,\n2956.000000, 2957.000000, 2958.000000, 2959.000000, 2960.000000,\n2961.000000, 2962.000000, 2963.000000, 2964.000000, 2965.000000,\n2966.000000, 2967.000000, 2968.000000, 2969.000000, 2970.000000,\n2971.000000, 2972.000000, 2973.000000, 2974.000000, 2975.000000,\n2976.000000, 2977.000000, 2978.000000, 2979.000000, 2980.000000,\n2981.000000, 2982.000000, 2983.000000, 2984.000000, 2985.000000,\n2986.000000, 2987.000000, 2988.000000, 2989.000000, 2990.000000,\n2991.000000, 2992.000000, 2993.000000, 2994.000000, 2995.000000,\n2996.000000, 2997.000000, 2998.000000, 2999.000000, 3000.000000,\n3001.000000, 3002.000000, 3003.000000, 3004.000000, 3005.000000,\n3006.000000, 3007.000000, 3008.000000, 3009.000000, 3010.000000,\n3011.000000, 3012.000000, 3013.000000, 3014.000000, 3015.000000,\n3016.000000, 3017.000000, 3018.000000, 3019.000000, 3020.000000,\n3021.000000, 3022.000000, 3023.000000, 3024.000000, 3025.000000,\n3026.000000, 3027.000000, 3028.000000, 3029.000000, 3030.000000,\n3031.000000, 3032.000000, 3033.000000, 3034.000000, 3035.000000,\n3036.000000, 3037.000000, 3038.000000, 3039.000000, 3040.000000,\n3041.000000, 3042.000000, 3043.000000, 3044.000000, 3045.000000,\n3046.000000, 3047.000000, 3048.000000, 3049.000000, 3050.000000,\n3051.000000, 3052.000000, 3053.000000, 3054.000000, 3055.000000,\n3056.000000, 3057.000000, 3058.000000, 3059.000000, 3060.000000,\n3061.000000, 3062.000000, 3063.000000, 3064.000000, 3065.000000,\n3066.000000, 3067.000000, 3068.000000, 3069.000000, 3070.000000,\n3071.000000, 3072.000000, 3073.000000, 3074.000000, 3075.000000,\n3076.000000, 3077.000000, 3078.000000, 3079.000000, 3080.000000,\n3081.000000, 3082.000000, 3083.000000, 3084.000000, 3085.000000,\n3086.000000, 3087.000000, 3088.000000, 3089.000000, 3090.000000,\n3091.000000, 3092.000000, 3093.000000, 3094.000000, 3095.000000,\n3096.000000, 3097.000000, 3098.000000, 3099.000000, 3100.000000,\n3101.000000, 3102.000000, 3103.000000, 3104.000000, 3105.000000,\n3106.000000, 3107.000000, 3108.000000, 3109.000000, 3110.000000,\n3111.000000, 3112.000000, 3113.000000, 3114.000000, 3115.000000,\n3116.000000, 3117.000000, 3118.000000, 3119.000000, 3120.000000,\n3121.000000, 3122.000000, 3123.000000, 3124.000000, 3125.000000,\n3126.000000, 3127.000000, 3128.000000, 3129.000000, 3130.000000,\n3131.000000, 3132.000000, 3133.000000, 3134.000000, 3135.000000,\n3136.000000, 3137.000000, 3138.000000, 3139.000000, 3140.000000,\n3141.000000, 3142.000000, 3143.000000, 3144.000000, 3145.000000,\n3146.000000, 3147.000000, 3148.000000, 3149.000000, 3150.000000,\n3151.000000, 3152.000000, 3153.000000, 3154.000000, 3155.000000,\n3156.000000, 3157.000000, 3158.000000, 3159.000000, 3160.000000,\n3161.000000, 3162.000000, 3163.000000, 3164.000000, 3165.000000,\n3166.000000, 3167.000000, 3168.000000, 3169.000000, 3170.000000,\n3171.000000, 3172.000000, 3173.000000, 3174.000000, 3175.000000,\n3176.000000, 3177.000000, 3178.000000, 3179.000000, 3180.000000,\n3181.000000, 3182.000000, 3183.000000, 3184.000000, 3185.000000,\n3186.000000, 3187.000000, 3188.000000, 3189.000000, 3190.000000,\n3191.000000, 3192.000000, 3193.000000, 3194.000000, 3195.000000,\n3196.000000, 3197.000000, 3198.000000, 3199.000000, 3200.000000,\n3201.000000, 3202.000000, 3203.000000, 3204.000000, 3205.000000,\n3206.000000, 3207.000000, 3208.000000, 3209.000000, 3210.000000,\n3211.000000, 3212.000000, 3213.000000, 3214.000000, 3215.000000,\n3216.000000, 3217.000000, 3218.000000, 3219.000000, 3220.000000,\n3221.000000, 3222.000000, 3223.000000, 3224.000000, 3225.000000,\n3226.000000, 3227.000000, 3228.000000, 3229.000000, 3230.000000,\n3231.000000, 3232.000000, 3233.000000, 3234.000000, 3235.000000,\n3236.000000, 3237.000000, 3238.000000, 3239.000000, 3240.000000,\n3241.000000, 3242.000000, 3243.000000, 3244.000000, 3245.000000,\n3246.000000, 3247.000000, 3248.000000, 3249.000000, 3250.000000,\n3251.000000, 3252.000000, 3253.000000, 3254.000000, 3255.000000,\n3256.000000, 3257.000000, 3258.000000, 3259.000000, 3260.000000,\n3261.000000, 3262.000000, 3263.000000, 3264.000000, 3265.000000,\n3266.000000, 3267.000000, 3268.000000, 3269.000000, 3270.000000,\n3271.000000, 3272.000000, 3273.000000, 3274.000000, 3275.000000,\n3276.000000, 3277.000000, 3278.000000, 3279.000000, 3280.000000,\n3281.000000, 3282.000000, 3283.000000, 3284.000000, 3285.000000,\n3286.000000, 3287.000000, 3288.000000, 3289.000000, 3290.000000,\n3291.000000, 3292.000000, 3293.000000, 3294.000000, 3295.000000,\n3296.000000, 3297.000000, 3298.000000, 3299.000000, 3300.000000,\n3301.000000, 3302.000000, 3303.000000, 3304.000000, 3305.000000,\n3306.000000, 3307.000000, 3308.000000, 3309.000000, 3310.000000,\n3311.000000, 3312.000000, 3313.000000, 3314.000000, 3315.000000,\n3316.000000, 3317.000000, 3318.000000, 3319.000000, 3320.000000,\n3321.000000, 3322.000000, 3323.000000, 3324.000000, 3325.000000,\n3326.000000, 3327.000000, 3328.000000, 3329.000000, 3330.000000,\n3331.000000, 3332.000000, 3333.000000, 3334.000000, 3335.000000,\n3336.000000, 3337.000000, 3338.000000, 3339.000000, 3340.000000,\n3341.000000, 3342.000000, 3343.000000, 3344.000000, 3345.000000,\n3346.000000, 3347.000000, 3348.000000, 3349.000000, 3350.000000,\n3351.000000, 3352.000000, 3353.000000, 3354.000000, 3355.000000,\n3356.000000, 3357.000000, 3358.000000, 3359.000000, 3360.000000,\n3361.000000, 3362.000000, 3363.000000, 3364.000000, 3365.000000,\n3366.000000, 3367.000000, 3368.000000, 3369.000000, 3370.000000,\n3371.000000, 3372.000000, 3373.000000, 3374.000000, 3375.000000,\n3376.000000, 3377.000000, 3378.000000, 3379.000000, 3380.000000,\n3381.000000, 3382.000000, 3383.000000, 3384.000000, 3385.000000,\n3386.000000, 3387.000000, 3388.000000, 3389.000000, 3390.000000,\n3391.000000, 3392.000000, 3393.000000, 3394.000000, 3395.000000,\n3396.000000, 3397.000000, 3398.000000, 3399.000000, 3400.000000,\n3401.000000, 3402.000000, 3403.000000, 3404.000000, 3405.000000,\n3406.000000, 3407.000000, 3408.000000, 3409.000000, 3410.000000,\n3411.000000, 3412.000000, 3413.000000, 3414.000000, 3415.000000,\n3416.000000, 3417.000000, 3418.000000, 3419.000000, 3420.000000,\n3421.000000, 3422.000000, 3423.000000, 3424.000000, 3425.000000,\n3426.000000, 3427.000000, 3428.000000, 3429.000000, 3430.000000,\n3431.000000, 3432.000000, 3433.000000, 3434.000000, 3435.000000,\n3436.000000, 3437.000000, 3438.000000, 3439.000000, 3440.000000,\n3441.000000, 3442.000000, 3443.000000, 3444.000000, 3445.000000,\n3446.000000, 3447.000000, 3448.000000, 3449.000000, 3450.000000,\n3451.000000, 3452.000000, 3453.000000, 3454.000000, 3455.000000,\n3456.000000, 3457.000000, 3458.000000, 3459.000000, 3460.000000,\n3461.000000, 3462.000000, 3463.000000, 3464.000000, 3465.000000,\n3466.000000, 3467.000000, 3468.000000, 3469.000000, 3470.000000,\n3471.000000, 3472.000000, 3473.000000, 3474.000000, 3475.000000,\n3476.000000, 3477.000000, 3478.000000, 3479.000000, 3480.000000,\n3481.000000, 3482.000000, 3483.000000, 3484.000000, 3485.000000,\n3486.000000, 3487.000000, 3488.000000, 3489.000000, 3490.000000,\n3491.000000, 3492.000000, 3493.000000, 3494.000000, 3495.000000,\n3496.000000, 3497.000000, 3498.000000, 3499.000000, 3500.000000,\n3501.000000, 3502.000000, 3503.000000, 3504.000000, 3505.000000,\n3506.000000, 3507.000000, 3508.000000, 3509.000000, 3510.000000,\n3511.000000, 3512.000000, 3513.000000, 3514.000000, 3515.000000,\n3516.000000, 3517.000000, 3518.000000, 3519.000000, 3520.000000,\n3521.000000, 3522.000000, 3523.000000, 3524.000000, 3525.000000,\n3526.000000, 3527.000000, 3528.000000, 3529.000000, 3530.000000,\n3531.000000, 3532.000000, 3533.000000, 3534.000000, 3535.000000,\n3536.000000, 3537.000000, 3538.000000, 3539.000000, 3540.000000,\n3541.000000, 3542.000000, 3543.000000, 3544.000000, 3545.000000,\n3546.000000, 3547.000000, 3548.000000, 3549.000000, 3550.000000,\n3551.000000, 3552.000000, 3553.000000, 3554.000000, 3555.000000,\n3556.000000, 3557.000000, 3558.000000, 3559.000000, 3560.000000,\n3561.000000, 3562.000000, 3563.000000, 3564.000000, 3565.000000,\n3566.000000, 3567.000000, 3568.000000, 3569.000000, 3570.000000,\n3571.000000, 3572.000000, 3573.000000, 3574.000000, 3575.000000,\n3576.000000, 3577.000000, 3578.000000, 3579.000000, 3580.000000,\n3581.000000, 3582.000000, 3583.000000, 3584.000000, 3585.000000,\n3586.000000, 3587.000000, 3588.000000, 3589.000000, 3590.000000,\n3591.000000, 3592.000000, 3593.000000, 3594.000000, 3595.000000,\n3596.000000, 3597.000000, 3598.000000, 3599.000000, 3600.000000,\n3601.000000, 3602.000000, 3603.000000, 3604.000000, 3605.000000,\n3606.000000, 3607.000000, 3608.000000, 3609.000000, 3610.000000,\n3611.000000, 3612.000000, 3613.000000, 3614.000000, 3615.000000,\n3616.000000, 3617.000000, 3618.000000, 3619.000000, 3620.000000,\n3621.000000, 3622.000000, 3623.000000, 3624.000000, 3625.000000,\n3626.000000, 3627.000000, 3628.000000, 3629.000000, 3630.000000,\n3631.000000, 3632.000000, 3633.000000, 3634.000000, 3635.000000,\n3636.000000, 3637.000000, 3638.000000, 3639.000000, 3640.000000,\n3641.000000, 3642.000000, 3643.000000, 3644.000000, 3645.000000,\n3646.000000, 3647.000000, 3648.000000, 3649.000000, 3650.000000,\n3651.000000, 3652.000000, 3653.000000, 3654.000000, 3655.000000,\n3656.000000, 3657.000000, 3658.000000, 3659.000000, 3660.000000,\n3661.000000, 3662.000000, 3663.000000, 3664.000000, 3665.000000,\n3666.000000, 3667.000000, 3668.000000, 3669.000000, 3670.000000,\n3671.000000, 3672.000000, 3673.000000, 3674.000000, 3675.000000,\n3676.000000, 3677.000000, 3678.000000, 3679.000000, 3680.000000,\n3681.000000, 3682.000000, 3683.000000, 3684.000000, 3685.000000,\n3686.000000, 3687.000000, 3688.000000, 3689.000000, 3690.000000,\n3691.000000, 3692.000000, 3693.000000, 3694.000000, 3695.000000,\n3696.000000, 3697.000000, 3698.000000, 3699.000000, 3700.000000,\n3701.000000, 3702.000000, 3703.000000, 3704.000000, 3705.000000,\n3706.000000, 3707.000000, 3708.000000, 3709.000000, 3710.000000,\n3711.000000, 3712.000000, 3713.000000, 3714.000000, 3715.000000,\n3716.000000, 3717.000000, 3718.000000, 3719.000000, 3720.000000,\n3721.000000, 3722.000000, 3723.000000, 3724.000000, 3725.000000,\n3726.000000, 3727.000000, 3728.000000, 3729.000000, 3730.000000,\n3731.000000, 3732.000000, 3733.000000, 3734.000000, 3735.000000,\n3736.000000, 3737.000000, 3738.000000, 3739.000000, 3740.000000,\n3741.000000, 3742.000000, 3743.000000, 3744.000000, 3745.000000,\n3746.000000, 3747.000000, 3748.000000, 3749.000000, 3750.000000,\n3751.000000, 3752.000000, 3753.000000, 3754.000000, 3755.000000,\n3756.000000, 3757.000000, 3758.000000, 3759.000000, 3760.000000,\n3761.000000, 3762.000000, 3763.000000, 3764.000000, 3765.000000,\n3766.000000, 3767.000000, 3768.000000, 3769.000000, 3770.000000,\n3771.000000, 3772.000000, 3773.000000, 3774.000000, 3775.000000,\n3776.000000, 3777.000000, 3778.000000, 3779.000000, 3780.000000,\n3781.000000, 3782.000000, 3783.000000, 3784.000000, 3785.000000,\n3786.000000, 3787.000000, 3788.000000, 3789.000000, 3790.000000,\n3791.000000, 3792.000000, 3793.000000, 3794.000000, 3795.000000,\n3796.000000, 3797.000000, 3798.000000, 3799.000000, 3800.000000,\n3801.000000, 3802.000000, 3803.000000, 3804.000000, 3805.000000,\n3806.000000, 3807.000000, 3808.000000, 3809.000000, 3810.000000,\n3811.000000, 3812.000000, 3813.000000, 3814.000000, 3815.000000,\n3816.000000, 3817.000000, 3818.000000, 3819.000000, 3820.000000,\n3821.000000, 3822.000000, 3823.000000, 3824.000000, 3825.000000,\n3826.000000, 3827.000000, 3828.000000, 3829.000000, 3830.000000,\n3831.000000, 3832.000000, 3833.000000, 3834.000000, 3835.000000,\n3836.000000, 3837.000000, 3838.000000, 3839.000000, 3840.000000,\n3841.000000, 3842.000000, 3843.000000, 3844.000000, 3845.000000,\n3846.000000, 3847.000000, 3848.000000, 3849.000000, 3850.000000,\n3851.000000, 3852.000000, 3853.000000, 3854.000000, 3855.000000,\n3856.000000, 3857.000000, 3858.000000, 3859.000000, 3860.000000,\n3861.000000, 3862.000000, 3863.000000, 3864.000000, 3865.000000,\n3866.000000, 3867.000000, 3868.000000, 3869.000000, 3870.000000,\n3871.000000, 3872.000000, 3873.000000, 3874.000000, 3875.000000,\n3876.000000, 3877.000000, 3878.000000, 3879.000000, 3880.000000,\n3881.000000, 3882.000000, 3883.000000, 3884.000000, 3885.000000,\n3886.000000, 3887.000000, 3888.000000, 3889.000000, 3890.000000,\n3891.000000, 3892.000000, 3893.000000, 3894.000000, 3895.000000,\n3896.000000, 3897.000000, 3898.000000, 3899.000000, 3900.000000,\n3901.000000, 3902.000000, 3903.000000, 3904.000000, 3905.000000,\n3906.000000, 3907.000000, 3908.000000, 3909.000000, 3910.000000,\n3911.000000, 3912.000000, 3913.000000, 3914.000000, 3915.000000,\n3916.000000, 3917.000000, 3918.000000, 3919.000000, 3920.000000,\n3921.000000, 3922.000000, 3923.000000, 3924.000000, 3925.000000,\n3926.000000, 3927.000000, 3928.000000, 3929.000000, 3930.000000,\n3931.000000, 3932.000000, 3933.000000, 3934.000000, 3935.000000,\n3936.000000, 3937.000000, 3938.000000, 3939.000000, 3940.000000,\n3941.000000, 3942.000000, 3943.000000, 3944.000000, 3945.000000,\n3946.000000, 3947.000000, 3948.000000, 3949.000000, 3950.000000,\n3951.000000, 3952.000000, 3953.000000, 3954.000000, 3955.000000,\n3956.000000, 3957.000000, 3958.000000, 3959.000000, 3960.000000,\n3961.000000, 3962.000000, 3963.000000, 3964.000000, 3965.000000,\n3966.000000, 3967.000000, 3968.000000, 3969.000000, 3970.000000,\n3971.000000, 3972.000000, 3973.000000, 3974.000000, 3975.000000,\n3976.000000, 3977.000000, 3978.000000, 3979.000000, 3980.000000,\n3981.000000, 3982.000000, 3983.000000, 3984.000000, 3985.000000,\n3986.000000, 3987.000000, 3988.000000, 3989.000000, 3990.000000,\n3991.000000, 3992.000000, 3993.000000, 3994.000000, 3995.000000,\n3996.000000, 3997.000000, 3998.000000, 3999.000000, 4000.000000,\n4001.000000, 4002.000000, 4003.000000, 4004.000000, 4005.000000,\n4006.000000, 4007.000000, 4008.000000, 4009.000000, 4010.000000,\n4011.000000, 4012.000000, 4013.000000, 4014.000000, 4015.000000,\n4016.000000, 4017.000000, 4018.000000, 4019.000000, 4020.000000,\n4021.000000, 4022.000000, 4023.000000, 4024.000000, 4025.000000,\n4026.000000, 4027.000000, 4028.000000, 4029.000000, 4030.000000,\n4031.000000, 4032.000000, 4033.000000, 4034.000000, 4035.000000,\n4036.000000, 4037.000000, 4038.000000, 4039.000000, 4040.000000,\n4041.000000, 4042.000000, 4043.000000, 4044.000000, 4045.000000,\n4046.000000, 4047.000000, 4048.000000, 4049.000000, 4050.000000,\n4051.000000, 4052.000000, 4053.000000, 4054.000000, 4055.000000,\n4056.000000, 4057.000000, 4058.000000, 4059.000000, 4060.000000,\n4061.000000, 4062.000000, 4063.000000, 4064.000000, 4065.000000,\n4066.000000, 4067.000000, 4068.000000, 4069.000000, 4070.000000,\n4071.000000, 4072.000000, 4073.000000, 4074.000000, 4075.000000,\n4076.000000, 4077.000000, 4078.000000, 4079.000000, 4080.000000,\n4081.000000, 4082.000000, 4083.000000, 4084.000000, 4085.000000,\n4086.000000, 4087.000000, 4088.000000, 4089.000000, 4090.000000,\n4091.000000, 4092.000000, 4093.000000, 4094.000000, 4095.000000,\n4096.000000};\nstatic double axpy_4096_g[4096] = {\n1.000000,     4.000000,     7.000000,     10.000000,    13.000000,\n16.000000,    19.000000,    22.000000,    25.000000,    28.000000,\n31.000000,    34.000000,    37.000000,    40.000000,    43.000000,\n46.000000,    49.000000,    52.000000,    55.000000,    58.000000,\n61.000000,    64.000000,    67.000000,    70.000000,    73.000000,\n76.000000,    79.000000,    82.000000,    85.000000,    88.000000,\n91.000000,    94.000000,    97.000000,    100.000000,   103.000000,\n106.000000,   109.000000,   112.000000,   115.000000,   118.000000,\n121.000000,   124.000000,   127.000000,   130.000000,   133.000000,\n136.000000,   139.000000,   142.000000,   145.000000,   148.000000,\n151.000000,   154.000000,   157.000000,   160.000000,   163.000000,\n166.000000,   169.000000,   172.000000,   175.000000,   178.000000,\n181.000000,   184.000000,   187.000000,   190.000000,   193.000000,\n196.000000,   199.000000,   202.000000,   205.000000,   208.000000,\n211.000000,   214.000000,   217.000000,   220.000000,   223.000000,\n226.000000,   229.000000,   232.000000,   235.000000,   238.000000,\n241.000000,   244.000000,   247.000000,   250.000000,   253.000000,\n256.000000,   259.000000,   262.000000,   265.000000,   268.000000,\n271.000000,   274.000000,   277.000000,   280.000000,   283.000000,\n286.000000,   289.000000,   292.000000,   295.000000,   298.000000,\n301.000000,   304.000000,   307.000000,   310.000000,   313.000000,\n316.000000,   319.000000,   322.000000,   325.000000,   328.000000,\n331.000000,   334.000000,   337.000000,   340.000000,   343.000000,\n346.000000,   349.000000,   352.000000,   355.000000,   358.000000,\n361.000000,   364.000000,   367.000000,   370.000000,   373.000000,\n376.000000,   379.000000,   382.000000,   385.000000,   388.000000,\n391.000000,   394.000000,   397.000000,   400.000000,   403.000000,\n406.000000,   409.000000,   412.000000,   415.000000,   418.000000,\n421.000000,   424.000000,   427.000000,   430.000000,   433.000000,\n436.000000,   439.000000,   442.000000,   445.000000,   448.000000,\n451.000000,   454.000000,   457.000000,   460.000000,   463.000000,\n466.000000,   469.000000,   472.000000,   475.000000,   478.000000,\n481.000000,   484.000000,   487.000000,   490.000000,   493.000000,\n496.000000,   499.000000,   502.000000,   505.000000,   508.000000,\n511.000000,   514.000000,   517.000000,   520.000000,   523.000000,\n526.000000,   529.000000,   532.000000,   535.000000,   538.000000,\n541.000000,   544.000000,   547.000000,   550.000000,   553.000000,\n556.000000,   559.000000,   562.000000,   565.000000,   568.000000,\n571.000000,   574.000000,   577.000000,   580.000000,   583.000000,\n586.000000,   589.000000,   592.000000,   595.000000,   598.000000,\n601.000000,   604.000000,   607.000000,   610.000000,   613.000000,\n616.000000,   619.000000,   622.000000,   625.000000,   628.000000,\n631.000000,   634.000000,   637.000000,   640.000000,   643.000000,\n646.000000,   649.000000,   652.000000,   655.000000,   658.000000,\n661.000000,   664.000000,   667.000000,   670.000000,   673.000000,\n676.000000,   679.000000,   682.000000,   685.000000,   688.000000,\n691.000000,   694.000000,   697.000000,   700.000000,   703.000000,\n706.000000,   709.000000,   712.000000,   715.000000,   718.000000,\n721.000000,   724.000000,   727.000000,   730.000000,   733.000000,\n736.000000,   739.000000,   742.000000,   745.000000,   748.000000,\n751.000000,   754.000000,   757.000000,   760.000000,   763.000000,\n766.000000,   769.000000,   772.000000,   775.000000,   778.000000,\n781.000000,   784.000000,   787.000000,   790.000000,   793.000000,\n796.000000,   799.000000,   802.000000,   805.000000,   808.000000,\n811.000000,   814.000000,   817.000000,   820.000000,   823.000000,\n826.000000,   829.000000,   832.000000,   835.000000,   838.000000,\n841.000000,   844.000000,   847.000000,   850.000000,   853.000000,\n856.000000,   859.000000,   862.000000,   865.000000,   868.000000,\n871.000000,   874.000000,   877.000000,   880.000000,   883.000000,\n886.000000,   889.000000,   892.000000,   895.000000,   898.000000,\n901.000000,   904.000000,   907.000000,   910.000000,   913.000000,\n916.000000,   919.000000,   922.000000,   925.000000,   928.000000,\n931.000000,   934.000000,   937.000000,   940.000000,   943.000000,\n946.000000,   949.000000,   952.000000,   955.000000,   958.000000,\n961.000000,   964.000000,   967.000000,   970.000000,   973.000000,\n976.000000,   979.000000,   982.000000,   985.000000,   988.000000,\n991.000000,   994.000000,   997.000000,   1000.000000,  1003.000000,\n1006.000000,  1009.000000,  1012.000000,  1015.000000,  1018.000000,\n1021.000000,  1024.000000,  1027.000000,  1030.000000,  1033.000000,\n1036.000000,  1039.000000,  1042.000000,  1045.000000,  1048.000000,\n1051.000000,  1054.000000,  1057.000000,  1060.000000,  1063.000000,\n1066.000000,  1069.000000,  1072.000000,  1075.000000,  1078.000000,\n1081.000000,  1084.000000,  1087.000000,  1090.000000,  1093.000000,\n1096.000000,  1099.000000,  1102.000000,  1105.000000,  1108.000000,\n1111.000000,  1114.000000,  1117.000000,  1120.000000,  1123.000000,\n1126.000000,  1129.000000,  1132.000000,  1135.000000,  1138.000000,\n1141.000000,  1144.000000,  1147.000000,  1150.000000,  1153.000000,\n1156.000000,  1159.000000,  1162.000000,  1165.000000,  1168.000000,\n1171.000000,  1174.000000,  1177.000000,  1180.000000,  1183.000000,\n1186.000000,  1189.000000,  1192.000000,  1195.000000,  1198.000000,\n1201.000000,  1204.000000,  1207.000000,  1210.000000,  1213.000000,\n1216.000000,  1219.000000,  1222.000000,  1225.000000,  1228.000000,\n1231.000000,  1234.000000,  1237.000000,  1240.000000,  1243.000000,\n1246.000000,  1249.000000,  1252.000000,  1255.000000,  1258.000000,\n1261.000000,  1264.000000,  1267.000000,  1270.000000,  1273.000000,\n1276.000000,  1279.000000,  1282.000000,  1285.000000,  1288.000000,\n1291.000000,  1294.000000,  1297.000000,  1300.000000,  1303.000000,\n1306.000000,  1309.000000,  1312.000000,  1315.000000,  1318.000000,\n1321.000000,  1324.000000,  1327.000000,  1330.000000,  1333.000000,\n1336.000000,  1339.000000,  1342.000000,  1345.000000,  1348.000000,\n1351.000000,  1354.000000,  1357.000000,  1360.000000,  1363.000000,\n1366.000000,  1369.000000,  1372.000000,  1375.000000,  1378.000000,\n1381.000000,  1384.000000,  1387.000000,  1390.000000,  1393.000000,\n1396.000000,  1399.000000,  1402.000000,  1405.000000,  1408.000000,\n1411.000000,  1414.000000,  1417.000000,  1420.000000,  1423.000000,\n1426.000000,  1429.000000,  1432.000000,  1435.000000,  1438.000000,\n1441.000000,  1444.000000,  1447.000000,  1450.000000,  1453.000000,\n1456.000000,  1459.000000,  1462.000000,  1465.000000,  1468.000000,\n1471.000000,  1474.000000,  1477.000000,  1480.000000,  1483.000000,\n1486.000000,  1489.000000,  1492.000000,  1495.000000,  1498.000000,\n1501.000000,  1504.000000,  1507.000000,  1510.000000,  1513.000000,\n1516.000000,  1519.000000,  1522.000000,  1525.000000,  1528.000000,\n1531.000000,  1534.000000,  1537.000000,  1540.000000,  1543.000000,\n1546.000000,  1549.000000,  1552.000000,  1555.000000,  1558.000000,\n1561.000000,  1564.000000,  1567.000000,  1570.000000,  1573.000000,\n1576.000000,  1579.000000,  1582.000000,  1585.000000,  1588.000000,\n1591.000000,  1594.000000,  1597.000000,  1600.000000,  1603.000000,\n1606.000000,  1609.000000,  1612.000000,  1615.000000,  1618.000000,\n1621.000000,  1624.000000,  1627.000000,  1630.000000,  1633.000000,\n1636.000000,  1639.000000,  1642.000000,  1645.000000,  1648.000000,\n1651.000000,  1654.000000,  1657.000000,  1660.000000,  1663.000000,\n1666.000000,  1669.000000,  1672.000000,  1675.000000,  1678.000000,\n1681.000000,  1684.000000,  1687.000000,  1690.000000,  1693.000000,\n1696.000000,  1699.000000,  1702.000000,  1705.000000,  1708.000000,\n1711.000000,  1714.000000,  1717.000000,  1720.000000,  1723.000000,\n1726.000000,  1729.000000,  1732.000000,  1735.000000,  1738.000000,\n1741.000000,  1744.000000,  1747.000000,  1750.000000,  1753.000000,\n1756.000000,  1759.000000,  1762.000000,  1765.000000,  1768.000000,\n1771.000000,  1774.000000,  1777.000000,  1780.000000,  1783.000000,\n1786.000000,  1789.000000,  1792.000000,  1795.000000,  1798.000000,\n1801.000000,  1804.000000,  1807.000000,  1810.000000,  1813.000000,\n1816.000000,  1819.000000,  1822.000000,  1825.000000,  1828.000000,\n1831.000000,  1834.000000,  1837.000000,  1840.000000,  1843.000000,\n1846.000000,  1849.000000,  1852.000000,  1855.000000,  1858.000000,\n1861.000000,  1864.000000,  1867.000000,  1870.000000,  1873.000000,\n1876.000000,  1879.000000,  1882.000000,  1885.000000,  1888.000000,\n1891.000000,  1894.000000,  1897.000000,  1900.000000,  1903.000000,\n1906.000000,  1909.000000,  1912.000000,  1915.000000,  1918.000000,\n1921.000000,  1924.000000,  1927.000000,  1930.000000,  1933.000000,\n1936.000000,  1939.000000,  1942.000000,  1945.000000,  1948.000000,\n1951.000000,  1954.000000,  1957.000000,  1960.000000,  1963.000000,\n1966.000000,  1969.000000,  1972.000000,  1975.000000,  1978.000000,\n1981.000000,  1984.000000,  1987.000000,  1990.000000,  1993.000000,\n1996.000000,  1999.000000,  2002.000000,  2005.000000,  2008.000000,\n2011.000000,  2014.000000,  2017.000000,  2020.000000,  2023.000000,\n2026.000000,  2029.000000,  2032.000000,  2035.000000,  2038.000000,\n2041.000000,  2044.000000,  2047.000000,  2050.000000,  2053.000000,\n2056.000000,  2059.000000,  2062.000000,  2065.000000,  2068.000000,\n2071.000000,  2074.000000,  2077.000000,  2080.000000,  2083.000000,\n2086.000000,  2089.000000,  2092.000000,  2095.000000,  2098.000000,\n2101.000000,  2104.000000,  2107.000000,  2110.000000,  2113.000000,\n2116.000000,  2119.000000,  2122.000000,  2125.000000,  2128.000000,\n2131.000000,  2134.000000,  2137.000000,  2140.000000,  2143.000000,\n2146.000000,  2149.000000,  2152.000000,  2155.000000,  2158.000000,\n2161.000000,  2164.000000,  2167.000000,  2170.000000,  2173.000000,\n2176.000000,  2179.000000,  2182.000000,  2185.000000,  2188.000000,\n2191.000000,  2194.000000,  2197.000000,  2200.000000,  2203.000000,\n2206.000000,  2209.000000,  2212.000000,  2215.000000,  2218.000000,\n2221.000000,  2224.000000,  2227.000000,  2230.000000,  2233.000000,\n2236.000000,  2239.000000,  2242.000000,  2245.000000,  2248.000000,\n2251.000000,  2254.000000,  2257.000000,  2260.000000,  2263.000000,\n2266.000000,  2269.000000,  2272.000000,  2275.000000,  2278.000000,\n2281.000000,  2284.000000,  2287.000000,  2290.000000,  2293.000000,\n2296.000000,  2299.000000,  2302.000000,  2305.000000,  2308.000000,\n2311.000000,  2314.000000,  2317.000000,  2320.000000,  2323.000000,\n2326.000000,  2329.000000,  2332.000000,  2335.000000,  2338.000000,\n2341.000000,  2344.000000,  2347.000000,  2350.000000,  2353.000000,\n2356.000000,  2359.000000,  2362.000000,  2365.000000,  2368.000000,\n2371.000000,  2374.000000,  2377.000000,  2380.000000,  2383.000000,\n2386.000000,  2389.000000,  2392.000000,  2395.000000,  2398.000000,\n2401.000000,  2404.000000,  2407.000000,  2410.000000,  2413.000000,\n2416.000000,  2419.000000,  2422.000000,  2425.000000,  2428.000000,\n2431.000000,  2434.000000,  2437.000000,  2440.000000,  2443.000000,\n2446.000000,  2449.000000,  2452.000000,  2455.000000,  2458.000000,\n2461.000000,  2464.000000,  2467.000000,  2470.000000,  2473.000000,\n2476.000000,  2479.000000,  2482.000000,  2485.000000,  2488.000000,\n2491.000000,  2494.000000,  2497.000000,  2500.000000,  2503.000000,\n2506.000000,  2509.000000,  2512.000000,  2515.000000,  2518.000000,\n2521.000000,  2524.000000,  2527.000000,  2530.000000,  2533.000000,\n2536.000000,  2539.000000,  2542.000000,  2545.000000,  2548.000000,\n2551.000000,  2554.000000,  2557.000000,  2560.000000,  2563.000000,\n2566.000000,  2569.000000,  2572.000000,  2575.000000,  2578.000000,\n2581.000000,  2584.000000,  2587.000000,  2590.000000,  2593.000000,\n2596.000000,  2599.000000,  2602.000000,  2605.000000,  2608.000000,\n2611.000000,  2614.000000,  2617.000000,  2620.000000,  2623.000000,\n2626.000000,  2629.000000,  2632.000000,  2635.000000,  2638.000000,\n2641.000000,  2644.000000,  2647.000000,  2650.000000,  2653.000000,\n2656.000000,  2659.000000,  2662.000000,  2665.000000,  2668.000000,\n2671.000000,  2674.000000,  2677.000000,  2680.000000,  2683.000000,\n2686.000000,  2689.000000,  2692.000000,  2695.000000,  2698.000000,\n2701.000000,  2704.000000,  2707.000000,  2710.000000,  2713.000000,\n2716.000000,  2719.000000,  2722.000000,  2725.000000,  2728.000000,\n2731.000000,  2734.000000,  2737.000000,  2740.000000,  2743.000000,\n2746.000000,  2749.000000,  2752.000000,  2755.000000,  2758.000000,\n2761.000000,  2764.000000,  2767.000000,  2770.000000,  2773.000000,\n2776.000000,  2779.000000,  2782.000000,  2785.000000,  2788.000000,\n2791.000000,  2794.000000,  2797.000000,  2800.000000,  2803.000000,\n2806.000000,  2809.000000,  2812.000000,  2815.000000,  2818.000000,\n2821.000000,  2824.000000,  2827.000000,  2830.000000,  2833.000000,\n2836.000000,  2839.000000,  2842.000000,  2845.000000,  2848.000000,\n2851.000000,  2854.000000,  2857.000000,  2860.000000,  2863.000000,\n2866.000000,  2869.000000,  2872.000000,  2875.000000,  2878.000000,\n2881.000000,  2884.000000,  2887.000000,  2890.000000,  2893.000000,\n2896.000000,  2899.000000,  2902.000000,  2905.000000,  2908.000000,\n2911.000000,  2914.000000,  2917.000000,  2920.000000,  2923.000000,\n2926.000000,  2929.000000,  2932.000000,  2935.000000,  2938.000000,\n2941.000000,  2944.000000,  2947.000000,  2950.000000,  2953.000000,\n2956.000000,  2959.000000,  2962.000000,  2965.000000,  2968.000000,\n2971.000000,  2974.000000,  2977.000000,  2980.000000,  2983.000000,\n2986.000000,  2989.000000,  2992.000000,  2995.000000,  2998.000000,\n3001.000000,  3004.000000,  3007.000000,  3010.000000,  3013.000000,\n3016.000000,  3019.000000,  3022.000000,  3025.000000,  3028.000000,\n3031.000000,  3034.000000,  3037.000000,  3040.000000,  3043.000000,\n3046.000000,  3049.000000,  3052.000000,  3055.000000,  3058.000000,\n3061.000000,  3064.000000,  3067.000000,  3070.000000,  3073.000000,\n3076.000000,  3079.000000,  3082.000000,  3085.000000,  3088.000000,\n3091.000000,  3094.000000,  3097.000000,  3100.000000,  3103.000000,\n3106.000000,  3109.000000,  3112.000000,  3115.000000,  3118.000000,\n3121.000000,  3124.000000,  3127.000000,  3130.000000,  3133.000000,\n3136.000000,  3139.000000,  3142.000000,  3145.000000,  3148.000000,\n3151.000000,  3154.000000,  3157.000000,  3160.000000,  3163.000000,\n3166.000000,  3169.000000,  3172.000000,  3175.000000,  3178.000000,\n3181.000000,  3184.000000,  3187.000000,  3190.000000,  3193.000000,\n3196.000000,  3199.000000,  3202.000000,  3205.000000,  3208.000000,\n3211.000000,  3214.000000,  3217.000000,  3220.000000,  3223.000000,\n3226.000000,  3229.000000,  3232.000000,  3235.000000,  3238.000000,\n3241.000000,  3244.000000,  3247.000000,  3250.000000,  3253.000000,\n3256.000000,  3259.000000,  3262.000000,  3265.000000,  3268.000000,\n3271.000000,  3274.000000,  3277.000000,  3280.000000,  3283.000000,\n3286.000000,  3289.000000,  3292.000000,  3295.000000,  3298.000000,\n3301.000000,  3304.000000,  3307.000000,  3310.000000,  3313.000000,\n3316.000000,  3319.000000,  3322.000000,  3325.000000,  3328.000000,\n3331.000000,  3334.000000,  3337.000000,  3340.000000,  3343.000000,\n3346.000000,  3349.000000,  3352.000000,  3355.000000,  3358.000000,\n3361.000000,  3364.000000,  3367.000000,  3370.000000,  3373.000000,\n3376.000000,  3379.000000,  3382.000000,  3385.000000,  3388.000000,\n3391.000000,  3394.000000,  3397.000000,  3400.000000,  3403.000000,\n3406.000000,  3409.000000,  3412.000000,  3415.000000,  3418.000000,\n3421.000000,  3424.000000,  3427.000000,  3430.000000,  3433.000000,\n3436.000000,  3439.000000,  3442.000000,  3445.000000,  3448.000000,\n3451.000000,  3454.000000,  3457.000000,  3460.000000,  3463.000000,\n3466.000000,  3469.000000,  3472.000000,  3475.000000,  3478.000000,\n3481.000000,  3484.000000,  3487.000000,  3490.000000,  3493.000000,\n3496.000000,  3499.000000,  3502.000000,  3505.000000,  3508.000000,\n3511.000000,  3514.000000,  3517.000000,  3520.000000,  3523.000000,\n3526.000000,  3529.000000,  3532.000000,  3535.000000,  3538.000000,\n3541.000000,  3544.000000,  3547.000000,  3550.000000,  3553.000000,\n3556.000000,  3559.000000,  3562.000000,  3565.000000,  3568.000000,\n3571.000000,  3574.000000,  3577.000000,  3580.000000,  3583.000000,\n3586.000000,  3589.000000,  3592.000000,  3595.000000,  3598.000000,\n3601.000000,  3604.000000,  3607.000000,  3610.000000,  3613.000000,\n3616.000000,  3619.000000,  3622.000000,  3625.000000,  3628.000000,\n3631.000000,  3634.000000,  3637.000000,  3640.000000,  3643.000000,\n3646.000000,  3649.000000,  3652.000000,  3655.000000,  3658.000000,\n3661.000000,  3664.000000,  3667.000000,  3670.000000,  3673.000000,\n3676.000000,  3679.000000,  3682.000000,  3685.000000,  3688.000000,\n3691.000000,  3694.000000,  3697.000000,  3700.000000,  3703.000000,\n3706.000000,  3709.000000,  3712.000000,  3715.000000,  3718.000000,\n3721.000000,  3724.000000,  3727.000000,  3730.000000,  3733.000000,\n3736.000000,  3739.000000,  3742.000000,  3745.000000,  3748.000000,\n3751.000000,  3754.000000,  3757.000000,  3760.000000,  3763.000000,\n3766.000000,  3769.000000,  3772.000000,  3775.000000,  3778.000000,\n3781.000000,  3784.000000,  3787.000000,  3790.000000,  3793.000000,\n3796.000000,  3799.000000,  3802.000000,  3805.000000,  3808.000000,\n3811.000000,  3814.000000,  3817.000000,  3820.000000,  3823.000000,\n3826.000000,  3829.000000,  3832.000000,  3835.000000,  3838.000000,\n3841.000000,  3844.000000,  3847.000000,  3850.000000,  3853.000000,\n3856.000000,  3859.000000,  3862.000000,  3865.000000,  3868.000000,\n3871.000000,  3874.000000,  3877.000000,  3880.000000,  3883.000000,\n3886.000000,  3889.000000,  3892.000000,  3895.000000,  3898.000000,\n3901.000000,  3904.000000,  3907.000000,  3910.000000,  3913.000000,\n3916.000000,  3919.000000,  3922.000000,  3925.000000,  3928.000000,\n3931.000000,  3934.000000,  3937.000000,  3940.000000,  3943.000000,\n3946.000000,  3949.000000,  3952.000000,  3955.000000,  3958.000000,\n3961.000000,  3964.000000,  3967.000000,  3970.000000,  3973.000000,\n3976.000000,  3979.000000,  3982.000000,  3985.000000,  3988.000000,\n3991.000000,  3994.000000,  3997.000000,  4000.000000,  4003.000000,\n4006.000000,  4009.000000,  4012.000000,  4015.000000,  4018.000000,\n4021.000000,  4024.000000,  4027.000000,  4030.000000,  4033.000000,\n4036.000000,  4039.000000,  4042.000000,  4045.000000,  4048.000000,\n4051.000000,  4054.000000,  4057.000000,  4060.000000,  4063.000000,\n4066.000000,  4069.000000,  4072.000000,  4075.000000,  4078.000000,\n4081.000000,  4084.000000,  4087.000000,  4090.000000,  4093.000000,\n4096.000000,  4099.000000,  4102.000000,  4105.000000,  4108.000000,\n4111.000000,  4114.000000,  4117.000000,  4120.000000,  4123.000000,\n4126.000000,  4129.000000,  4132.000000,  4135.000000,  4138.000000,\n4141.000000,  4144.000000,  4147.000000,  4150.000000,  4153.000000,\n4156.000000,  4159.000000,  4162.000000,  4165.000000,  4168.000000,\n4171.000000,  4174.000000,  4177.000000,  4180.000000,  4183.000000,\n4186.000000,  4189.000000,  4192.000000,  4195.000000,  4198.000000,\n4201.000000,  4204.000000,  4207.000000,  4210.000000,  4213.000000,\n4216.000000,  4219.000000,  4222.000000,  4225.000000,  4228.000000,\n4231.000000,  4234.000000,  4237.000000,  4240.000000,  4243.000000,\n4246.000000,  4249.000000,  4252.000000,  4255.000000,  4258.000000,\n4261.000000,  4264.000000,  4267.000000,  4270.000000,  4273.000000,\n4276.000000,  4279.000000,  4282.000000,  4285.000000,  4288.000000,\n4291.000000,  4294.000000,  4297.000000,  4300.000000,  4303.000000,\n4306.000000,  4309.000000,  4312.000000,  4315.000000,  4318.000000,\n4321.000000,  4324.000000,  4327.000000,  4330.000000,  4333.000000,\n4336.000000,  4339.000000,  4342.000000,  4345.000000,  4348.000000,\n4351.000000,  4354.000000,  4357.000000,  4360.000000,  4363.000000,\n4366.000000,  4369.000000,  4372.000000,  4375.000000,  4378.000000,\n4381.000000,  4384.000000,  4387.000000,  4390.000000,  4393.000000,\n4396.000000,  4399.000000,  4402.000000,  4405.000000,  4408.000000,\n4411.000000,  4414.000000,  4417.000000,  4420.000000,  4423.000000,\n4426.000000,  4429.000000,  4432.000000,  4435.000000,  4438.000000,\n4441.000000,  4444.000000,  4447.000000,  4450.000000,  4453.000000,\n4456.000000,  4459.000000,  4462.000000,  4465.000000,  4468.000000,\n4471.000000,  4474.000000,  4477.000000,  4480.000000,  4483.000000,\n4486.000000,  4489.000000,  4492.000000,  4495.000000,  4498.000000,\n4501.000000,  4504.000000,  4507.000000,  4510.000000,  4513.000000,\n4516.000000,  4519.000000,  4522.000000,  4525.000000,  4528.000000,\n4531.000000,  4534.000000,  4537.000000,  4540.000000,  4543.000000,\n4546.000000,  4549.000000,  4552.000000,  4555.000000,  4558.000000,\n4561.000000,  4564.000000,  4567.000000,  4570.000000,  4573.000000,\n4576.000000,  4579.000000,  4582.000000,  4585.000000,  4588.000000,\n4591.000000,  4594.000000,  4597.000000,  4600.000000,  4603.000000,\n4606.000000,  4609.000000,  4612.000000,  4615.000000,  4618.000000,\n4621.000000,  4624.000000,  4627.000000,  4630.000000,  4633.000000,\n4636.000000,  4639.000000,  4642.000000,  4645.000000,  4648.000000,\n4651.000000,  4654.000000,  4657.000000,  4660.000000,  4663.000000,\n4666.000000,  4669.000000,  4672.000000,  4675.000000,  4678.000000,\n4681.000000,  4684.000000,  4687.000000,  4690.000000,  4693.000000,\n4696.000000,  4699.000000,  4702.000000,  4705.000000,  4708.000000,\n4711.000000,  4714.000000,  4717.000000,  4720.000000,  4723.000000,\n4726.000000,  4729.000000,  4732.000000,  4735.000000,  4738.000000,\n4741.000000,  4744.000000,  4747.000000,  4750.000000,  4753.000000,\n4756.000000,  4759.000000,  4762.000000,  4765.000000,  4768.000000,\n4771.000000,  4774.000000,  4777.000000,  4780.000000,  4783.000000,\n4786.000000,  4789.000000,  4792.000000,  4795.000000,  4798.000000,\n4801.000000,  4804.000000,  4807.000000,  4810.000000,  4813.000000,\n4816.000000,  4819.000000,  4822.000000,  4825.000000,  4828.000000,\n4831.000000,  4834.000000,  4837.000000,  4840.000000,  4843.000000,\n4846.000000,  4849.000000,  4852.000000,  4855.000000,  4858.000000,\n4861.000000,  4864.000000,  4867.000000,  4870.000000,  4873.000000,\n4876.000000,  4879.000000,  4882.000000,  4885.000000,  4888.000000,\n4891.000000,  4894.000000,  4897.000000,  4900.000000,  4903.000000,\n4906.000000,  4909.000000,  4912.000000,  4915.000000,  4918.000000,\n4921.000000,  4924.000000,  4927.000000,  4930.000000,  4933.000000,\n4936.000000,  4939.000000,  4942.000000,  4945.000000,  4948.000000,\n4951.000000,  4954.000000,  4957.000000,  4960.000000,  4963.000000,\n4966.000000,  4969.000000,  4972.000000,  4975.000000,  4978.000000,\n4981.000000,  4984.000000,  4987.000000,  4990.000000,  4993.000000,\n4996.000000,  4999.000000,  5002.000000,  5005.000000,  5008.000000,\n5011.000000,  5014.000000,  5017.000000,  5020.000000,  5023.000000,\n5026.000000,  5029.000000,  5032.000000,  5035.000000,  5038.000000,\n5041.000000,  5044.000000,  5047.000000,  5050.000000,  5053.000000,\n5056.000000,  5059.000000,  5062.000000,  5065.000000,  5068.000000,\n5071.000000,  5074.000000,  5077.000000,  5080.000000,  5083.000000,\n5086.000000,  5089.000000,  5092.000000,  5095.000000,  5098.000000,\n5101.000000,  5104.000000,  5107.000000,  5110.000000,  5113.000000,\n5116.000000,  5119.000000,  5122.000000,  5125.000000,  5128.000000,\n5131.000000,  5134.000000,  5137.000000,  5140.000000,  5143.000000,\n5146.000000,  5149.000000,  5152.000000,  5155.000000,  5158.000000,\n5161.000000,  5164.000000,  5167.000000,  5170.000000,  5173.000000,\n5176.000000,  5179.000000,  5182.000000,  5185.000000,  5188.000000,\n5191.000000,  5194.000000,  5197.000000,  5200.000000,  5203.000000,\n5206.000000,  5209.000000,  5212.000000,  5215.000000,  5218.000000,\n5221.000000,  5224.000000,  5227.000000,  5230.000000,  5233.000000,\n5236.000000,  5239.000000,  5242.000000,  5245.000000,  5248.000000,\n5251.000000,  5254.000000,  5257.000000,  5260.000000,  5263.000000,\n5266.000000,  5269.000000,  5272.000000,  5275.000000,  5278.000000,\n5281.000000,  5284.000000,  5287.000000,  5290.000000,  5293.000000,\n5296.000000,  5299.000000,  5302.000000,  5305.000000,  5308.000000,\n5311.000000,  5314.000000,  5317.000000,  5320.000000,  5323.000000,\n5326.000000,  5329.000000,  5332.000000,  5335.000000,  5338.000000,\n5341.000000,  5344.000000,  5347.000000,  5350.000000,  5353.000000,\n5356.000000,  5359.000000,  5362.000000,  5365.000000,  5368.000000,\n5371.000000,  5374.000000,  5377.000000,  5380.000000,  5383.000000,\n5386.000000,  5389.000000,  5392.000000,  5395.000000,  5398.000000,\n5401.000000,  5404.000000,  5407.000000,  5410.000000,  5413.000000,\n5416.000000,  5419.000000,  5422.000000,  5425.000000,  5428.000000,\n5431.000000,  5434.000000,  5437.000000,  5440.000000,  5443.000000,\n5446.000000,  5449.000000,  5452.000000,  5455.000000,  5458.000000,\n5461.000000,  5464.000000,  5467.000000,  5470.000000,  5473.000000,\n5476.000000,  5479.000000,  5482.000000,  5485.000000,  5488.000000,\n5491.000000,  5494.000000,  5497.000000,  5500.000000,  5503.000000,\n5506.000000,  5509.000000,  5512.000000,  5515.000000,  5518.000000,\n5521.000000,  5524.000000,  5527.000000,  5530.000000,  5533.000000,\n5536.000000,  5539.000000,  5542.000000,  5545.000000,  5548.000000,\n5551.000000,  5554.000000,  5557.000000,  5560.000000,  5563.000000,\n5566.000000,  5569.000000,  5572.000000,  5575.000000,  5578.000000,\n5581.000000,  5584.000000,  5587.000000,  5590.000000,  5593.000000,\n5596.000000,  5599.000000,  5602.000000,  5605.000000,  5608.000000,\n5611.000000,  5614.000000,  5617.000000,  5620.000000,  5623.000000,\n5626.000000,  5629.000000,  5632.000000,  5635.000000,  5638.000000,\n5641.000000,  5644.000000,  5647.000000,  5650.000000,  5653.000000,\n5656.000000,  5659.000000,  5662.000000,  5665.000000,  5668.000000,\n5671.000000,  5674.000000,  5677.000000,  5680.000000,  5683.000000,\n5686.000000,  5689.000000,  5692.000000,  5695.000000,  5698.000000,\n5701.000000,  5704.000000,  5707.000000,  5710.000000,  5713.000000,\n5716.000000,  5719.000000,  5722.000000,  5725.000000,  5728.000000,\n5731.000000,  5734.000000,  5737.000000,  5740.000000,  5743.000000,\n5746.000000,  5749.000000,  5752.000000,  5755.000000,  5758.000000,\n5761.000000,  5764.000000,  5767.000000,  5770.000000,  5773.000000,\n5776.000000,  5779.000000,  5782.000000,  5785.000000,  5788.000000,\n5791.000000,  5794.000000,  5797.000000,  5800.000000,  5803.000000,\n5806.000000,  5809.000000,  5812.000000,  5815.000000,  5818.000000,\n5821.000000,  5824.000000,  5827.000000,  5830.000000,  5833.000000,\n5836.000000,  5839.000000,  5842.000000,  5845.000000,  5848.000000,\n5851.000000,  5854.000000,  5857.000000,  5860.000000,  5863.000000,\n5866.000000,  5869.000000,  5872.000000,  5875.000000,  5878.000000,\n5881.000000,  5884.000000,  5887.000000,  5890.000000,  5893.000000,\n5896.000000,  5899.000000,  5902.000000,  5905.000000,  5908.000000,\n5911.000000,  5914.000000,  5917.000000,  5920.000000,  5923.000000,\n5926.000000,  5929.000000,  5932.000000,  5935.000000,  5938.000000,\n5941.000000,  5944.000000,  5947.000000,  5950.000000,  5953.000000,\n5956.000000,  5959.000000,  5962.000000,  5965.000000,  5968.000000,\n5971.000000,  5974.000000,  5977.000000,  5980.000000,  5983.000000,\n5986.000000,  5989.000000,  5992.000000,  5995.000000,  5998.000000,\n6001.000000,  6004.000000,  6007.000000,  6010.000000,  6013.000000,\n6016.000000,  6019.000000,  6022.000000,  6025.000000,  6028.000000,\n6031.000000,  6034.000000,  6037.000000,  6040.000000,  6043.000000,\n6046.000000,  6049.000000,  6052.000000,  6055.000000,  6058.000000,\n6061.000000,  6064.000000,  6067.000000,  6070.000000,  6073.000000,\n6076.000000,  6079.000000,  6082.000000,  6085.000000,  6088.000000,\n6091.000000,  6094.000000,  6097.000000,  6100.000000,  6103.000000,\n6106.000000,  6109.000000,  6112.000000,  6115.000000,  6118.000000,\n6121.000000,  6124.000000,  6127.000000,  6130.000000,  6133.000000,\n6136.000000,  6139.000000,  6142.000000,  6145.000000,  6148.000000,\n6151.000000,  6154.000000,  6157.000000,  6160.000000,  6163.000000,\n6166.000000,  6169.000000,  6172.000000,  6175.000000,  6178.000000,\n6181.000000,  6184.000000,  6187.000000,  6190.000000,  6193.000000,\n6196.000000,  6199.000000,  6202.000000,  6205.000000,  6208.000000,\n6211.000000,  6214.000000,  6217.000000,  6220.000000,  6223.000000,\n6226.000000,  6229.000000,  6232.000000,  6235.000000,  6238.000000,\n6241.000000,  6244.000000,  6247.000000,  6250.000000,  6253.000000,\n6256.000000,  6259.000000,  6262.000000,  6265.000000,  6268.000000,\n6271.000000,  6274.000000,  6277.000000,  6280.000000,  6283.000000,\n6286.000000,  6289.000000,  6292.000000,  6295.000000,  6298.000000,\n6301.000000,  6304.000000,  6307.000000,  6310.000000,  6313.000000,\n6316.000000,  6319.000000,  6322.000000,  6325.000000,  6328.000000,\n6331.000000,  6334.000000,  6337.000000,  6340.000000,  6343.000000,\n6346.000000,  6349.000000,  6352.000000,  6355.000000,  6358.000000,\n6361.000000,  6364.000000,  6367.000000,  6370.000000,  6373.000000,\n6376.000000,  6379.000000,  6382.000000,  6385.000000,  6388.000000,\n6391.000000,  6394.000000,  6397.000000,  6400.000000,  6403.000000,\n6406.000000,  6409.000000,  6412.000000,  6415.000000,  6418.000000,\n6421.000000,  6424.000000,  6427.000000,  6430.000000,  6433.000000,\n6436.000000,  6439.000000,  6442.000000,  6445.000000,  6448.000000,\n6451.000000,  6454.000000,  6457.000000,  6460.000000,  6463.000000,\n6466.000000,  6469.000000,  6472.000000,  6475.000000,  6478.000000,\n6481.000000,  6484.000000,  6487.000000,  6490.000000,  6493.000000,\n6496.000000,  6499.000000,  6502.000000,  6505.000000,  6508.000000,\n6511.000000,  6514.000000,  6517.000000,  6520.000000,  6523.000000,\n6526.000000,  6529.000000,  6532.000000,  6535.000000,  6538.000000,\n6541.000000,  6544.000000,  6547.000000,  6550.000000,  6553.000000,\n6556.000000,  6559.000000,  6562.000000,  6565.000000,  6568.000000,\n6571.000000,  6574.000000,  6577.000000,  6580.000000,  6583.000000,\n6586.000000,  6589.000000,  6592.000000,  6595.000000,  6598.000000,\n6601.000000,  6604.000000,  6607.000000,  6610.000000,  6613.000000,\n6616.000000,  6619.000000,  6622.000000,  6625.000000,  6628.000000,\n6631.000000,  6634.000000,  6637.000000,  6640.000000,  6643.000000,\n6646.000000,  6649.000000,  6652.000000,  6655.000000,  6658.000000,\n6661.000000,  6664.000000,  6667.000000,  6670.000000,  6673.000000,\n6676.000000,  6679.000000,  6682.000000,  6685.000000,  6688.000000,\n6691.000000,  6694.000000,  6697.000000,  6700.000000,  6703.000000,\n6706.000000,  6709.000000,  6712.000000,  6715.000000,  6718.000000,\n6721.000000,  6724.000000,  6727.000000,  6730.000000,  6733.000000,\n6736.000000,  6739.000000,  6742.000000,  6745.000000,  6748.000000,\n6751.000000,  6754.000000,  6757.000000,  6760.000000,  6763.000000,\n6766.000000,  6769.000000,  6772.000000,  6775.000000,  6778.000000,\n6781.000000,  6784.000000,  6787.000000,  6790.000000,  6793.000000,\n6796.000000,  6799.000000,  6802.000000,  6805.000000,  6808.000000,\n6811.000000,  6814.000000,  6817.000000,  6820.000000,  6823.000000,\n6826.000000,  6829.000000,  6832.000000,  6835.000000,  6838.000000,\n6841.000000,  6844.000000,  6847.000000,  6850.000000,  6853.000000,\n6856.000000,  6859.000000,  6862.000000,  6865.000000,  6868.000000,\n6871.000000,  6874.000000,  6877.000000,  6880.000000,  6883.000000,\n6886.000000,  6889.000000,  6892.000000,  6895.000000,  6898.000000,\n6901.000000,  6904.000000,  6907.000000,  6910.000000,  6913.000000,\n6916.000000,  6919.000000,  6922.000000,  6925.000000,  6928.000000,\n6931.000000,  6934.000000,  6937.000000,  6940.000000,  6943.000000,\n6946.000000,  6949.000000,  6952.000000,  6955.000000,  6958.000000,\n6961.000000,  6964.000000,  6967.000000,  6970.000000,  6973.000000,\n6976.000000,  6979.000000,  6982.000000,  6985.000000,  6988.000000,\n6991.000000,  6994.000000,  6997.000000,  7000.000000,  7003.000000,\n7006.000000,  7009.000000,  7012.000000,  7015.000000,  7018.000000,\n7021.000000,  7024.000000,  7027.000000,  7030.000000,  7033.000000,\n7036.000000,  7039.000000,  7042.000000,  7045.000000,  7048.000000,\n7051.000000,  7054.000000,  7057.000000,  7060.000000,  7063.000000,\n7066.000000,  7069.000000,  7072.000000,  7075.000000,  7078.000000,\n7081.000000,  7084.000000,  7087.000000,  7090.000000,  7093.000000,\n7096.000000,  7099.000000,  7102.000000,  7105.000000,  7108.000000,\n7111.000000,  7114.000000,  7117.000000,  7120.000000,  7123.000000,\n7126.000000,  7129.000000,  7132.000000,  7135.000000,  7138.000000,\n7141.000000,  7144.000000,  7147.000000,  7150.000000,  7153.000000,\n7156.000000,  7159.000000,  7162.000000,  7165.000000,  7168.000000,\n7171.000000,  7174.000000,  7177.000000,  7180.000000,  7183.000000,\n7186.000000,  7189.000000,  7192.000000,  7195.000000,  7198.000000,\n7201.000000,  7204.000000,  7207.000000,  7210.000000,  7213.000000,\n7216.000000,  7219.000000,  7222.000000,  7225.000000,  7228.000000,\n7231.000000,  7234.000000,  7237.000000,  7240.000000,  7243.000000,\n7246.000000,  7249.000000,  7252.000000,  7255.000000,  7258.000000,\n7261.000000,  7264.000000,  7267.000000,  7270.000000,  7273.000000,\n7276.000000,  7279.000000,  7282.000000,  7285.000000,  7288.000000,\n7291.000000,  7294.000000,  7297.000000,  7300.000000,  7303.000000,\n7306.000000,  7309.000000,  7312.000000,  7315.000000,  7318.000000,\n7321.000000,  7324.000000,  7327.000000,  7330.000000,  7333.000000,\n7336.000000,  7339.000000,  7342.000000,  7345.000000,  7348.000000,\n7351.000000,  7354.000000,  7357.000000,  7360.000000,  7363.000000,\n7366.000000,  7369.000000,  7372.000000,  7375.000000,  7378.000000,\n7381.000000,  7384.000000,  7387.000000,  7390.000000,  7393.000000,\n7396.000000,  7399.000000,  7402.000000,  7405.000000,  7408.000000,\n7411.000000,  7414.000000,  7417.000000,  7420.000000,  7423.000000,\n7426.000000,  7429.000000,  7432.000000,  7435.000000,  7438.000000,\n7441.000000,  7444.000000,  7447.000000,  7450.000000,  7453.000000,\n7456.000000,  7459.000000,  7462.000000,  7465.000000,  7468.000000,\n7471.000000,  7474.000000,  7477.000000,  7480.000000,  7483.000000,\n7486.000000,  7489.000000,  7492.000000,  7495.000000,  7498.000000,\n7501.000000,  7504.000000,  7507.000000,  7510.000000,  7513.000000,\n7516.000000,  7519.000000,  7522.000000,  7525.000000,  7528.000000,\n7531.000000,  7534.000000,  7537.000000,  7540.000000,  7543.000000,\n7546.000000,  7549.000000,  7552.000000,  7555.000000,  7558.000000,\n7561.000000,  7564.000000,  7567.000000,  7570.000000,  7573.000000,\n7576.000000,  7579.000000,  7582.000000,  7585.000000,  7588.000000,\n7591.000000,  7594.000000,  7597.000000,  7600.000000,  7603.000000,\n7606.000000,  7609.000000,  7612.000000,  7615.000000,  7618.000000,\n7621.000000,  7624.000000,  7627.000000,  7630.000000,  7633.000000,\n7636.000000,  7639.000000,  7642.000000,  7645.000000,  7648.000000,\n7651.000000,  7654.000000,  7657.000000,  7660.000000,  7663.000000,\n7666.000000,  7669.000000,  7672.000000,  7675.000000,  7678.000000,\n7681.000000,  7684.000000,  7687.000000,  7690.000000,  7693.000000,\n7696.000000,  7699.000000,  7702.000000,  7705.000000,  7708.000000,\n7711.000000,  7714.000000,  7717.000000,  7720.000000,  7723.000000,\n7726.000000,  7729.000000,  7732.000000,  7735.000000,  7738.000000,\n7741.000000,  7744.000000,  7747.000000,  7750.000000,  7753.000000,\n7756.000000,  7759.000000,  7762.000000,  7765.000000,  7768.000000,\n7771.000000,  7774.000000,  7777.000000,  7780.000000,  7783.000000,\n7786.000000,  7789.000000,  7792.000000,  7795.000000,  7798.000000,\n7801.000000,  7804.000000,  7807.000000,  7810.000000,  7813.000000,\n7816.000000,  7819.000000,  7822.000000,  7825.000000,  7828.000000,\n7831.000000,  7834.000000,  7837.000000,  7840.000000,  7843.000000,\n7846.000000,  7849.000000,  7852.000000,  7855.000000,  7858.000000,\n7861.000000,  7864.000000,  7867.000000,  7870.000000,  7873.000000,\n7876.000000,  7879.000000,  7882.000000,  7885.000000,  7888.000000,\n7891.000000,  7894.000000,  7897.000000,  7900.000000,  7903.000000,\n7906.000000,  7909.000000,  7912.000000,  7915.000000,  7918.000000,\n7921.000000,  7924.000000,  7927.000000,  7930.000000,  7933.000000,\n7936.000000,  7939.000000,  7942.000000,  7945.000000,  7948.000000,\n7951.000000,  7954.000000,  7957.000000,  7960.000000,  7963.000000,\n7966.000000,  7969.000000,  7972.000000,  7975.000000,  7978.000000,\n7981.000000,  7984.000000,  7987.000000,  7990.000000,  7993.000000,\n7996.000000,  7999.000000,  8002.000000,  8005.000000,  8008.000000,\n8011.000000,  8014.000000,  8017.000000,  8020.000000,  8023.000000,\n8026.000000,  8029.000000,  8032.000000,  8035.000000,  8038.000000,\n8041.000000,  8044.000000,  8047.000000,  8050.000000,  8053.000000,\n8056.000000,  8059.000000,  8062.000000,  8065.000000,  8068.000000,\n8071.000000,  8074.000000,  8077.000000,  8080.000000,  8083.000000,\n8086.000000,  8089.000000,  8092.000000,  8095.000000,  8098.000000,\n8101.000000,  8104.000000,  8107.000000,  8110.000000,  8113.000000,\n8116.000000,  8119.000000,  8122.000000,  8125.000000,  8128.000000,\n8131.000000,  8134.000000,  8137.000000,  8140.000000,  8143.000000,\n8146.000000,  8149.000000,  8152.000000,  8155.000000,  8158.000000,\n8161.000000,  8164.000000,  8167.000000,  8170.000000,  8173.000000,\n8176.000000,  8179.000000,  8182.000000,  8185.000000,  8188.000000,\n8191.000000,  8194.000000,  8197.000000,  8200.000000,  8203.000000,\n8206.000000,  8209.000000,  8212.000000,  8215.000000,  8218.000000,\n8221.000000,  8224.000000,  8227.000000,  8230.000000,  8233.000000,\n8236.000000,  8239.000000,  8242.000000,  8245.000000,  8248.000000,\n8251.000000,  8254.000000,  8257.000000,  8260.000000,  8263.000000,\n8266.000000,  8269.000000,  8272.000000,  8275.000000,  8278.000000,\n8281.000000,  8284.000000,  8287.000000,  8290.000000,  8293.000000,\n8296.000000,  8299.000000,  8302.000000,  8305.000000,  8308.000000,\n8311.000000,  8314.000000,  8317.000000,  8320.000000,  8323.000000,\n8326.000000,  8329.000000,  8332.000000,  8335.000000,  8338.000000,\n8341.000000,  8344.000000,  8347.000000,  8350.000000,  8353.000000,\n8356.000000,  8359.000000,  8362.000000,  8365.000000,  8368.000000,\n8371.000000,  8374.000000,  8377.000000,  8380.000000,  8383.000000,\n8386.000000,  8389.000000,  8392.000000,  8395.000000,  8398.000000,\n8401.000000,  8404.000000,  8407.000000,  8410.000000,  8413.000000,\n8416.000000,  8419.000000,  8422.000000,  8425.000000,  8428.000000,\n8431.000000,  8434.000000,  8437.000000,  8440.000000,  8443.000000,\n8446.000000,  8449.000000,  8452.000000,  8455.000000,  8458.000000,\n8461.000000,  8464.000000,  8467.000000,  8470.000000,  8473.000000,\n8476.000000,  8479.000000,  8482.000000,  8485.000000,  8488.000000,\n8491.000000,  8494.000000,  8497.000000,  8500.000000,  8503.000000,\n8506.000000,  8509.000000,  8512.000000,  8515.000000,  8518.000000,\n8521.000000,  8524.000000,  8527.000000,  8530.000000,  8533.000000,\n8536.000000,  8539.000000,  8542.000000,  8545.000000,  8548.000000,\n8551.000000,  8554.000000,  8557.000000,  8560.000000,  8563.000000,\n8566.000000,  8569.000000,  8572.000000,  8575.000000,  8578.000000,\n8581.000000,  8584.000000,  8587.000000,  8590.000000,  8593.000000,\n8596.000000,  8599.000000,  8602.000000,  8605.000000,  8608.000000,\n8611.000000,  8614.000000,  8617.000000,  8620.000000,  8623.000000,\n8626.000000,  8629.000000,  8632.000000,  8635.000000,  8638.000000,\n8641.000000,  8644.000000,  8647.000000,  8650.000000,  8653.000000,\n8656.000000,  8659.000000,  8662.000000,  8665.000000,  8668.000000,\n8671.000000,  8674.000000,  8677.000000,  8680.000000,  8683.000000,\n8686.000000,  8689.000000,  8692.000000,  8695.000000,  8698.000000,\n8701.000000,  8704.000000,  8707.000000,  8710.000000,  8713.000000,\n8716.000000,  8719.000000,  8722.000000,  8725.000000,  8728.000000,\n8731.000000,  8734.000000,  8737.000000,  8740.000000,  8743.000000,\n8746.000000,  8749.000000,  8752.000000,  8755.000000,  8758.000000,\n8761.000000,  8764.000000,  8767.000000,  8770.000000,  8773.000000,\n8776.000000,  8779.000000,  8782.000000,  8785.000000,  8788.000000,\n8791.000000,  8794.000000,  8797.000000,  8800.000000,  8803.000000,\n8806.000000,  8809.000000,  8812.000000,  8815.000000,  8818.000000,\n8821.000000,  8824.000000,  8827.000000,  8830.000000,  8833.000000,\n8836.000000,  8839.000000,  8842.000000,  8845.000000,  8848.000000,\n8851.000000,  8854.000000,  8857.000000,  8860.000000,  8863.000000,\n8866.000000,  8869.000000,  8872.000000,  8875.000000,  8878.000000,\n8881.000000,  8884.000000,  8887.000000,  8890.000000,  8893.000000,\n8896.000000,  8899.000000,  8902.000000,  8905.000000,  8908.000000,\n8911.000000,  8914.000000,  8917.000000,  8920.000000,  8923.000000,\n8926.000000,  8929.000000,  8932.000000,  8935.000000,  8938.000000,\n8941.000000,  8944.000000,  8947.000000,  8950.000000,  8953.000000,\n8956.000000,  8959.000000,  8962.000000,  8965.000000,  8968.000000,\n8971.000000,  8974.000000,  8977.000000,  8980.000000,  8983.000000,\n8986.000000,  8989.000000,  8992.000000,  8995.000000,  8998.000000,\n9001.000000,  9004.000000,  9007.000000,  9010.000000,  9013.000000,\n9016.000000,  9019.000000,  9022.000000,  9025.000000,  9028.000000,\n9031.000000,  9034.000000,  9037.000000,  9040.000000,  9043.000000,\n9046.000000,  9049.000000,  9052.000000,  9055.000000,  9058.000000,\n9061.000000,  9064.000000,  9067.000000,  9070.000000,  9073.000000,\n9076.000000,  9079.000000,  9082.000000,  9085.000000,  9088.000000,\n9091.000000,  9094.000000,  9097.000000,  9100.000000,  9103.000000,\n9106.000000,  9109.000000,  9112.000000,  9115.000000,  9118.000000,\n9121.000000,  9124.000000,  9127.000000,  9130.000000,  9133.000000,\n9136.000000,  9139.000000,  9142.000000,  9145.000000,  9148.000000,\n9151.000000,  9154.000000,  9157.000000,  9160.000000,  9163.000000,\n9166.000000,  9169.000000,  9172.000000,  9175.000000,  9178.000000,\n9181.000000,  9184.000000,  9187.000000,  9190.000000,  9193.000000,\n9196.000000,  9199.000000,  9202.000000,  9205.000000,  9208.000000,\n9211.000000,  9214.000000,  9217.000000,  9220.000000,  9223.000000,\n9226.000000,  9229.000000,  9232.000000,  9235.000000,  9238.000000,\n9241.000000,  9244.000000,  9247.000000,  9250.000000,  9253.000000,\n9256.000000,  9259.000000,  9262.000000,  9265.000000,  9268.000000,\n9271.000000,  9274.000000,  9277.000000,  9280.000000,  9283.000000,\n9286.000000,  9289.000000,  9292.000000,  9295.000000,  9298.000000,\n9301.000000,  9304.000000,  9307.000000,  9310.000000,  9313.000000,\n9316.000000,  9319.000000,  9322.000000,  9325.000000,  9328.000000,\n9331.000000,  9334.000000,  9337.000000,  9340.000000,  9343.000000,\n9346.000000,  9349.000000,  9352.000000,  9355.000000,  9358.000000,\n9361.000000,  9364.000000,  9367.000000,  9370.000000,  9373.000000,\n9376.000000,  9379.000000,  9382.000000,  9385.000000,  9388.000000,\n9391.000000,  9394.000000,  9397.000000,  9400.000000,  9403.000000,\n9406.000000,  9409.000000,  9412.000000,  9415.000000,  9418.000000,\n9421.000000,  9424.000000,  9427.000000,  9430.000000,  9433.000000,\n9436.000000,  9439.000000,  9442.000000,  9445.000000,  9448.000000,\n9451.000000,  9454.000000,  9457.000000,  9460.000000,  9463.000000,\n9466.000000,  9469.000000,  9472.000000,  9475.000000,  9478.000000,\n9481.000000,  9484.000000,  9487.000000,  9490.000000,  9493.000000,\n9496.000000,  9499.000000,  9502.000000,  9505.000000,  9508.000000,\n9511.000000,  9514.000000,  9517.000000,  9520.000000,  9523.000000,\n9526.000000,  9529.000000,  9532.000000,  9535.000000,  9538.000000,\n9541.000000,  9544.000000,  9547.000000,  9550.000000,  9553.000000,\n9556.000000,  9559.000000,  9562.000000,  9565.000000,  9568.000000,\n9571.000000,  9574.000000,  9577.000000,  9580.000000,  9583.000000,\n9586.000000,  9589.000000,  9592.000000,  9595.000000,  9598.000000,\n9601.000000,  9604.000000,  9607.000000,  9610.000000,  9613.000000,\n9616.000000,  9619.000000,  9622.000000,  9625.000000,  9628.000000,\n9631.000000,  9634.000000,  9637.000000,  9640.000000,  9643.000000,\n9646.000000,  9649.000000,  9652.000000,  9655.000000,  9658.000000,\n9661.000000,  9664.000000,  9667.000000,  9670.000000,  9673.000000,\n9676.000000,  9679.000000,  9682.000000,  9685.000000,  9688.000000,\n9691.000000,  9694.000000,  9697.000000,  9700.000000,  9703.000000,\n9706.000000,  9709.000000,  9712.000000,  9715.000000,  9718.000000,\n9721.000000,  9724.000000,  9727.000000,  9730.000000,  9733.000000,\n9736.000000,  9739.000000,  9742.000000,  9745.000000,  9748.000000,\n9751.000000,  9754.000000,  9757.000000,  9760.000000,  9763.000000,\n9766.000000,  9769.000000,  9772.000000,  9775.000000,  9778.000000,\n9781.000000,  9784.000000,  9787.000000,  9790.000000,  9793.000000,\n9796.000000,  9799.000000,  9802.000000,  9805.000000,  9808.000000,\n9811.000000,  9814.000000,  9817.000000,  9820.000000,  9823.000000,\n9826.000000,  9829.000000,  9832.000000,  9835.000000,  9838.000000,\n9841.000000,  9844.000000,  9847.000000,  9850.000000,  9853.000000,\n9856.000000,  9859.000000,  9862.000000,  9865.000000,  9868.000000,\n9871.000000,  9874.000000,  9877.000000,  9880.000000,  9883.000000,\n9886.000000,  9889.000000,  9892.000000,  9895.000000,  9898.000000,\n9901.000000,  9904.000000,  9907.000000,  9910.000000,  9913.000000,\n9916.000000,  9919.000000,  9922.000000,  9925.000000,  9928.000000,\n9931.000000,  9934.000000,  9937.000000,  9940.000000,  9943.000000,\n9946.000000,  9949.000000,  9952.000000,  9955.000000,  9958.000000,\n9961.000000,  9964.000000,  9967.000000,  9970.000000,  9973.000000,\n9976.000000,  9979.000000,  9982.000000,  9985.000000,  9988.000000,\n9991.000000,  9994.000000,  9997.000000,  10000.000000, 10003.000000,\n10006.000000, 10009.000000, 10012.000000, 10015.000000, 10018.000000,\n10021.000000, 10024.000000, 10027.000000, 10030.000000, 10033.000000,\n10036.000000, 10039.000000, 10042.000000, 10045.000000, 10048.000000,\n10051.000000, 10054.000000, 10057.000000, 10060.000000, 10063.000000,\n10066.000000, 10069.000000, 10072.000000, 10075.000000, 10078.000000,\n10081.000000, 10084.000000, 10087.000000, 10090.000000, 10093.000000,\n10096.000000, 10099.000000, 10102.000000, 10105.000000, 10108.000000,\n10111.000000, 10114.000000, 10117.000000, 10120.000000, 10123.000000,\n10126.000000, 10129.000000, 10132.000000, 10135.000000, 10138.000000,\n10141.000000, 10144.000000, 10147.000000, 10150.000000, 10153.000000,\n10156.000000, 10159.000000, 10162.000000, 10165.000000, 10168.000000,\n10171.000000, 10174.000000, 10177.000000, 10180.000000, 10183.000000,\n10186.000000, 10189.000000, 10192.000000, 10195.000000, 10198.000000,\n10201.000000, 10204.000000, 10207.000000, 10210.000000, 10213.000000,\n10216.000000, 10219.000000, 10222.000000, 10225.000000, 10228.000000,\n10231.000000, 10234.000000, 10237.000000, 10240.000000, 10243.000000,\n10246.000000, 10249.000000, 10252.000000, 10255.000000, 10258.000000,\n10261.000000, 10264.000000, 10267.000000, 10270.000000, 10273.000000,\n10276.000000, 10279.000000, 10282.000000, 10285.000000, 10288.000000,\n10291.000000, 10294.000000, 10297.000000, 10300.000000, 10303.000000,\n10306.000000, 10309.000000, 10312.000000, 10315.000000, 10318.000000,\n10321.000000, 10324.000000, 10327.000000, 10330.000000, 10333.000000,\n10336.000000, 10339.000000, 10342.000000, 10345.000000, 10348.000000,\n10351.000000, 10354.000000, 10357.000000, 10360.000000, 10363.000000,\n10366.000000, 10369.000000, 10372.000000, 10375.000000, 10378.000000,\n10381.000000, 10384.000000, 10387.000000, 10390.000000, 10393.000000,\n10396.000000, 10399.000000, 10402.000000, 10405.000000, 10408.000000,\n10411.000000, 10414.000000, 10417.000000, 10420.000000, 10423.000000,\n10426.000000, 10429.000000, 10432.000000, 10435.000000, 10438.000000,\n10441.000000, 10444.000000, 10447.000000, 10450.000000, 10453.000000,\n10456.000000, 10459.000000, 10462.000000, 10465.000000, 10468.000000,\n10471.000000, 10474.000000, 10477.000000, 10480.000000, 10483.000000,\n10486.000000, 10489.000000, 10492.000000, 10495.000000, 10498.000000,\n10501.000000, 10504.000000, 10507.000000, 10510.000000, 10513.000000,\n10516.000000, 10519.000000, 10522.000000, 10525.000000, 10528.000000,\n10531.000000, 10534.000000, 10537.000000, 10540.000000, 10543.000000,\n10546.000000, 10549.000000, 10552.000000, 10555.000000, 10558.000000,\n10561.000000, 10564.000000, 10567.000000, 10570.000000, 10573.000000,\n10576.000000, 10579.000000, 10582.000000, 10585.000000, 10588.000000,\n10591.000000, 10594.000000, 10597.000000, 10600.000000, 10603.000000,\n10606.000000, 10609.000000, 10612.000000, 10615.000000, 10618.000000,\n10621.000000, 10624.000000, 10627.000000, 10630.000000, 10633.000000,\n10636.000000, 10639.000000, 10642.000000, 10645.000000, 10648.000000,\n10651.000000, 10654.000000, 10657.000000, 10660.000000, 10663.000000,\n10666.000000, 10669.000000, 10672.000000, 10675.000000, 10678.000000,\n10681.000000, 10684.000000, 10687.000000, 10690.000000, 10693.000000,\n10696.000000, 10699.000000, 10702.000000, 10705.000000, 10708.000000,\n10711.000000, 10714.000000, 10717.000000, 10720.000000, 10723.000000,\n10726.000000, 10729.000000, 10732.000000, 10735.000000, 10738.000000,\n10741.000000, 10744.000000, 10747.000000, 10750.000000, 10753.000000,\n10756.000000, 10759.000000, 10762.000000, 10765.000000, 10768.000000,\n10771.000000, 10774.000000, 10777.000000, 10780.000000, 10783.000000,\n10786.000000, 10789.000000, 10792.000000, 10795.000000, 10798.000000,\n10801.000000, 10804.000000, 10807.000000, 10810.000000, 10813.000000,\n10816.000000, 10819.000000, 10822.000000, 10825.000000, 10828.000000,\n10831.000000, 10834.000000, 10837.000000, 10840.000000, 10843.000000,\n10846.000000, 10849.000000, 10852.000000, 10855.000000, 10858.000000,\n10861.000000, 10864.000000, 10867.000000, 10870.000000, 10873.000000,\n10876.000000, 10879.000000, 10882.000000, 10885.000000, 10888.000000,\n10891.000000, 10894.000000, 10897.000000, 10900.000000, 10903.000000,\n10906.000000, 10909.000000, 10912.000000, 10915.000000, 10918.000000,\n10921.000000, 10924.000000, 10927.000000, 10930.000000, 10933.000000,\n10936.000000, 10939.000000, 10942.000000, 10945.000000, 10948.000000,\n10951.000000, 10954.000000, 10957.000000, 10960.000000, 10963.000000,\n10966.000000, 10969.000000, 10972.000000, 10975.000000, 10978.000000,\n10981.000000, 10984.000000, 10987.000000, 10990.000000, 10993.000000,\n10996.000000, 10999.000000, 11002.000000, 11005.000000, 11008.000000,\n11011.000000, 11014.000000, 11017.000000, 11020.000000, 11023.000000,\n11026.000000, 11029.000000, 11032.000000, 11035.000000, 11038.000000,\n11041.000000, 11044.000000, 11047.000000, 11050.000000, 11053.000000,\n11056.000000, 11059.000000, 11062.000000, 11065.000000, 11068.000000,\n11071.000000, 11074.000000, 11077.000000, 11080.000000, 11083.000000,\n11086.000000, 11089.000000, 11092.000000, 11095.000000, 11098.000000,\n11101.000000, 11104.000000, 11107.000000, 11110.000000, 11113.000000,\n11116.000000, 11119.000000, 11122.000000, 11125.000000, 11128.000000,\n11131.000000, 11134.000000, 11137.000000, 11140.000000, 11143.000000,\n11146.000000, 11149.000000, 11152.000000, 11155.000000, 11158.000000,\n11161.000000, 11164.000000, 11167.000000, 11170.000000, 11173.000000,\n11176.000000, 11179.000000, 11182.000000, 11185.000000, 11188.000000,\n11191.000000, 11194.000000, 11197.000000, 11200.000000, 11203.000000,\n11206.000000, 11209.000000, 11212.000000, 11215.000000, 11218.000000,\n11221.000000, 11224.000000, 11227.000000, 11230.000000, 11233.000000,\n11236.000000, 11239.000000, 11242.000000, 11245.000000, 11248.000000,\n11251.000000, 11254.000000, 11257.000000, 11260.000000, 11263.000000,\n11266.000000, 11269.000000, 11272.000000, 11275.000000, 11278.000000,\n11281.000000, 11284.000000, 11287.000000, 11290.000000, 11293.000000,\n11296.000000, 11299.000000, 11302.000000, 11305.000000, 11308.000000,\n11311.000000, 11314.000000, 11317.000000, 11320.000000, 11323.000000,\n11326.000000, 11329.000000, 11332.000000, 11335.000000, 11338.000000,\n11341.000000, 11344.000000, 11347.000000, 11350.000000, 11353.000000,\n11356.000000, 11359.000000, 11362.000000, 11365.000000, 11368.000000,\n11371.000000, 11374.000000, 11377.000000, 11380.000000, 11383.000000,\n11386.000000, 11389.000000, 11392.000000, 11395.000000, 11398.000000,\n11401.000000, 11404.000000, 11407.000000, 11410.000000, 11413.000000,\n11416.000000, 11419.000000, 11422.000000, 11425.000000, 11428.000000,\n11431.000000, 11434.000000, 11437.000000, 11440.000000, 11443.000000,\n11446.000000, 11449.000000, 11452.000000, 11455.000000, 11458.000000,\n11461.000000, 11464.000000, 11467.000000, 11470.000000, 11473.000000,\n11476.000000, 11479.000000, 11482.000000, 11485.000000, 11488.000000,\n11491.000000, 11494.000000, 11497.000000, 11500.000000, 11503.000000,\n11506.000000, 11509.000000, 11512.000000, 11515.000000, 11518.000000,\n11521.000000, 11524.000000, 11527.000000, 11530.000000, 11533.000000,\n11536.000000, 11539.000000, 11542.000000, 11545.000000, 11548.000000,\n11551.000000, 11554.000000, 11557.000000, 11560.000000, 11563.000000,\n11566.000000, 11569.000000, 11572.000000, 11575.000000, 11578.000000,\n11581.000000, 11584.000000, 11587.000000, 11590.000000, 11593.000000,\n11596.000000, 11599.000000, 11602.000000, 11605.000000, 11608.000000,\n11611.000000, 11614.000000, 11617.000000, 11620.000000, 11623.000000,\n11626.000000, 11629.000000, 11632.000000, 11635.000000, 11638.000000,\n11641.000000, 11644.000000, 11647.000000, 11650.000000, 11653.000000,\n11656.000000, 11659.000000, 11662.000000, 11665.000000, 11668.000000,\n11671.000000, 11674.000000, 11677.000000, 11680.000000, 11683.000000,\n11686.000000, 11689.000000, 11692.000000, 11695.000000, 11698.000000,\n11701.000000, 11704.000000, 11707.000000, 11710.000000, 11713.000000,\n11716.000000, 11719.000000, 11722.000000, 11725.000000, 11728.000000,\n11731.000000, 11734.000000, 11737.000000, 11740.000000, 11743.000000,\n11746.000000, 11749.000000, 11752.000000, 11755.000000, 11758.000000,\n11761.000000, 11764.000000, 11767.000000, 11770.000000, 11773.000000,\n11776.000000, 11779.000000, 11782.000000, 11785.000000, 11788.000000,\n11791.000000, 11794.000000, 11797.000000, 11800.000000, 11803.000000,\n11806.000000, 11809.000000, 11812.000000, 11815.000000, 11818.000000,\n11821.000000, 11824.000000, 11827.000000, 11830.000000, 11833.000000,\n11836.000000, 11839.000000, 11842.000000, 11845.000000, 11848.000000,\n11851.000000, 11854.000000, 11857.000000, 11860.000000, 11863.000000,\n11866.000000, 11869.000000, 11872.000000, 11875.000000, 11878.000000,\n11881.000000, 11884.000000, 11887.000000, 11890.000000, 11893.000000,\n11896.000000, 11899.000000, 11902.000000, 11905.000000, 11908.000000,\n11911.000000, 11914.000000, 11917.000000, 11920.000000, 11923.000000,\n11926.000000, 11929.000000, 11932.000000, 11935.000000, 11938.000000,\n11941.000000, 11944.000000, 11947.000000, 11950.000000, 11953.000000,\n11956.000000, 11959.000000, 11962.000000, 11965.000000, 11968.000000,\n11971.000000, 11974.000000, 11977.000000, 11980.000000, 11983.000000,\n11986.000000, 11989.000000, 11992.000000, 11995.000000, 11998.000000,\n12001.000000, 12004.000000, 12007.000000, 12010.000000, 12013.000000,\n12016.000000, 12019.000000, 12022.000000, 12025.000000, 12028.000000,\n12031.000000, 12034.000000, 12037.000000, 12040.000000, 12043.000000,\n12046.000000, 12049.000000, 12052.000000, 12055.000000, 12058.000000,\n12061.000000, 12064.000000, 12067.000000, 12070.000000, 12073.000000,\n12076.000000, 12079.000000, 12082.000000, 12085.000000, 12088.000000,\n12091.000000, 12094.000000, 12097.000000, 12100.000000, 12103.000000,\n12106.000000, 12109.000000, 12112.000000, 12115.000000, 12118.000000,\n12121.000000, 12124.000000, 12127.000000, 12130.000000, 12133.000000,\n12136.000000, 12139.000000, 12142.000000, 12145.000000, 12148.000000,\n12151.000000, 12154.000000, 12157.000000, 12160.000000, 12163.000000,\n12166.000000, 12169.000000, 12172.000000, 12175.000000, 12178.000000,\n12181.000000, 12184.000000, 12187.000000, 12190.000000, 12193.000000,\n12196.000000, 12199.000000, 12202.000000, 12205.000000, 12208.000000,\n12211.000000, 12214.000000, 12217.000000, 12220.000000, 12223.000000,\n12226.000000, 12229.000000, 12232.000000, 12235.000000, 12238.000000,\n12241.000000, 12244.000000, 12247.000000, 12250.000000, 12253.000000,\n12256.000000, 12259.000000, 12262.000000, 12265.000000, 12268.000000,\n12271.000000, 12274.000000, 12277.000000, 12280.000000, 12283.000000,\n12286.000000};\nstatic double axpy_4096_a = 2.000000;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/","title":"applications/data/data_fp32_nnlinear.h","text":""},{"location":"runtime/Files/data__fp32__nnlinear_8h/#attributes","title":"Attributes","text":"Name network_fp32_t nn_linear_baseline_t float nn_linear_baseline_weights_dram float nn_linear_baseline_biases_dram"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/data__fp32__nnlinear_8h/#variable-nn_linear_baseline_t","title":"variable nn_linear_baseline_t","text":"<pre><code>network_fp32_t nn_linear_baseline_t = {.IN_CH1 = 28,\n.IN_CH2 = 28,\n.OUT_CH = 10,\n.learning_rate = 0.5,\n.dtype = FP32};\n</code></pre>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#variable-nn_linear_baseline_weights_dram","title":"variable nn_linear_baseline_weights_dram","text":"<pre><code>static float nn_linear_baseline_weights_dram;\n</code></pre>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#variable-nn_linear_baseline_biases_dram","title":"variable nn_linear_baseline_biases_dram","text":"<pre><code>static float nn_linear_baseline_biases_dram = {\n0.029830838495251873,  -0.027718893800693683, 0.014915538915354814,\n0.013144414092396091,  0.026214015226942618,  0.005715480139309234,\n-0.016521356227486333, 0.01685057481095459,   0.007825814410188814,\n0.031028853769378233};\n</code></pre>"},{"location":"runtime/Files/data__fp32__nnlinear_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2022 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"network.h\"\n\n// This file is used to initialize the network\n// parameters with the same values as in the\n// Python golden model implementation.\nnetwork_fp32_t nn_linear_baseline_t = {.IN_CH1 = 28,\n.IN_CH2 = 28,\n.OUT_CH = 10,\n.learning_rate = 0.5,\n.dtype = FP32};\n\nstatic float nn_linear_baseline_weights_dram[10][784] = {\n-0.031560393859897874,   -0.031220702326815886,   -0.02688670908754221,\n-0.031958559688494495,   0.0018694212039115602,   -0.0016582318723228826,\n0.03251683573208154,     0.030625184389816394,    -0.02974690223193801,\n-0.02623995198902153,    -0.024496178749235136,   -0.008902354853535672,\n0.02446569505939191,     0.02646436012740696,     -0.008747646052102898,\n0.008031184928127948,    -0.029420729648959212,   0.01437013513927148,\n0.00881450595387147,     -0.0044800715863819885,  -0.030376080109017996,\n0.013102158364761496,    -0.013411522805502674,   -0.013638658769766252,\n-0.03347570246947031,    -0.03283096659571734,    0.030850627846785612,\n-0.02484815518410254,    -0.016782506303688507,   -0.026397607669135393,\n-0.01772462707561974,    -0.019042272210146583,   -0.019595350086179526,\n-0.013030871588783466,   0.008172020342970399,    0.006983667966859888,\n0.02492877469629074,     -0.033393170803144294,   -0.013625443287390673,\n-0.004835446110332891,   0.031021343299206892,    -0.02697764692323844,\n-0.005164617355733353,   -0.01512972317216705,    0.034385789538658916,\n0.024687894935655888,    -0.008265855477337245,   -0.028620951245796212,\n0.01161771391801586,     0.005852461927730415,    0.01495139402269543,\n-0.0019980345537277994,  -0.029012360056801134,   0.0076009861625556275,\n-6.056760815225421e-05,  0.0356025466421935,      -0.019097206577438082,\n-0.009078212437143802,   0.008963208919662362,    -0.015963695916657774,\n-0.03492247215951814,    0.015915514390541126,    -0.017541456673786694,\n0.009343622931593172,    -0.010437161342271739,   -0.0041723497935981825,\n0.008058013107896063,    0.02853005835897382,     0.012837001788153135,\n-0.02539694570127634,    0.004092332120674566,    0.03355119206183898,\n-0.013620955123907375,   -0.031070906814765827,   0.010274093877994979,\n-0.035237898480022456,   0.004404361110414106,    0.01024535473077222,\n-0.025871050321135163,   -0.014298271623350027,   0.00970046350065555,\n0.0010400312100367626,   0.012796711765361377,    -0.023749781648831535,\n0.027985391236756765,    0.03396033102860969,     -0.019039610750410028,\n0.01555004374373951,     -0.03487850729930664,    -0.02884563776674017,\n0.030643087513518106,    0.01609413449811319,     -0.02944507865464626,\n-0.00030649607573512186, 0.03148536191900533,     -0.014758313028008879,\n0.004059134574034887,    0.007429331060505814,    -0.031545045057824427,\n0.032974658752141894,    -0.009501903541987345,   -0.009391564118173308,\n0.021503569850770905,    0.003770000441281467,    0.014010740666098372,\n0.00360620377463537,     -0.0025554200635266667,  -0.009376178364711845,\n0.0056164585812968106,   0.011061518494247222,    -0.0063587360795928395,\n-0.022771907517983626,   -0.03422976819603633,    -0.0335329500050651,\n-0.02064977014084346,    0.017948881439977738,    0.03003022392955638,\n-0.028894308072841313,   0.032916405653281265,    0.005207958369426121,\n0.009817706587926085,    -0.021786439204289527,   -0.016349557235293813,\n-0.008118756425985347,   0.022229625418871586,    0.015483209082752516,\n-0.01469682446313406,    0.01973098703048088,     -0.018716874645238246,\n-0.034966348440666796,   0.025552221190247415,    0.02691339398915536,\n-0.0011230785706270294,  -0.004580523486630556,   -0.030065871365034722,\n0.029972254166065724,    -0.001200009819371287,   0.020201833038199724,\n0.015245167353910943,    -0.020735050817373393,   -0.02913818199716079,\n0.010724670420519642,    -0.009647856021929191,   -0.021515432491066497,\n-0.01047675957882438,    0.0031765619952684055,   -0.00801791543228448,\n-0.0009547161702762597,  -0.005107708213985445,   0.011996825935883129,\n-0.02653392266030506,    0.008767900490946674,    0.01747790510091047,\n-0.007196308960806879,   0.008009759115937383,    0.01637157687789113,\n0.0024000944700692645,   0.021212249812209934,    0.01297849390029691,\n-0.00806540069785272,    -0.020010012548288936,   0.033023969903099075,\n-0.0022254194932514143,  -0.016675308212829334,   0.02953174449188785,\n0.014250624204279472,    0.032684173182037264,    0.0349929569725585,\n0.0005350405270304297,   -0.02508915063453039,    0.01084444251200295,\n0.03370512251000862,     0.019040884614026594,    0.02595364532014257,\n-0.013293705797994096,   -0.028397017188642324,   -0.032822731645719666,\n-0.03328597485163059,    -0.005499095994741354,   0.010205973069671795,\n0.00027778268596526497,  -0.007587153262015145,   0.019466622946874557,\n0.020785661962522763,    -0.01682491886445392,    0.010524040459051285,\n0.012218815332424391,    -0.032052431221148224,   0.016028106581455526,\n-0.013323034686575648,   0.012461524875482537,    -0.0001521942174963328,\n-0.031702147802749846,   0.006556721711400949,    -0.011927731416179388,\n-0.022771470875132805,   0.018373211678816215,    -0.01558566582801377,\n0.018071563056813858,    -0.022491731379028934,   0.027200693775192415,\n-0.012954339448554286,   -0.034600128945601154,   -0.0186449572362814,\n0.033336761361756596,    0.02396836867614369,     0.02240855149314891,\n0.025114978165757394,    -0.009561937743562374,   -0.011792887777469523,\n0.021914396477213882,    -0.03561655288341595,    -0.020239149009927085,\n-0.014032357899623323,   0.0030746466117369292,   0.027580278052388454,\n-0.005815091173216031,   0.02245723746397785,     -0.0037013549746609292,\n-0.020747364557132726,   0.0208004647684368,      0.028286543660171824,\n0.024708731134076803,    -0.029859725532101866,   -0.026110299980237766,\n0.013627651414559468,    0.016114574803381528,    -0.031132953959119303,\n0.029381544457121732,    0.005136572783142009,    0.0195389253779278,\n-0.007087787726832875,   -6.009275831293197e-05,  0.012588496350137288,\n0.025545536796885527,    0.005852716282210393,    -0.034157256671217516,\n0.021363488897392296,    0.03051921448039251,     0.015904596688083455,\n-0.03148666552323908,    0.0104096371637187,      0.010161974889687833,\n-0.029642283994171275,   0.011081455539697955,    -0.02168412444420174,\n0.030081086593524476,    0.014933605612770795,    -0.00045003276785497503,\n0.03309740595634522,     -0.033475661083731546,   0.012868206532036646,\n-0.026577872260132702,   -0.031694702241084456,   -0.027060393854997263,\n-0.012214919679796288,   -0.018215763765977434,   -0.0022127311564571167,\n-0.0010515257148697324,  -0.03446663417411814,    0.0024860815028978317,\n0.009306408972290086,    0.02800428030026477,     0.002795433837706156,\n0.025717644097149866,    -0.02899112535647694,    -0.0008403186586472623,\n0.01338559249166077,     -0.018723094367300575,   -0.01599242699111735,\n0.005117907516644894,    -0.027697895043000454,   0.01886506119842902,\n-0.013095989172997376,   -0.019339663465198092,   -0.02818759414487533,\n0.029180669589517903,    -0.026705058270150815,   0.0091552528920795,\n0.02024238623103167,     0.016495155832329838,    -0.020422048990495805,\n-0.021864905396022285,   -0.0017852293261757602,  -0.013019334519722052,\n0.007841564183666645,    0.0031964491109036887,   -0.011699166235212157,\n0.024034664935163173,    -0.033820225156899045,   -0.0025344150321359644,\n-0.0007786396968456541,  0.013281866593548748,    0.012173977480017409,\n-0.020004431634247682,   0.0038703110514027622,   0.03191444776885579,\n-0.035610336397313105,   0.012834973242118098,    0.020828377928838585,\n0.02458341443130075,     -0.020407969224319873,   -0.019948186209807855,\n-0.003110949027433101,   -0.033210102737105965,   0.003217866404971641,\n-0.008348883404217316,   -0.006080728222046067,   0.0029520443106005796,\n0.011747034397150396,    -0.03475203704688725,    0.012762555083565472,\n0.029880121242443936,    0.00028297154811338495,  -0.029479216564911544,\n-0.010345163055832036,   0.002545631210926404,    0.02905470695542377,\n-0.008353082031787085,   -0.0001819733283396352,  0.022587268484432002,\n-0.0005389900593758386,  -0.02969878283180516,    -0.013955639489358263,\n0.0045781652142748985,   -0.020508675673643808,   -0.013063756545172587,\n0.02172053643769264,     -0.011361597343304282,   -0.010495473111111311,\n-0.03342495105448974,    -0.030797545563675588,   -0.001580635415497086,\n0.015483757148438582,    -0.020470615994692146,   -0.006243558903649542,\n0.03451912673917941,     -0.029192680109219302,   -0.0279995026874166,\n-0.009688453559724768,   0.02352196172009121,     0.012156021469127126,\n0.015530193351807473,    0.0020129901945141588,   -0.025878155297588433,\n-0.01707206626804448,    0.012270412672601006,    0.02018633096196396,\n-0.020953654721650474,   0.01865039326246495,     -0.005495565242771259,\n-0.02920094424052072,    -0.03538933195510009,    0.013549927842656795,\n0.0017708350553377445,   0.012477021362154728,    -0.014631514304061089,\n0.012028273051248197,    0.006538214034669563,    0.00507980337035118,\n0.0337148929789079,      -0.0032655467816642414,  0.00013626681750771624,\n-0.0054870734678176105,  -0.027148497924134738,   0.017013645867853047,\n0.0013046486542826633,   -0.02442028840322628,    0.03430323171483221,\n-0.03200380411866319,    -0.007617460752927027,   -0.012978654624287123,\n-0.0057726376991992946,  0.02127628110320975,     0.021024998791648278,\n-0.016993679816497353,   -0.013954377800612077,   0.011495090914609436,\n-0.03346793104258502,    -0.018673198698675467,   -0.03560298875773432,\n0.029837075244924127,    -0.030361279874251648,   -0.031235966028951692,\n-0.0053219312277510734,  0.0020671901560019063,   0.007629140716684976,\n-0.0074154505228676915,  -0.01721380204744737,    -0.007317693712896335,\n0.0038948308279770677,   -0.032785172881748766,   0.028074579580049757,\n-0.02901872292436814,    0.03326061341137904,     -0.022070831507727318,\n-0.03362041750646117,    0.0056975459999622415,   0.020281544409777776,\n-0.014013282290998455,   -0.021594170920205585,   -0.0051176706611267666,\n0.018347518667534042,    0.006063712992603078,    -0.0027436768111102705,\n-0.03345836571336172,    -0.029639650975455643,   -0.021749906589593318,\n-0.019837214362854697,   0.03250814692991767,     0.03245132162914563,\n0.016207479639390683,    0.02453175553325073,     -0.00708598773732666,\n-0.03552743083121397,    -0.005968771944586004,   -0.0003105367101626391,\n-0.02821484450942953,    -0.013013764356616766,   0.02593026659129489,\n-0.02472282200894873,    -0.02585955642071442,    0.020720786058191117,\n0.005198137223659717,    0.027166332378770315,    -0.004631108697102505,\n-0.01753872677136998,    -0.034416520734658444,   0.012424288675835653,\n0.018088816528727195,    0.024782851356438443,    0.0052689769255731935,\n-0.027815278364293632,   -0.028625595961953423,   -0.01780460813755741,\n0.006055975729275385,    -0.03438318127728879,    -0.02361454650685073,\n-0.00827921640515936,    0.007306933856901937,    0.017688350446839543,\n0.009846911474821092,    0.0004702930157021802,   -0.030349701460430707,\n0.008108521757302636,    0.033220526412340586,    -0.012129899709948948,\n0.029894261708199792,    0.005687363085787679,    -0.035037501142127635,\n0.006920827388340695,    0.007993074999004177,    0.021905975638939645,\n-0.020443734773481492,   0.01660287156962829,     0.02830077081687711,\n-0.017695413139817127,   0.022642802220515915,    -0.0136350311220079,\n-0.011493282073059972,   0.013839613464571885,    0.005906539106765909,\n0.028564476321064514,    0.017088080729977417,    0.0020990848617177577,\n0.016782436293019398,    -0.02583149218929424,    0.027929834923407677,\n0.030305230152124305,    0.012839378701252758,    0.028025353905155464,\n-0.013439738545927282,   -0.00774941026529636,    -0.03134958936824857,\n0.01656198244923617,     0.006563831026748964,    -0.026045518160201325,\n-0.0147453479967417,     -0.02631422194635702,    -0.013972106449419073,\n-0.035113463510475666,   0.028094063298836663,    0.02857858779877834,\n-0.01864662521481322,    0.01255108234547973,     0.005114410165402229,\n-0.03041536756057937,    -0.0062426172425950445,  -0.004090477471218973,\n-0.01712664895324038,    -0.022497616265294663,   -0.03345941354002042,\n-0.030238316070014804,   -0.016275826629626445,   0.011024249903419459,\n0.011812251955943367,    -0.012305625304565065,   -0.021389710550816097,\n0.004326148031434202,    0.018543769742449614,    0.023942846308979103,\n0.03038298333588691,     0.02946800542581829,     0.010871464960298527,\n-0.012182124309620013,   -0.03289263135415754,    0.00563420827730635,\n0.004019496799599144,    -0.022126830760442986,   -0.016174330671766227,\n-0.016120402500406184,   0.004409826917253739,    -0.019433434463859072,\n0.014203260680194523,    0.007702833067834781,    0.03568344154545645,\n0.035497419411873225,    -0.03477040425811228,    0.03153664675052005,\n-0.0318717828226441,     0.01997882126325549,     -0.031108365978872864,\n-0.008236822769838725,   0.011397040540200187,    0.028370859401969435,\n0.027399370902669987,    0.0035956973297978723,   0.03126307942771806,\n-0.003069772878406421,   0.032244194974708464,    0.02294760207946874,\n-0.005585849288165808,   -0.02769777048772578,    0.0017238543765725992,\n0.027586961682212068,    0.027157536815956583,    -0.030153227606822708,\n0.004922602554213443,    0.0153137344988867,      0.001320336595345647,\n0.028322024847159906,    -0.003881856127205985,   -0.017109534460453903,\n0.010214150190323734,    0.030475039035812966,    0.0012325310254944447,\n0.004710845340481432,    -0.008435062062223005,   0.006440349177316118,\n0.01486171420545192,     -0.014652991029969713,   -0.016592440728264837,\n-0.01391417748676832,    0.021497593212407778,    -0.00810140228891909,\n-0.011934805258481847,   -0.0026294340390486787,  0.031922967792775904,\n0.001506764025969514,    -0.007574195883568533,   0.03252526027967822,\n-0.02495728550123967,    -0.015087481319437053,   0.020533833519483385,\n-0.03547758347348318,    -0.02489901826571319,    -0.013156429194872428,\n0.03204652551249396,     0.015500706481832445,    -0.01948589776426354,\n0.010747822724425505,    0.030097685898075058,    -0.027169523989832276,\n-0.03331679876864734,    -0.027080444007537428,   0.008444813199444534,\n-0.02096545834722508,    0.010818203588602034,    0.02529722516597145,\n0.02746565226949892,     -0.013568638193223815,   -0.02809246537325444,\n0.027275778477989128,    -0.015478535749885248,   -0.02107529709509662,\n0.02273066866613157,     -0.009421670870664494,   0.03183393683158204,\n-0.018722854860642693,   -0.028805378494927193,   -0.012996479522583402,\n0.0008198595069909672,   -0.000685293453030438,   0.03047150924073673,\n0.00876082264755823,     0.01238804256017058,     -0.024410895854733494,\n0.02936395924211913,     0.021994223725764064,    0.014208753510565084,\n0.034214712724775234,    0.00378729096886823,     0.001248905720189153,\n0.011627897150697349,    -0.031267420413715455,   0.01249396310504795,\n0.00510385697968562,     -0.033951857132625635,   0.0356122878653497,\n0.03061500009750538,     0.0008046317880693876,   -0.021964193032625992,\n0.03142849676216403,     -0.004107389734233706,   -0.029354737248499796,\n0.03190607266037696,     -0.029451778868435925,   -0.032469822055915365,\n-0.02855573093833229,    -0.004582520986349877,   0.028503315321275122,\n0.01767235267471063,     0.01620479733745578,     -0.01406570039079763,\n-0.022444801332085047,   0.0025097482976148317,   -0.016350074478011265,\n0.022891864175161907,    -0.026628318931746615,   0.035062215434378464,\n0.031424613924213786,    -0.008314444526921887,   0.029671183641169083,\n0.019173146332064975,    -0.000837705230202617,   -0.014247575686772618,\n0.02143977019323059,     0.005685469248266619,    -0.006418747990294579,\n0.01271180365030713,     -0.0281564997276207,     0.008437866507597924,\n-0.03246286633340525,    0.015327233428122993,    -0.01622515973988906,\n0.021419536826503705,    0.012667638028347217,    0.021538984949394616,\n-0.01980799781176572,    0.022115859971118146,    -0.034803711203184075,\n0.03529953060226699,     0.025042995648461193,    0.011431271230678322,\n-0.03294643114435522,    -0.015395492186797484,   -0.02335329268840953,\n0.006609436431864219,    0.024179513371168724,    0.03242605905373297,\n-0.01527869707353808,    -0.008340688080498902,   0.009058439176144857,\n0.024319240281730617,    -0.0035349564779553672,  -0.03174899764208047,\n0.015816500793518443,    -0.030325622190151103,   -0.029337948121764688,\n0.026779100072891103,    -0.030775953849605558,   0.005399119592191034,\n-0.01294851127231208,    -0.02147613190778714,    -0.0005218064116935737,\n0.02938529413957389,     -0.003166236311699282,   0.022018486295373608,\n-0.0017538098813598849,  0.0041853702170509465,   -0.009743623220335895,\n-0.02250070262810895,    0.034127089735306766,    -0.008477796116506271,\n-0.009855245915233513,   -0.01782831004562616,    0.011627451917767111,\n-0.007344285468286931,   0.030109242203493106,    -0.03102963420343161,\n0.028219690014719155,    -0.014726291400809697,   0.006146047328103825,\n-0.0032048726136335343,  -0.02244190804515256,    0.0035605351509197204,\n-0.027472390880238107,   -0.008866292881830693,   -0.02608343764664971,\n-0.008933907895694766,   0.017368132519146293,    -0.02610014611549104,\n-0.009602633399010503,   -0.015624674776516015,   0.020852993179116066,\n-0.004388700153811994,   -0.022809277787496585,   0.008776020590513562,\n0.00028992172053116897,  0.01554121299167686,     0.03190449703407497,\n0.026295609922620256,    0.020574011329306165,    -0.0035577912232042097,\n-0.001269847777937134,   0.012548748109253976,    -0.02796071781517694,\n-0.00892055346222278,    0.0043361504738012825,   0.022613252603308532,\n0.01580402527542826,     -0.023905775232703857,   -0.022546940992579523,\n0.02250588694969428,     0.0014960782219561159,   -0.031047283529741856,\n-0.01758439786294925,    0.014817672133511277,    0.030910416996040888,\n-0.023759098559356553,   -0.005974218286617086,   -0.01792675305462751,\n-0.012577784614611936,   -0.018715112281999093,   0.027487731531571705,\n0.00047890078362992716,  0.016255810702939077,    -0.007453664645174583,\n-0.01083678130482082,    0.03444174016092331,     0.004871457784569211,\n-0.01986566476205225,    -0.028284671008768126,   0.00509693205309831,\n0.0051147037016476505,   -0.012234265753810385,   -0.020769714224083902,\n-0.02169537317347151,    -0.0032226280135635678,  -0.00432741496054407,\n-0.006629316073549226,   0.019727616065426612,    0.0032917680246195963,\n0.02762085007659396,     -0.019341633431204437,   -0.024029906183341092,\n0.029215012122005134,    0.002022461940932656,    0.013714605506857784,\n-0.03235176639241418,    0.009296068205258618,    -0.006658257519161159,\n0.0289820527544001,      0.007286825967788195,    0.012459795970391874,\n-0.026137566087447682,   0.0010989561755821203,   0.008287523631889187,\n0.0059585606342053244,   0.031068173016185537,    0.0052718564040852445,\n0.0024491533892570605,   -0.028801250322959302,   0.010312472148907006,\n0.025779606269449425,    -0.033508147976824665,   0.0004898619295928275,\n-0.023339006836687562,   0.009630510200877651,    -0.030688742281958024,\n-0.020970393401951653,   -2.4941438297589243e-05, 0.013176325356257583,\n0.03467031297679734,     0.029436757192434396,    0.00048205997345292435,\n0.02045676460780352,     0.03169275772901481,     -0.02229369408983451,\n-0.03312309759173174,    -0.031166760858385552,   0.007049974002708435,\n-0.031426664734070554,   -0.017265583582757822,   -0.029310542307731724,\n-0.027873598065958682,   0.03416044719602934,     -0.007660868551032183,\n0.01720550367098642,     -0.015804051568760174,   -0.005377372627012497,\n-0.007146230042094232,   -0.018673645617778907,   0.0037447067302137805,\n0.008544549850772592,    -0.01872811643576751,    0.005974082961750948,\n0.004593641781336826,    -0.012925620664501836,   0.02939432811416994,\n0.03248446892058883,     -0.031193965287859803,   -0.0136308044198313,\n0.02744158104986484,     0.0034113717571076347,   0.005739151661587465,\n0.030863339829253947,    -0.024461324579180946,   -0.02486934851749781,\n-0.0011463095263139012,  -0.0182957040313348,     -0.0009725910009133793,\n-0.035263875066644884,   -0.0036076677014288006,  0.006156678319595186,\n0.0260209670393886,      -0.013100710402212104,   0.00429703442835735,\n-0.0069612122108347885,  -0.025547007592465885,   0.03504869027977919,\n0.006865770910449296,    -0.001772667740874756,   -0.018532086180552212,\n0.011228498919123198,    0.032808747764286245,    0.007457982181588868,\n-0.022664179785057144,   -0.032503459195165285,   0.026947744236578933,\n0.0226754874052587,      0.030324272263856776,    0.008403470704940803,\n-0.01628482481449029,    -0.002766726449374804,   -0.024985522521154466,\n0.02115179930651932,     0.007034171801392327,    -0.0003296886309246088,\n-0.010820650715932403,   -0.00909817568512928,    0.029931968511476104,\n0.027618231084756195,    -0.02034370049793365,    -0.026714888019839907,\n0.0020325737331932103,   0.02526570652981998,     0.020936074821091125,\n0.021045398284830635,    0.00509266492450828,     -0.01567466892313274,\n-0.011747682855887747,   0.032233154244283024,    0.01300796376255407,\n0.01876781657804596,     -0.025472172145970067,   0.030859746353336014,\n0.006343307984311462,    0.03121171935978487,     0.01031844116095878,\n0.0026778926952176364,   -0.0010655983028953684,  0.02936164060928017,\n-0.029458325224271116,   0.035089458020463656,    0.021465704774477186,\n-0.013491430725582787,   -0.0016971176697698049,  -0.000529679171609906,\n0.0070710268663870535,   -0.01848632280781951,    -0.03311829888793789,\n-0.009486723114797709,   -0.020401364078819904,   -0.019418492676751362,\n0.011389694467969684,    0.023144332229123432,    0.021309400313687228,\n0.011140067417790753,    -0.034525190464810576,   -0.021237591225848774,\n-0.0024024484208602288,  -0.014980487733251058,   -0.004867419365142923,\n-0.018688605816641803,   0.021988610076642347,    -0.009531350681098545,\n0.013983014206376035,    0.009138060748262962,    -0.027038344795206216,\n0.017932035178051673,    -0.011574264159308439,   0.005697961413658541,\n-0.030777943375261612,   -0.030179851261338764,   -0.02202490702274876,\n-0.02682772279598817,    -0.032718544828351646,   -0.014344016991092967,\n0.00786050261971638,     0.03028944677039943,     0.03530924084031603,\n-0.01735999430274477,    -0.0017818119241671457,  0.006616775061671845,\n-0.022348613021441102,   -0.03100874698126253,    -0.004830906236264865,\n0.026047494743850444,    0.032270946306430376,    0.008743611941222569,\n-0.017207827385244654,   -0.03264572037746389,    -0.028315980703246833,\n0.024089829743874785,    -0.03448968231822226,    -0.01776948173771783,\n-0.016652526213582968,   -0.009757573177131678,   -0.024715756756131704,\n-0.007054272888246044,   0.0312231071235088,      -0.03173817456530799,\n0.00810656890093621,     0.007083780125953667,    0.01324322166387889,\n0.011721298442018722,    -0.0011459919499777046,  -0.02469891088164104,\n0.014695422924952961,    -0.01677904581426225,    0.032610770812991144,\n-0.027931468913729225,   -0.013484623765857469,   0.01791239147795046,\n0.0013899510253682316,   -0.011301712864337581,   -0.01870099931109313,\n0.016205029221418244,    0.00014520545450811114,  0.02560900392185147,\n0.03536525774934814,     -0.024259070897293993,   0.015404184821910987,\n0.010145780167630854,    0.011979095285667008,    0.017390435833115652,\n-0.02240646383178658,    0.0034527083338048354,   -0.0005108225559874922,\n0.005119939883673557,    -0.017463555643016,      -0.0017866043278248317,\n-0.015898948496444194,   -0.01823072987987668,    -0.005876816493658589,\n0.007572198647528544,    0.0003762453080812324,   0.035477874936607846,\n0.032229879810107546,    -0.02153291177453535,    0.009093868221598926,\n-0.013739296921493472,   -0.021579188281766755,   0.025932432578045304,\n-0.027373614923821937,   0.015685042024669114,    -0.012852980531697636,\n0.004148141153754995,    -0.01184585589435643,    0.00224854685008686,\n0.02344272730136967,     -0.013340938282566977,   0.027298258084575016,\n-0.012101840537154778,   0.019015472443633455,    0.02486455775281554,\n0.0018847826440510243,   0.009383272304991475,    0.0015390286365693665,\n-0.021162714197315895,   0.017025946470648572,    -0.010481800172880196,\n0.02088605005719818,     -0.016103938150523148,   0.004291391625753506,\n0.01130005162439307,     -0.02110301460492422,    -0.02956466366358366,\n-0.005726728395030506,   -0.024839738889925467,   0.02236713539432764,\n0.02093368797276404,     0.006897232837315501,    0.024087795497207787,\n-0.02226179926384091,    0.020171766186836002,    -0.024808407491384233,\n-0.012851411841126408,   -0.011262326694729667,   -0.033076194586916983,\n0.0174351096696786,      -0.004748321604133671,   0.017579693254928575,\n-0.03443222085871855,    0.029181582565086295,    0.022736363949318716,\n-0.024868949031485277,   0.0300029111880867,      0.0015263257885856918,\n-0.013092424834671339,   0.033626290477991955,    -0.024041887171540408,\n0.016234855030695328,    0.02555488843038562,     -0.022091942342194533,\n-0.0026169826343191427,  0.00979745235251301,     0.0012692561297612853,\n0.008491844604582506,    0.020830993998641592,    -0.024234282469843008,\n-0.031564897786644674,   0.03007055967405476,     0.007153166532460342,\n0.03567193338752244,     -0.0311483846040398,     -0.012689099840250889,\n0.024984481417375238,    0.015329047747236684,    0.027011889675735923,\n-0.007068202779797908,   0.02179475300161379,     0.023252811437610328,\n-0.0012550549228853886,  -0.015157090709366843,   -0.02849914627395071,\n0.03377173498503973,     0.03303452867580527,     0.004269089025685552,\n-0.007926185285264817,   -0.016910676139971634,   -0.020668032081130206,\n0.029147627354679937,    0.019218649506072796,    -0.017299548125817545,\n-0.021312267829915067,   -0.02467686661322538,    0.020376630503154643,\n-0.02634346210080541,    -0.01494737108479342,    -0.006932449399151671,\n-0.005431819244816005,   0.006169739327106055,    0.03136684290065733,\n0.004896052642270681,    -0.03459940626463328,    -0.017787304356753256,\n-0.01670138164919173,    -0.01675313360957338,    0.024215824793179287,\n-0.00509433783433999,    -0.020938591369027783,   0.007557491245920295,\n0.025389979399976635,    -0.03004427945724218,    -0.028501769759650193,\n0.029831720230836745,    0.03456810394068093,     0.0014646325107750624,\n-0.004671496698425434,   -0.027590799721505566,   -0.021041666360224656,\n-0.004693443972758631,   0.02222706933697456,     -0.01869382504994633,\n-0.016677414036311122,   -0.029605567681693454,   0.02952531627200019,\n-0.0025963646486748615,  0.015333578853121381,    -0.0016894261983736525,\n0.010353797866362098,    0.03471960750098785,     -0.006301571745689999,\n0.0021003104649480898,   0.003983396691320211,    0.02325388217892861,\n0.006356471818028128,    -0.03167704852071191,    -0.0027289857258823713,\n0.01587071474361493,     0.03524945525647441,     -0.03309513510043044,\n0.005087495702726612,    -0.02589429241475476,    0.0002608134149796326,\n0.02659993482270716,     -0.0035553660959591732,  -0.022941865327149036,\n0.02330342236180806,     0.01102030695974432,     -0.008680352215371587,\n0.01597316043258263,     -0.01135877558430816,    -0.03453234740234046,\n-0.009640235307145337,   -0.0328682357525904,     0.032063152890865455,\n-0.01810252745911638,    -0.02456637640078896,    -0.02326662703263667,\n0.009811777231433203,    0.027779999087584484,    0.031111851133261058,\n-0.02457956807229668,    -0.025079104512386395,   0.0008705429570708094,\n-0.016707897013182673,   0.033981585356654215,    0.004599572889586226,\n0.0038221063819109625,   0.03447416721486949,     0.03108634640383238,\n-0.013289966090068248,   0.029713391967341952,    -0.016302379147767117,\n-0.03142302775702244,    -0.01847732012343329,    -0.017775504707822885,\n0.031901549316097656,    -0.01333864545440651,    0.005505205691845261,\n0.008504420161004785,    0.02670658431427521,     -0.0046995189782445225,\n-0.02653657136096945,    0.0006683637511911461,   0.03509848994325431,\n-0.020104743398935334,   0.01624108498467293,     -0.021193019366603956,\n-0.005603486126138479,   0.030593092299668785,    0.02972189695462971,\n0.004548385797961946,    0.023088962065735106,    -0.03404961445279515,\n0.002539275900636882,    0.02845937453240943,     -0.01623460207172217,\n0.030391482623881003,    -0.012613220602268469,   0.014636377222241996,\n-0.01883704317909958,    -0.021681528221480197,   -0.020657752015393025,\n-0.014719409306106117,   -0.030123908413040204,   0.025293591502674056,\n-0.002404985208730178,   -0.0021934318595508346,  0.03243637479522761,\n-0.030161231698466795,   -0.004021950821453917,   0.02786118026050218,\n-0.026902262536160577,   -0.028832391897509888,   0.006082705716668404,\n0.0009965022032866675,   -0.02088383810446942,    -0.024699674601172956,\n0.007831954257737559,    0.02096876940382665,     0.031423186874627376,\n-0.004004234118002666,   0.020711618520672277,    0.03073508219371137,\n-0.00904321103853536,    -0.011683301551536334,   0.031002239110538073,\n-0.015350019128871278,   -0.009392872608714076,   0.00964222889949331,\n0.01283464610285952,     0.029098033569484726,    0.014672404563503716,\n-0.017010401114112852,   -0.015218338027216758,   -0.005956288937301022,\n0.0302166388243356,      -0.01042808581671882,    -0.013640988843340703,\n0.01812326471579173,     0.01723203723041142,     0.02102832291837239,\n-0.007932628869006237,   -0.020803412064883318,   -0.008042013013723592,\n-0.02778744887271498,    0.02280807843186572,     -0.004241505547599278,\n-0.028458509205951228,   0.019282437253705677,    0.011514810098049697,\n-0.025988311769377458,   0.015455033875287539,    0.01161238908950542,\n-0.004358934288872082,   0.009679347040119031,    -0.00938793716305804,\n-0.009530917872622493,   -0.005594671410490224,   0.0018143282455890886,\n0.007252824557171149,    0.014367068308437678,    -0.01619155883468626,\n0.006624236866363661,    -0.022412902561187963,   -0.013139986285388823,\n-0.027487764207885193,   0.03193060826700111,     -0.0043968404920052195,\n0.018757406920120113,    0.008118517566546126,    0.017282062351713312,\n-0.021021758776649094,   -0.026150855226761794,   0.02572438237482286,\n0.03258995341237097,     0.03144673249259986,     -0.0021170155096723675,\n0.02485270001866594,     -0.027425032671710693,   0.00551016050958256,\n-5.6580243865646444e-05, 0.02067999479320988,     0.008115118293627106,\n0.02831363567322543,     0.028560167907267744,    -0.013687765186265861,\n-0.024443762601040395,   -0.01805940361270681,    -0.008535636925477643,\n-0.03302072635582662,    -0.016681004987012558,   0.012474238039430286,\n0.020402913802878342,    -6.585410000005596e-06,  0.026959736889616646,\n0.028463792469294858,    -0.007068380858327719,   0.008663006658261545,\n-0.014937940679936874,   0.021347300141150636,    -0.009198267784914622,\n0.023343746851004335,    0.02962323511327507,     0.02443472732433683,\n-0.012502409492770102,   -0.012650191543467835,   0.0021896686774880037,\n-0.026084698683239576,   -0.025760932503928222,   -0.030126648318371006,\n0.028358157904559343,    0.014871328312751213,    0.013213858294640397,\n0.02363474091010899,     0.015924163626138885,    0.03449648483649598,\n0.01059025853077219,     -0.02425024251240535,    -0.034950258349094876,\n0.006626506274641183,    -0.01618298345830763,    0.032184085932237254,\n-0.029717170084934883,   0.03571104405655347,     0.03062613888472672,\n0.028491065232913924,    0.021560736297416117,    -0.01259591917109181,\n-0.033981946768285864,   0.007253981366863583,    0.02912143438827978,\n-0.035405068043795306,   -0.024647816537108718,   -0.006489000176703317,\n0.025876825067700948,    0.013458442510081436,    -0.009809030239766552,\n-0.004486948662343099,   0.0053503615119076765,   -0.024575848742832068,\n0.017482483296750576,    -0.0035688664128214792,  0.03136545533530125,\n-0.021857206744535205,   0.01870272787633807,     -0.03034296509810468,\n0.006036606958983694,    -0.002201502749720379,   0.02327380125292897,\n-0.010867749592105536,   -0.032348563304829284,   -0.03052492945536607,\n-0.014618688358333487,   -0.022985910523736018,   0.007219232602754627,\n-0.030898276387140163,   0.017678822084117876,    -0.006232785642418708,\n0.03216094047742008,     0.0051462469844338965,   0.03304085541721981,\n0.03410584149472303,     -0.014103806575525362,   -0.03331899494233604,\n-0.013940465052722433,   -0.008245705847701512,   0.030374310808965875,\n0.026808239130109338,    -0.0005809394809643265,  -0.008829100020379748,\n0.026214670505744875,    0.011638416673842846,    -0.0280401290974913,\n0.025882054001937365,    0.019738272380089135,    0.016753089102758825,\n-0.003441566256341463,   -0.019850664112208545,   -0.0184097829577798,\n-0.031217410011111182,   -0.0064036632004868446,  -0.0017960502300840722,\n0.02767003494412175,     0.014736294911414823,    -0.025455217930231065,\n0.012893149307655187,    -0.026625511031206105,   -0.015401464551024906,\n-0.012307698538808602,   0.014142704220795894,    0.019341659468363415,\n0.009814732175421448,    0.013175067050434457,    0.03166559737523338,\n-0.026180189546362753,   0.001438323400737034,    -0.004559810371155476,\n0.023968712459727908,    -0.004619876452920676,   -0.006037635946543115,\n-0.003527955463947312,   -0.03503392746413854,    0.01418575565663028,\n0.03507200760638828,     -0.0008050587228831911,  -0.005917770092310084,\n0.010057395288984068,    0.020048007594952708,    -0.02249648103831874,\n-0.012196230977147273,   -0.014585379020799831,   0.03465429690628048,\n-0.011004053544490744,   0.014995869998294251,    -0.009761228041597498,\n0.02834884276128654,     0.03107106045818516,     -0.010254165136952043,\n0.011232711859643441,    0.0354779110305787,      0.03494693852876348,\n-0.030503150438786174,   -0.0336241246407451,     -0.021892675773489172,\n-0.009929717109065617,   -0.004904240073147119,   0.0015237822540956703,\n0.011727923355421426,    -0.00021112139641973494, -0.02267859086341865,\n0.0037960715210971453,   -0.0030255845807676896,  -0.009512097907598762,\n0.029494522250834605,    -0.0014473965328834254,  -0.02844022480928041,\n-0.015417256377131736,   -0.02835108193199449,    -0.024905465101104075,\n-0.002023814967294273,   -0.032569722387098335,   0.025791192238180754,\n-0.034823436520145704,   0.021838456024993298,    -0.020029934537742846,\n0.0044853871177211735,   -0.020614759098197107,   -0.0037715780158389307,\n0.029562852143247005,    0.023943159618749155,    -0.023680991728072753,\n0.005398227146794657,    -0.02992063846924734,    -0.028313596588869384,\n0.005431723204871175,    -0.0008783305267281755,  0.02263479861772756,\n-0.02562775992639176,    0.021919570561101966,    0.008463875903302545,\n0.004506509166708742,    -0.02735103820460899,    -0.013533410919371403,\n0.029830454863744058,    -0.0002378538638446091,  -0.01376893676265371,\n0.03147610670260175,     -0.02444289947736303,    0.01699977371505291,\n-0.035301646990724404,   -0.008148222898937692,   0.010037427069199467,\n-0.022414618225785853,   -0.007438328167407185,   -0.022169175748079535,\n-0.008580303588966378,   -0.013667490454078573,   -0.0007757746776905057,\n0.021461460745719092,    0.03252318802379999,     0.021626787707006004,\n-0.00014708172824232487, -0.002849341166656852,   0.004994847920852538,\n-0.014859573585101742,   -0.020434200963044515,   -0.01063262289329288,\n0.001242769262069803,    0.007768078140509742,    -0.01909272626094075,\n0.005922855496759828,    -0.024944376309333778,   -4.248617003505777e-05,\n0.014479056115673555,    -0.007325859518089164,   0.009593032665644905,\n0.016080739742866168,    -0.014104797207503008,   -0.01662897521129887,\n0.021379253011224255,    0.017018090592505364,    -0.01766283626424706,\n-0.010893379165889996,   -0.014066977077628558,   -0.012466155103898193,\n-0.017906860328211205,   -0.011144089388519438,   -0.02143847429712687,\n0.012812912981539564,    0.018850528365367703,    -0.019196461331083277,\n-0.0022515603005666684,  -0.024289203443147254,   0.03016799917206487,\n-0.030383966006530275,   0.030319567260478256,    -0.022274858717602413,\n-0.027594782656442773,   0.02098166358066389,     0.017984071125600867,\n0.000944260523380837,    -0.009880932282075696,   -0.013082627554631044,\n0.019071154883920288,    0.030324411272507845,    -0.0006871718785799254,\n-0.005737834507415923,   -0.0036998811903320833,  0.028946794341690386,\n0.025908407771396014,    -1.3704212189832468e-05, 0.015444406759545622,\n-0.018871392507372305,   0.021519338824533163,    -0.028049130048800962,\n-0.03003638651822778,    -0.009680410308956349,   0.0010677342335255588,\n0.02682580637653707,     0.010045022589542318,    0.020646283511563588,\n-0.0219278251760463,     0.022715278240458325,    0.03497363480041096,\n-0.0013629521841921977,  0.035341731033179204,    0.015432688695733974,\n0.029466714901043165,    -0.011405508096101555,   0.032379914381234776,\n-0.0008024863953492127,  -0.033698556379581586,   -0.023816927683011753,\n0.010838939622234454,    0.004767635211757683,    -0.00517006611299105,\n0.016070382226645252,    -0.026909242542868795,   0.014989620151915111,\n-0.031045211473473267,   0.027029293710324663,    -0.005735544814517315,\n-0.01215379818487583,    0.0069312549407214985,   -0.02126521447958086,\n0.00415526422862791,     0.03311278880104975,     0.012613071710900068,\n-0.01186095044526923,    0.03203922759376323,     0.0087659196336285,\n0.03527648528039968,     0.030669037254054017,    0.006123467846635168,\n0.002472338832621276,    -0.026661249730304464,   0.02742412408444737,\n0.025387668106503183,    -0.004244875303251833,   -0.030411739876357962,\n-0.014179669549159953,   0.01233805301355104,     0.025996629630146206,\n0.029205033659907485,    0.013858560572499568,    -0.0018530572283604091,\n-0.02849937718305572,    0.014199036025155216,    0.025345584104353145,\n-0.028045354783744314,   -0.01658382938228634,    -0.01506665179479309,\n0.0204509108670275,      -0.033146554882488924,   -0.018046523164180244,\n0.02192740973871299,     -0.02779193416169718,    0.0011609044095618548,\n0.021625577788968318,    0.015294308361811582,    0.02256760159304026,\n-0.02555813756908755,    0.011165679068433718,    0.011706868229728653,\n-0.019985729491887306,   -0.008990112271179454,   -0.029064238574314692,\n-0.027327303571032767,   -0.03511369320692457,    0.027365225906307553,\n-0.034041807363851755,   -0.0062980886094303745,  0.018402584288670823,\n-0.012243161671973573,   0.009736185004397593,    -0.03373904715661163,\n0.005391176496760654,    -0.0008895036678785598,  -0.008675808846119753,\n0.03462441562040398,     -0.0050996168324976944,  0.011146159711607729,\n-0.03251203663972563,    0.032343913684263086,    0.010015444228201187,\n-0.027911049440210656,   -0.02912336277655094,    0.032250398183109395,\n-0.020245599637051803,   -0.003863970306017412,   0.0025997810883112466,\n-0.0013545318118936792,  0.010776426618284747,    -0.00513650194952039,\n-0.01407839244601633,    0.03173400337995507,     -0.01678877670573924,\n-0.02197720856119996,    -0.03339792601872225,    -0.02285536894083243,\n-0.03325377764486861,    -0.0021056560242987883,  -0.0264193647271699,\n0.010167620528365102,    0.03174333133518462,     -0.007002503776141969,\n0.035489275800566246,    -0.00017475295648611278, -0.018890501538050233,\n0.03485114882077022,     -0.027908153113676185,   0.03552976262489118,\n-0.0038102911900020032,  -0.011397736567071992,   -0.009125796510411914,\n0.017221632465960413,    -0.023463399734667115,   0.005991632215206718,\n-0.020245008411893313,   -0.03425555110113801,    -0.026427175152716576,\n0.0008716641316393206,   -0.008921507103856823,   0.03524117547066269,\n-0.01002308907486904,    0.008750336552915563,    0.02332034454526584,\n0.01708589217446089,     -0.029891304462755165,   0.025726842285097844,\n0.003356256479161268,    0.02135671800084222,     -0.02514297553381397,\n0.007585959338468229,    -0.00014469389916126657, 0.0237288898623572,\n-0.0011293999958567455,  0.030138972586534505,    -0.028322313273045994,\n0.0019166737931791133,   0.020986518338278304,    0.0040861064531602575,\n0.02046474411959064,     0.006680255593709256,    0.000652894398452191,\n-0.031681158963304694,   0.021919258232024848,    0.025324730930141107,\n0.004239810565864247,    -0.0005464435876518713,  0.02783074511988959,\n-0.02235819579109994,    0.015270056904592027,    -0.03441772189468854,\n0.026485679571527088,    -0.03448691118319846,    -0.027751712738983778,\n0.0296250338648373,      0.020086376142071934,    0.0314011426167952,\n0.015593542066395825,    -0.03360497947580491,    0.025642885384518088,\n-0.012972915522281992,   -0.025928441866804777,   0.0011782875845707014,\n-0.029184902311012124,   0.02000746459354892,     0.0025156954791901403,\n0.03445268399315187,     0.03449098787086372,     0.015906481147765366,\n-0.014041763615818563,   -0.008699650294741543,   -0.017155196884208666,\n0.022302421751120554,    -0.032164860689932,      0.015058242686501109,\n-0.004271623912424709,   -0.00639041902833529,    -0.006738209256864127,\n0.021908474185499047,    0.0002009916032389266,   0.007572102487483198,\n-0.012109285445471938,   -0.0307487652120778,     -0.017477752385904956,\n-0.002723393263109497,   0.019566967361548487,    0.015036042137211079,\n0.008348992151329433,    0.02591274486635598,     0.02289772825756599,\n-0.0028750869217806863,  -0.004536363849516397,   -0.03544292715498188,\n0.018261486948924557,    0.007102317007922345,    0.0056091675112994645,\n-0.027146977092449,      -0.007051881672701162,   -0.0062646525133503595,\n-0.0038420807399815377,  0.029724039437197248,    0.007988908113691573,\n-0.010935565864670356,   0.010288325869733462,    0.03569528687962301,\n0.012233502924624709,    -0.027182392236110606,   -0.0009849155203428312,\n-0.01181477752761319,    -0.004846051851168899,   0.005316885210349929,\n0.024347106751876534,    -0.012378077008730408,   0.006882013004032025,\n-0.028034848302180036,   0.03155906465279661,     0.003316051333906262,\n0.005257593497265083,    -0.014534962749834766,   -0.01891741654210089,\n-0.03492027580242379,    0.03352922101710979,     -0.0208984383939812,\n0.017048006593284242,    -0.00850582640457551,    0.008483025834133715,\n0.013918154310963087,    0.018959706333651974,    -0.02435964672647881,\n0.00620802314745488,     -0.023489593590851343,   -0.025875790404086614,\n0.021258121793172737,    -0.004125173191385231,   0.00260128170498018,\n0.006574264546130716,    -0.01547237349224978,    0.020916339962163178,\n-0.013872766823845757,   -0.028753601409768077,   -0.030460572890730196,\n0.02147760356136218,     -0.01320407666655294,    0.01667350780965252,\n0.02309597677174193,     0.03432742627344137,     0.006389760932114344,\n0.0034294491024246766,   -0.020501952762834928,   -0.026780149888700398,\n0.01712370824306816,     -0.019925946981902722,   0.004627721627570334,\n-0.01833495868889657,    0.026652409323207955,    0.02984704723357365,\n-0.014310432684067658,   0.031164552262100707,    -0.028050162052745534,\n0.027508592969551278,    0.02280019399374944,     0.027672490377604442,\n0.03192701995010777,     0.015276941443245278,    0.0349604788216523,\n0.0018171617695103717,   0.005580924534530272,    0.0323794549816383,\n-0.014295277974147163,   -0.020627870681733367,   0.004674512296666679,\n-0.028215342578925794,   0.014083632505227268,    0.02204008719479772,\n-0.028153936347545983,   0.03490156771292358,     -0.010226611193626103,\n-0.02134723492607278,    0.028536361522834418,    -0.011716063043358687,\n0.00024180584702008075,  0.014259061897122591,    0.0032943352867356485,\n-0.016831534648783897,   -0.03353662343457469,    -0.028107641498333325,\n-0.010992457593446144,   0.011003519678363025,    -0.033550444363337456,\n0.009193856448124538,    0.030984848069038878,    0.021297694464099872,\n0.029632721920670384,    -0.005919715758894836,   -0.00293644966578683,\n-0.013938427257932698,   -0.02198536155053696,    -0.0006839567485744974,\n-0.0009283752494989266,  -0.015676384147870093,   0.005422674319775968,\n0.0010203139991773785,   -0.014287750021578394,   -0.004626714545902791,\n0.022506694258856357,    0.02823438244607333,     -0.015172702426311531,\n-0.023046360734502738,   -0.03064949912735665,    -0.009355843821852053,\n-0.013500997816125031,   -0.020544812769535615,   -0.01803421938665598,\n0.007099160310659436,    0.003326322716075858,    -0.003572291331485225,\n0.015421491344537724,    -0.03151616102438997,    0.02972186959861337,\n-0.0024985816745928496,  0.019048013865388083,    0.014252099797933737,\n0.03423115573462862,     0.010964171750732879,    0.021542852956812138,\n-0.03186585151235923,    0.00032369124888451513,  -0.0022715447072153006,\n-0.011421951439189042,   0.019418379606790506,    0.01537784843892976,\n-0.034801275559435636,   -0.02156637818496948,    0.028104324003353807,\n0.02867328741389683,     -0.014266144763272204,   -0.00576273803059339,\n0.03133385277875956,     0.023915586334714776,    -0.005744951246539651,\n-0.005557025748835669,   0.008610043948561907,    0.0026496707185654856,\n-0.03147563536090586,    -0.029589282469454657,   0.011526389068590437,\n0.03296690477700167,     0.006400572779204599,    -0.012437676666008582,\n-0.022508179174243404,   -0.006212243073602963,   0.03206442280541906,\n-0.023973526934398977,   0.02281771570812678,     -0.008991434912687175,\n-0.020347944219203218,   0.007401952380156411,    0.01934015885612714,\n-0.005727606911414749,   0.002910651750009874,    0.02003794688149913,\n0.021918640541038717,    0.023168119877738425,    -0.01633676500340429,\n0.034737251509125114,    0.018557662363857308,    0.019825949444649906,\n0.00012788630161992512,  -0.03342339844622672,    -0.026971285277077005,\n-0.008625639985945795,   -0.02392516301123171,    0.024079326008283098,\n0.004666143729781461,    -0.026808095756992563,   0.019779730994378224,\n0.023336620359699117,    -0.016449738977897817,   -0.02777481720269691,\n-0.021549744547705696,   0.020970102087115312,    -0.01951598174564848,\n-0.0273751124670211,     -0.017117095681037656,   0.0032384619563072575,\n0.026069992301427685,    0.02242639209025416,     -0.012141642736762492,\n0.002728278806490387,    -0.03038151986653098,    0.02339963828699596,\n-0.021030543916713676,   -0.03172126755853478,    0.015017572404581736,\n0.0006482887255800056,   -0.013024812675187711,   -0.016943250007914957,\n0.012870166967442476,    -0.026108818099281037,   0.0030471487855511,\n0.003995989263557035,    0.030194515567860472,    0.02695977586742976,\n-0.008516873562328806,   -0.0005197482547058381,  -0.014434699147909607,\n0.01818400258218136,     0.021519925948543944,    0.030640439210929127,\n0.003913952208345347,    0.02461585532058997,     -0.03217574521882591,\n0.00899748047326584,     0.006500926326730517,    0.029925931075134214,\n-0.03216541898866107,    0.0011528692134311147,   -0.003940466392819403,\n0.009874305529678495,    -0.033394830223161344,   -0.0012376743246907643,\n0.02286935207289813,     0.02191431949611245,     0.030031160046149703,\n-0.01915185612256318,    0.031624844639562284,    -0.006690924529723902,\n0.008390753682873802,    0.006632056336158051,    0.014371440141814256,\n-0.00516889311617928,    0.022525690249025475,    0.029450201832078225,\n0.001433670381995798,    -0.002213683061286688,   -0.012103312020915111,\n-0.02975358877418162,    -0.009497522616502971,   0.001967817492573528,\n0.03448387971526424,     -0.02580292785148597,    0.026547780577032852,\n-0.003308385732446152,   0.022377663426475052,    -0.02389980039028043,\n0.009861359139460147,    0.00826408977562457,     -0.034563497153571314,\n0.03382370041030036,     0.015429382240883312,    0.02794550133318161,\n-0.034677261003342036,   -0.010534195017430739,   -0.0010570120427803031,\n0.029648295375946286,    -0.029294329371234898,   -0.021828482821575082,\n0.017975371324551688,    0.02195496441806952,     0.02558452673117483,\n-0.030062499547205267,   0.010775317473137773,    0.003195101390911733,\n-0.013174956645996399,   -0.017927554754848998,   -0.03390663250456787,\n0.020712061697480917,    0.0007930502256701903,   -0.032874725453239946,\n0.0312253824486504,      -0.010603142570967013,   -0.015717763160541416,\n-0.026021532300336048,   0.022392832728127088,    -0.009518966083754885,\n-0.027125607013055004,   -0.00950167413539031,    -0.03057850940424956,\n0.022835012977917804,    0.018031049094547176,    0.012159101629702136,\n-0.03336688426463267,    0.01931561937605489,     -0.004004709202095415,\n0.0172226473722938,      -0.021059465447969786,   0.022584061030764498,\n-0.003988283972725437,   -0.025232484905970756,   -0.019569489521786332,\n0.024862393126995508,    0.02993873311068758,     0.03380350643293696,\n0.022326955645845175,    -0.0350441323986529,     -0.030670439351127732,\n0.03236005548773805,     -0.018025349586797357,   -0.030915061242599618,\n0.01451588590278015,     0.026420973245818363,    0.003271268200520919,\n0.02433310394629711,     -0.013302815992510746,   -0.008292281219181035,\n-0.02324811574661908,    -0.00731756635429103,    0.0302701940488042,\n-0.010061874170827687,   0.025621626608178016,    0.013879562529452667,\n-0.004194275027664086,   -0.03344225447558642,    -0.019683331008106954,\n0.008028520633419951,    -0.03399079772852564,    0.013479361796822511,\n0.02165438871470329,     0.015810029659309555,    0.014031341401196995,\n-0.009030439343961019,   0.017826718097268893,    0.014568641907511375,\n0.021169094980209403,    -0.026161660170598018,   0.011922323602812217,\n-0.016867502506931243,   0.020647055183664387,    0.012012209961590057,\n0.018107336589542205,    -0.003638014861858266,   0.034266100230906496,\n-0.03130862768193291,    -0.008266226049643777,   0.028898545010322383,\n-0.032381458711300715,   0.004720463207036333,    -0.01259308057015946,\n0.006056948787824923,    0.010448644802865177,    -0.023838022337635566,\n-0.009035204950501197,   0.007121693983034566,    0.011284979024292667,\n0.00044755053382673966,  0.020699693958688228,    0.0178260536224656,\n-0.024446722522377663,   0.020092618873695265,    -0.014583606033248089,\n-0.021881214234361988,   -0.03253755260918611,    0.0025228700287047235,\n0.007530454633437639,    0.0010439789626726567,   0.0016613680315636925,\n-0.006637580258856,      -0.014445764771327545,   -0.007640316153339766,\n0.011104272847029258,    -0.01295622604752396,    -0.01568171779002418,\n0.02336276443030769,     0.014446429455133174,    0.006918468688344202,\n0.021142845822380716,    -0.008310959624569443,   0.03175882800965125,\n-0.03181147757128452,    -0.025844827373291673,   -0.017227385700446962,\n-0.029888917446792385,   0.009920343416541457,    0.0027866395593340743,\n-0.026323681434114104,   -0.029787088038890797,   -0.017051683469214984,\n0.0014295509319369418,   -0.0349904001803853,     -0.029595938692882462,\n0.011948462805795455,    -0.028558421359471984,   -0.0033519458405579156,\n-0.017986222825415683,   -0.013305964240915624,   0.019934827737675527,\n-0.031532581987688386,   0.01898941848897533,     0.029372190626746817,\n0.00891400447399608,     -0.02655715115837858,    0.03196655667988944,\n-0.02825328632906745,    0.010222554894533362,    -0.0006089398655570771,\n-0.02132894114698045,    0.0070891777458978135,   0.016279173356231136,\n0.0002224228416419941,   0.02009810369990025,     -0.028543160000726098,\n-0.017716288326430185,   -0.02305709981534705,    0.01629202820177097,\n-0.014822845333197466,   0.027922655263466052,    0.03508199352460281,\n0.0006837270315031484,   0.020167888865923012,    -0.026404041298597896,\n0.03103167182629223,     -0.02223317563043376,    0.02000249248676064,\n0.011676697038474435,    0.01252147090148879,     0.005320906140428905,\n-0.0030041380462000012,  0.02858259763668435,     0.02191204081300999,\n0.02682944696556353,     -0.022283077928595525,   -7.960945762828876e-05,\n-0.017569741868071687,   0.022871653926746994,    -0.00859641711948657,\n-0.027541023344170894,   -0.01884157920025267,    -0.017965003090144805,\n0.008906683888678124,    -0.028228590370675866,   0.022833563152057843,\n0.0033295596153319574,   -0.00413772316632963,    0.0032583342534624232,\n0.0055177811071673135,   0.0206444599991379,      0.032274889990125545,\n0.01516882527446467,     0.005366029537091738,    0.019346654562336474,\n-0.02520854748129492,    -0.017538790027689457,   0.00043472308550282897,\n0.02598221793651373,     -0.02109132109562981,    0.00738495033739202,\n-0.028174341778160993,   -0.016986696375481492,   0.018473621959681916,\n0.006000271513506397,    -0.012942239514064233,   0.006881496353742609,\n0.0035899174385566335,   0.011550343964772065,    0.01170641143216817,\n-0.015387235157970698,   -0.021706348019418516,   -0.020934573106259076,\n0.015935694528157334,    0.006442061127755868,    0.022260907934179442,\n0.022358530416474474,    0.007007292468790972,    0.008933873914632946,\n-0.02448687665353481,    0.0035643119567602844,   -0.016876357223558052,\n-0.017126659915417442,   0.0326741789776262,      0.008725790990423745,\n0.008597369411554208,    0.029781621372014105,    -0.015981219142579297,\n-0.00030742139457256326, 0.0336991297570397,      -0.0012690541299294556,\n0.012670713126616153,    0.01059007316343575,     -0.019515608625304864,\n0.028618090745245604,    0.017154218779083366,    0.02779105386895416,\n-0.03089408701595085,    0.03110071162587303,     0.011413369866384826,\n0.02017287421502643,     -0.013825743887786035,   0.004982790930029425,\n0.022409889586665954,    0.009019149426458237,    0.002539741272541997,\n-0.03140577545298419,    -0.0009232315896464988,  0.01826958925622075,\n-0.008629287379125446,   -0.030961431045394703,   -0.012596435983691479,\n-0.01994453272671666,    0.0011756804144027544,   0.0274107697244484,\n-0.002647843606937983,   -0.01733661290444488,    -0.027573391392729168,\n-0.0036378302076572806,  0.02695860119542697,     0.023971783138836956,\n-0.019843014336149812,   -0.026410967001298136,   0.007162589096201837,\n0.003958417180235168,    -0.0071526101711064894,  0.004617323822402375,\n-0.025079825256646458,   -0.010679106428250738,   0.014471028985833634,\n-0.0072447556726058515,  -0.006894807571316568,   -0.03308571121255162,\n0.03508952088133971,     -0.0045620348030882074,  0.017359128214682645,\n-0.018975573599469844,   -0.03145171578242786,    0.006894897205191699,\n-0.026504384543573612,   -0.004542491188670632,   0.011713584164483409,\n0.029841196210242733,    -0.004606758218889157,   0.004015194558285917,\n0.01634620023851811,     0.0012020669035293164,   -0.014548700697410393,\n-0.03537759000292534,    0.006313946171374675,    0.011145448315512903,\n-0.0024571564078553604,  0.030055409118961412,    -0.011672828800090818,\n0.010925947605722217,    0.014855605819383031,    -0.008373780333459273,\n-0.020019649599628698,   0.029695648215350912,    0.001580506343552065,\n-0.008616309006320162,   -0.025086813115239595,   0.03498404452262456,\n0.016437417931231702,    0.0010958427091006884,   -0.028099744296871555,\n-0.031962412955650825,   0.028967112729337337,    0.017084678268967264,\n0.027693379430248955,    -0.03269426582261794,    -0.01289667578736986,\n0.02984790956109282,     0.021127557373123995,    0.03528365542566993,\n-0.016876095484789314,   -0.012784476563132013,   -0.0033996025431345307,\n-0.001485899967795301,   0.017296279184007713,    0.018234977132103716,\n0.013399439933257975,    -0.02618730160518601,    0.027166876923707926,\n0.02377756217407985,     0.010361480950352473,    -0.016488010832922163,\n0.035283497501136026,    -0.03034700530713054,    0.011884812085004462,\n-0.0008121930742205986,  0.019239399734792113,    0.029693449212543264,\n0.014210307613962199,    0.007048350503490492,    -0.019993897079750647,\n0.00772229159708573,     0.02696999302823689,     0.024230291989477133,\n0.030057348212768047,    0.03148148867087687,     -0.016009540076391993,\n0.013996023774039934,    0.010923039344960377,    -0.02104695034283855,\n-0.018803348374093632,   0.03475820891693491,     0.013962488124659705,\n0.003973287122925273,    0.03167933725618795,     -0.03106328268092802,\n-0.019169491433345533,   -0.02951455740648746,    -0.009572564378387556,\n0.018015480661619444,    -0.025640503624525524,   -0.03450056893952643,\n-0.02288251009057069,    -0.006590433472625842,   0.020242305327150125,\n-0.019574504414505152,   -0.015079414824178548,   -0.015020747544877889,\n0.010726287201606859,    -0.029157352792455418,   0.028864578855388845,\n0.019368167681644677,    0.020523332559824192,    -0.011509886531378457,\n0.03499098078209526,     0.006809210665826626,    -0.026949858037770523,\n0.03313687712918444,     0.022434565727828298,    -0.021048141790100377,\n-0.010712964122504989,   0.01609007690879718,     0.0056843358989293125,\n0.029042585936912016,    0.005220102296479313,    -0.02598948966795269,\n-0.0020947570360694673,  -0.028426109029399474,   -0.00911608210071458,\n0.022899664888545175,    0.025657197282025437,    -0.03535149609757652,\n-0.006240166925659476,   -0.005450643667502689,   -0.0208088561098542,\n0.005114376539869284,    0.011018154031049228,    -0.018801054065698333,\n0.02971896602256262,     -0.020562243868995935,   0.022664022401142292,\n0.017761554110173095,    0.016050650013219415,    -0.006308790079607146,\n0.0036051666505527553,   -0.011805017612713527,   0.014058373242687938,\n0.028831302812482567,    -0.019688145433441946,   -0.030215473549102746,\n0.004669734112304702,    -0.028798518180417017,   0.03393829532631371,\n-0.012416378685654919,   -0.018331171824146324,   -0.012213567856639407,\n-0.028188010645977042,   0.0055441825776317046,   0.029339000430196778,\n-0.02859768812822037,    0.021910478953217943,    -0.010907077219717738,\n0.028093340307799395,    0.02126732510813935,     -0.019620968551593645,\n-8.224065311091782e-05,  -0.01888268070171065,    0.03433195327126531,\n-0.012139835979513092,   0.024400765224373216,    -0.016630062843080762,\n-0.0297905586706018,     -0.01278460195666193,    -0.015166296983911325,\n-0.016502967584098256,   0.011267461057173196,    -0.03291184937436134,\n-0.011211428904202752,   -0.0242050249218145,     0.03570747468881299,\n-0.032868405990116034,   0.02524786423998565,     -0.02969229181557432,\n0.01640725699930021,     0.016005538046036803,    -0.033370867975151715,\n0.029909125801727346,    -0.010212457294313018,   -0.011888117798095732,\n-0.027355857670668907,   0.010303884877827414,    -0.00886007694822079,\n0.004095158777049801,    0.02613935442380436,     0.029998697416742943,\n-0.009040284113886925,   0.017361431364995832,    0.009706923998605994,\n0.013424527363210528,    -0.018289171620044817,   -0.0001674529590455934,\n0.02109418955050833,     0.006116702466683245,    0.02517635386416765,\n-0.0008783262631977182,  -0.00748579919501306,    -0.023422427452881,\n-0.013739104414359262,   0.025382011253568385,    0.025988790269036752,\n-0.007324561880747609,   0.006920930799423939,    0.016504880204686847,\n0.023221196896902375,    0.016106542419088012,    -0.031777024682889676,\n-0.00904964957755709,    -0.009260830351957548,   0.02518559763761861,\n0.015840032264286166,    -0.03544056504091459,    -0.0035196561769856778,\n0.023356982464721232,    -0.028808745473414974,   -0.01721681566913781,\n0.011023814571834989,    -0.006751532160067669,   0.011352097338868739,\n0.0020265909856441483,   -0.027658197759257302,   0.021626199317284725,\n0.013503090922438954,    -0.03563415894312416,    -0.006324728273086785,\n-0.008934387244244129,   -0.013205567818055264,   -0.03400794587184206,\n-0.022965232753243713,   -0.027294713803232545,   0.006401681122470946,\n-0.03126796628930336,    -0.01189594005219165,    -0.0023374818039889928,\n-0.01980005568475353,    -0.022309216607378016,   -0.019758423217976225,\n0.021260792288931168,    -0.03036853246301217,    -0.007028778943964761,\n0.001991776628389587,    -0.016945627508538078,   0.024498625564177666,\n-0.007035911608494451,   0.027474379556158095,    0.016814345149418906,\n-0.029654612114722635,   -0.027666587099159968,   -0.015200862516061675,\n-0.018421031816205,      0.02236597376407144,     0.029877278153716276,\n-0.027547430755655695,   -0.004895273877130957,   -0.012065356356263173,\n0.004503134288807592,    0.03209612551623554,     -0.008870381679997397,\n0.014060260159000915,    0.0054284758520139155,   0.03314680880555016,\n0.00950278751308737,     0.0031024619768652323,   0.019427281338217344,\n-0.015606027519319459,   -0.007271495219376192,   0.016724210095819193,\n0.004260012521144821,    -0.03127455392318386,    -0.0343983597543846,\n0.003238115717039683,    0.015869082806705768,    0.012546862582417082,\n-0.015377401541159963,   -0.02136555526216711,    -0.024092829526365964,\n0.009639692502543087,    -0.029133016084442336,   -0.015529347751205751,\n-0.016610767987235597,   0.014427828599812445,    0.0038696512487710806,\n0.01660433644757395,     0.01848229687952937,     0.018066358273600116,\n0.006234434897195836,    0.03461062828075486,     0.005128587863205358,\n0.019507546406867304,    0.029579809841695788,    -0.008655526290678672,\n0.00658690242886222,     -0.032232037939943926,   0.029511121746440626,\n-0.011726200374618181,   -0.024468761485302557,   -0.009590797031503371,\n-0.017038167519382474,   -0.019172711575720394,   -0.025017337710639576,\n0.005387440043088292,    -0.003231728739416374,   -0.02829705401664687,\n-0.01382699941818435,    -0.012632859347748247,   -0.02413076521770344,\n0.010670792027807288,    -0.0009002231391047769,  0.02858705973799531,\n0.001697796705045337,    0.02525305044290069,     -0.02485714672136219,\n0.0026512895533362907,   -0.026427950360140076,   0.01465225525624935,\n-0.008533818302237832,   -0.013022080688410787,   -0.0245165027283805,\n-0.01227594672249637,    -0.000348769970296346,   0.004099301122454633,\n-0.034258980850116715,   0.018131965294110344,    0.01364135092269241,\n-0.03532631450297937,    -0.003778604097561541,   0.011516063703950339,\n-0.0026820251226360604,  0.011553380256022252,    -0.03386860982573166,\n0.01058086965446342,     0.0181502282448651,      -0.022274381564775854,\n-0.008253828146446191,   -0.01256443323101907,    -0.01673468259264196,\n0.026076613077309563,    -0.028275591779138565,   -0.030288829090213763,\n-0.018794643233699417,   0.0007503946082470672,   -0.006176297564791179,\n-0.0158214963478895,     -0.02372601229016376,    -0.027635319632806608,\n0.025920157609548314,    -0.014075084750650295,   -0.02968009312308093,\n0.018209668946691116,    0.030220980760055437,    -0.00019923614413333964,\n0.002332663281137237,    -0.03149587248633276,    0.010737734732219522,\n0.015381745679954928,    -0.0054856510415250805,  0.017353222786724434,\n0.029098529440350136,    0.01392392496633398,     0.03238092264683507,\n0.03241907578291466,     0.021660546443170392,    0.01643782886816547,\n0.017254052429296386,    0.033842383786319145,    -0.013147937674744734,\n-0.01655151319684826,    0.025077064426694176,    0.004096152259872722,\n0.03548934245418945,     -0.0357088522816228,     -0.0017085258220701424,\n-0.023214230038321404,   0.003661676924366887,    0.0005021534637082674,\n0.0015702098876726228,   -0.013717715401183106,   0.007854356656472716,\n0.0292082759535362,      0.024743809068054123,    -0.0191261373716031,\n-0.021904608794887783,   -0.029965474817477265,   -0.011846211238535496,\n-0.016285137736898023,   -0.01961151523431237,    -0.005874153452319484,\n-0.016009801148022085,   0.02089125030438026,     0.032336429699445474,\n0.006804316162578126,    0.027702532350224397,    -0.007975217844196152,\n0.0332309677589962,      0.023085742009392656,    -0.0003377049157107633,\n-0.009177341368693406,   0.01580473119488367,     0.01254309336507875,\n0.01850455590418151,     0.018960767643259362,    0.02671251523658138,\n0.016895143366171917,    0.01669215839930326,     0.00386752206883491,\n-0.0029946592063726835,  0.004540047554072644,    0.017669130608734134,\n-0.004814840209822495,   0.026067601477169307,    -0.034609350398889585,\n-0.012060112114325432,   0.0289099873873495,      0.020994828232652894,\n-4.82397131323285e-05,   0.031141319925984345,    0.029995177617460764,\n-0.012977978995485853,   0.018380716283227048,    -0.002479543739066535,\n0.007528411647273692,    -0.022678352216031657,   0.021638561793133487,\n-0.006361918143952483,   0.020525948504264233,    -0.023194904520179915,\n-0.020171710441240283,   0.013211151695526191,    -0.008332235521221254,\n0.0018588265391798553,   0.022967606470250035,    -0.0193380466199695,\n-0.009371685607858163,   0.020844106484282008,    -0.02769423311844499,\n-0.008746181117423835,   -0.019779891322112726,   0.03417887640077726,\n-0.035637393949053645,   0.02317198398445317,     0.0009078543408875896,\n-0.02401245079171277,    -0.017148396976907787,   -0.019062221714552494,\n0.004357189713654325,    0.024064227384859874,    -0.024183656351122327,\n0.012596540312721916,    0.019815764929034186,    0.018474848979108473,\n0.004159318573960719,    0.010542247537086642,    -0.006800107458938609,\n0.008369822236423106,    -0.019421554218228148,   0.010549527173524063,\n0.0352060310900296,      -0.024262459436779737,   0.008204700027430107,\n-0.01959328423681726,    0.03373693818056354,     -0.008785050868465696,\n-0.001059070866253358,   -0.03358530658085625,    -0.03117845099161537,\n-0.029138386525805214,   -0.008242848564260297,   0.027405597082729327,\n0.00592768905445405,     0.014747754125797945,    -0.02569985282687397,\n-0.008095035001195412,   0.03467172657567353,     -0.009974312575684825,\n0.023548305602591413,    -0.01257243412370333,    -0.0023658317277425334,\n-0.018110989105469145,   0.03415119299369473,     0.007611062264749993,\n0.014084524935275788,    -0.026117758503892505,   0.03165702206084894,\n0.008164784960006506,    0.02687923762217799,     -0.026654019513967786,\n0.014916150106189636,    -0.015426827070361518,   -0.0318179345902834,\n-0.022542640763037896,   0.029545560411304295,    0.031946431980792805,\n0.01400281162955779,     -0.007532367058258088,   0.02022638400157466,\n0.028555312901223102,    -0.01270847420523417,    0.019444587165713772,\n0.035105387245155946,    0.031964014202595835,    -0.024984942870306653,\n0.02004073945386396,     -0.01267976260310405,    -0.017706365933993336,\n0.03502439111118876,     -0.02069227044431653,    0.03395105113625247,\n-0.027510876235696605,   -0.009185658200971954,   0.0030758282162610673,\n-0.005284686177851716,   -0.03255457185705041,    -0.007868239763774916,\n0.01901075021595586,     -0.009819348483689046,   -0.00246887267627875,\n0.003822121967890882,    0.014243270300414801,    -0.030844397860344708,\n-0.018603745496023196,   -0.02858456051039117,    0.017827121233720423,\n0.024223183799744075,    0.02958380171166868,     0.005774182102584996,\n-0.030989114906632156,   -0.009683544428855597,   0.01450980892162455,\n-0.02520284260521477,    -0.010348310598736896,   0.03425853530520441,\n-0.022751245251206743,   -0.004626413535357825,   0.033097885808979634,\n0.008489187881569016,    -0.01532926525864653,    0.03240261579906075,\n-0.034927799451686996,   0.03237341897764108,     0.002569864096403394,\n-0.035067488103971214,   -0.006191502639234411,   -0.007699636387942077,\n0.012616325467205345,    -0.031459110215308124,   -0.026583425308945544,\n0.023941382154867574,    0.035349894102715745,    0.024934540541400135,\n0.017365413430360535,    -0.0073237298465535184,  -0.01884906806022109,\n0.025888339530066265,    -0.02586349007372892,    0.006671562489791861,\n0.01180886407764802,     -0.007596099483638493,   -0.007857963687762695,\n-0.0066306094238434456,  0.02907771930948198,     -0.0031749907915395127,\n-0.0021941157295575615,  -0.006298204909914729,   -0.010211036057166532,\n0.021036425215825334,    -0.0012648447928644677,  -0.01024258043995386,\n0.003679901935655784,    0.004940430066032405,    -0.009710955316907528,\n-0.014011395436060756,   0.0020175149861744257,   -0.007863201186518327,\n0.007736204454558915,    -0.00840236382689751,    -0.005894517247422079,\n0.002969280616333725,    0.03339797835307135,     0.008057259699122426,\n0.012217597074407687,    0.004215411221285016,    -0.0034127571177465866,\n-0.011396005174377182,   -0.018943148608800118,   -0.00880451355521829,\n0.014346589303396558,    -0.010163089370525742,   0.03209539661737143,\n0.0018986963221916476,   0.033664921106398994,    -0.02835039226593614,\n0.013672139749834982,    -0.025553045613427295,   0.0037835745143832778,\n0.03427779532278087,     -0.021587685811559024,   -0.0207804625317783,\n-0.014662886906383137,   -0.014863495989970213,   0.017023004908708457,\n0.020512473086215146,    0.000769812189540047,    -0.021707658189176107,\n0.024675626481952213,    -0.012140212578326488,   -0.02308293594439584,\n0.022241585870445866,    0.020010647701812448,    0.020728026617718314,\n0.014873225630196241,    -0.00873367262495995,    0.034409803860781706,\n0.017120102567822638,    0.02592914086215139,     0.011775834234877427,\n0.013811721167669813,    0.009739744792905076,    0.019243240018789232,\n-0.021461658653293816,   -0.02240908164040738,    0.034167681854801436,\n0.0031595394117266418,   -0.0149366979788493,     0.01816950834552564,\n0.016762462092057236,    0.031238081036394725,    0.00012590014475912157,\n0.031933180793624005,    -0.00827633918899944,    0.028608662484110772,\n-0.03208312353668297,    -0.019742026538806093,   -0.009378895909312963,\n0.020030561422336644,    -0.011645116048662934,   -0.008403441655444717,\n0.003831487872676929,    -0.0004320475878311398,  -0.021300934389108708,\n-0.013821916860438257,   0.016326094651031835,    0.01903840324947126,\n0.025299622269287336,    -0.025308824282035472,   0.0011764330485960958,\n0.0028848794998661154,   -0.02411090581213062,    -0.02243877944521757,\n-0.03414745237139865,    -0.02155078048915768,    0.03384051458017001,\n0.0037106835438302744,   -0.03234224898124179,    -0.028205363963073667,\n-0.011219336446709305,   0.032803378818435674,    -0.033607865636404555,\n-0.022247184237043097,   0.002540925192404635,    0.03297255871996782,\n-0.022509329507661394,   0.009633617922547093,    -0.020977282670747378,\n-0.03253546463412973,    -0.02843890759571533,    -0.02919566167959243,\n0.016583863815384046,    -0.012318090192188491,   0.01619226181495419,\n-0.023353424753380075,   -0.001719812152963272,   0.012809475038622713,\n0.019393071026163847,    -0.012340112183801797,   0.0021264816660956838,\n-0.017176241445452607,   0.0160427715024899,      -0.0023781055838925647,\n0.022039974188588447,    -0.031024726956119398,   0.0002525632731980904,\n0.026237178905009317,    0.031827803741998985,    0.02651533217772482,\n0.024267930031561198,    -0.034012093188725424,   -0.026655195054634706,\n-0.028510319771894197,   0.0279488128637679,      0.026005649585732427,\n-0.02823726778104044,    0.035641432152155775,    -0.0018377155071691337,\n0.028093708676419527,    -0.0344003250973244,     0.014153010202091181,\n-0.02860058000821593,    -0.01049676174011449,    0.030046689191395484,\n-0.006880132949560025,   0.005369076015913108,    0.003185497339487594,\n-0.0069650276715141025,  -0.02111169889903938,    -0.0036787219451630626,\n0.018882556351204616,    0.0318150222422899,      0.013370968170326862,\n-0.02331995965603706,    -0.02797626067055423,    0.03500060423743495,\n0.014316823226482065,    -0.0168733412037235,     0.00902081045428161,\n0.018371050040711132,    0.012679863468909829,    -0.026444613803124517,\n0.013504335562548462,    0.012431358235891928,    0.016697424398023866,\n0.004761023822741477,    -0.024984815174032813,   0.02720456402191033,\n-0.008004584935383996,   0.03445230038536031,     -0.010378577635645965,\n-0.025664461342219873,   -0.004084295542182322,   0.032334660827495476,\n-0.009004841242868536,   -0.0208666606600206,     -0.015213967308998249,\n0.00929398021744478,     0.016639408350842298,    0.02748677322509466,\n0.0314973796515802,      0.006761646390577818,    -0.021658757004380483,\n0.0022459753964716206,   0.0323717543217664,      0.01735569220284353,\n-0.01438413242415365,    0.027230196404297007,    0.025197578912818295,\n-0.017119945342426755,   -0.012128364523949236,   -0.03427385748024401,\n-0.02226904055478267,    0.035419966994665,       -0.034839777569931465,\n-0.026779773053979286,   0.010120614913864645,    -0.011577050618307208,\n-0.01426688321997694,    0.028312087286289887,    -0.025058222251712493,\n-0.025630409153113754,   -0.024348088126118914,   0.00686491496805665,\n-0.01667611515921076,    -0.0082841669645528,     -0.023060607368199877,\n-0.029531824817722596,   -0.012113431606485876,   -0.019605242900145592,\n0.0054166828253569155,   -0.001540500566169873,   -0.02933636616670933,\n-0.0008397599378800944,  0.022681727736198712,    0.022955768749864425,\n-0.007593615318558613,   0.013406110439721484,    -0.027465378845986755,\n-0.006633223315280973,   0.03171985328085483,     -0.025575527915703063,\n0.018026994955233713,    -0.026735244179112945,   -0.028890756976522134,\n-0.0038908677431792366,  -0.03476748069525926,    0.01113863728423748,\n0.01398095067962446,     0.0073930219545219845,   0.03273249738090921,\n0.017296652633704435,    0.031125846954082024,    0.009757450032428212,\n0.011878511837325323,    0.02836231665986172,     -0.007657215839963268,\n-0.024305235082270876,   -0.031246184628498253,   -0.03058306180810542,\n-0.01582301713985447,    0.025644384508659444,    -0.006647895574759397,\n-0.02611976247037462,    0.004832433904392387,    -0.0019940783124389977,\n0.03481147109207269,     -0.02570253250071808,    -0.019067046168206876,\n-0.013816311241470392,   0.020647957581824843,    0.026443620140589937,\n0.02767294493407564,     0.020736094251395488,    -0.01923683772599587,\n-0.0162828723068979,     -0.02219316845325936,    0.029561114862679077,\n0.0025639459404228626,   0.01769647548092478,     0.030336298298927762,\n0.007977894046026786,    -0.032679001765458605,   0.02868059503257111,\n0.01962532025511297,     0.021085194570018933,    -0.018198508871741657,\n-0.014311757186336727,   -0.01150893813809819,    0.03182566328677788,\n-0.03245963440767321,    0.0053470323935720055,   -0.022253711229893083,\n0.030533708238030546,    0.01773208224571007,     0.012964334477842319,\n-0.013560326642914589,   -0.018729257396879598,   0.001561080278326299,\n-0.016764206880795367,   0.03265216114522625,     0.01582103285129646,\n-0.033113422060733415,   0.00460451480122685,     -0.01792980618614245,\n0.010996347567374649,    0.021088631681789805,    0.0010541189852478522,\n0.025110327529047245,    0.003799087517516191,    0.024522354194852665,\n-0.019092454498316598,   -0.025866421516315786,   0.009954099710734006,\n0.03190509604700322,     -0.010609137219707838,   0.023496851364543506,\n0.0001311115089985826,   -0.023002601621626394,   -0.014629378197637075,\n0.023881385181843334,    -0.021062467795631937,   -0.03395315572130641,\n0.018847743922699143,    0.02933393604639751,     0.028220907248250056,\n-0.029357582764688615,   0.02284725097537072,     -0.005418302704365131,\n-0.009188549631591103,   0.035116835059473044,    -0.008866799722236736,\n0.030991737282439733,    0.026368006654771535,    0.028190463866048936,\n0.0020528652195764036,   0.023753708984754388,    -0.010574867316992849,\n-0.027094025623746996,   -0.02672031196581661,    -0.01969134038768816,\n0.029549074760471836,    -0.026346147421147752,   -0.0214920311427846,\n0.02930285811405579,     0.012647918225710564,    -0.032911513777290825,\n0.034111749344030357,    0.014069791863885073,    0.013654234896432074,\n0.035404709652128254,    0.026782303582587486,    0.024388409248498808,\n0.011285935562896554,    0.008652020808117254,    0.003065722201970179,\n-0.02130156826387293,    -0.034187843224799175,   0.03468079807674971,\n0.011515266584247674,    -0.008572605540934022,   -0.023588737283635402,\n-0.028168241692625978,   -0.031523907183968185,   0.02892957113542889,\n-0.024935653226577877,   0.012470734322787383,    -0.028250829975496113,\n0.007954327622317212,    -0.03554262736292277,    -0.03186773045196432,\n0.029298933055452923,    0.009868152323599666,    0.0061839511427118155,\n-0.03277333822239407,    -0.021891410957050612,   0.010926905122309776,\n-0.019195219960747235,   0.023212071258144396,    -0.0020832847356460466,\n-0.022062223866845355,   0.009436906636425673,    -0.023030505948470226,\n-0.02336960133106224,    -0.005621765226733013,   -0.017513003088419965,\n0.030543098841249672,    -0.02118182963158297,    -0.032907437341702074,\n0.01642963566839379,     0.03223983899929735,     0.00027330717382391596,\n0.007999449634325535,    0.005956238176385955,    0.012056277814041932,\n0.029737473726542094,    0.004902151222683623,    -4.072150709077166e-05,\n0.017593277308699886,    0.013544717446540542,    0.020270069450757575,\n0.016252568770536973,    -0.011913724115048008,   0.02229510526614964,\n0.00019307763192863027,  -0.029642533595575282,   -0.03041834490366925,\n0.021472038033952645,    -0.02521151819074475,    0.02703612876274681,\n0.0030257221709885014,   -0.007943309796440296,   -0.03224194153630595,\n0.018861669414767974,    0.015897587709064312,    0.024665229015284798,\n0.005329360722133271,    -0.03526261835464513,    0.02112638639645116,\n0.033181358202078355,    0.010011029648120744,    0.009102396162046507,\n-0.009464645844787027,   -0.021111285940875024,   -0.012764360333284755,\n0.014454661797303574,    -0.01218588602583448,    -0.02463792234825324,\n-0.02396819231017892,    -0.017436299733965654,   -0.001109398277791702,\n0.029416610285435803,    0.016542419480602602,    0.02244425688070065,\n0.028748265080139866,    0.004300733179222043,    0.02727576230716031,\n-0.0020176741696483914,  -0.009580672943247643,   -0.004376009214796465,\n-0.00963157291556319,    -0.02366298838286406,    0.02587813559669007,\n0.0027676061732003683,   -0.006041178301961515,   0.014442454699412948,\n-0.03148688917301563,    -0.0133882223660342,     -0.01398621869525653,\n-0.006050029860562086,   -0.033459611565746866,   0.025481830136627113,\n-0.008948943125297482,   -0.0331175550467145,     0.017803412227749116,\n0.009484509553775389,    0.00023732911692469255,  -0.007160006388838307,\n-0.005117264502755847,   0.008986487085261095,    -0.027809799673583522,\n-0.020802723176015447,   -0.02021195243506937,    0.017504774829612244,\n0.0001880353050965582,   -0.03000832070717136,    0.03419499846489343,\n0.03266708474268889,     0.005964595821472153,    -0.002070101963805661,\n-0.02719442009142602,    -0.02313394498140706,    -0.0034099738116310186,\n-0.0019909354052378542,  0.011961157713460726,    0.0034052179418038965,\n0.017682606225143505,    -0.0074320139743588465,  -0.009148454261019297,\n0.01267880409112982,     -0.0013183468774021767,  -0.01889507280998629,\n0.023951573630769052,    0.010607662734775416,    0.010459312350084182,\n0.021358884127215132,    -0.022615433207693436,   -0.0009243687651557332,\n0.0005291105633146641,   -0.001571727770791144,   0.01953188620221575,\n-0.015125499048752893,   0.03537146546481785,     0.009222855011638251,\n-0.01922003447831827,    0.013584223702473346,    0.02423060197180961,\n-0.02528922823015356,    0.004880085846839331,    -0.012269813788711337,\n-0.01097159740912049,    -0.03331429845512804,    0.007076687100804382,\n0.0028817306394430726,   -0.009511896123724002,   -0.00683354942165886,\n0.001999063655341407,    -0.01128984591287463,    -0.004289668867018449,\n0.03462603948600043,     0.012025723337762782,    -0.02728323897850162,\n0.004900825272590915,    -0.0067130268217345,     -0.016122122896771663,\n-0.016489884321356976,   -0.034472185478876045,   -0.013029925665130653,\n0.014417235563940945,    -0.004533197834950883,   0.008044505026524984,\n-0.03394890674051921,    -0.009353621855625128,   -0.021188161231085887,\n-0.026286016074709435,   -0.0018664044180455863,  -0.01636006881479607,\n-0.027771795423460182,   -0.017832704593052164,   0.013543906232246517,\n0.03477046845874281,     -0.00124098626734781,    -0.035544190632694615,\n-0.03335392782554502,    -0.01658311408675628,    0.010366406287749421,\n0.02380106384011578,     0.015155765259482486,    -0.024144886494179316,\n0.02240935323102434,     9.411340860954187e-05,   0.0018896628475711702,\n0.007055141174040063,    -0.012530887277290403,   0.018234013888064306,\n0.01913603545865238,     0.03288274197470144,     -0.020558596024589686,\n0.01793828118012404,     -0.019324168391025336,   0.032387666798917046,\n0.01714966795740431,     0.02057164294391053,     0.026146675151918382,\n0.03201074628860395,     0.016115280786046498,    0.0277120513398442,\n0.0186068115739119,      -0.023791073209242262,   0.034427961279492415,\n0.0037180672130724163,   -0.02651233743849678,    0.02020191571943084,\n-0.02646971285937485,    -0.020697989694010932,   0.02728583581068452,\n0.007502797514084296,    0.01528699410569947,     -0.024110588051330473,\n-0.027364711045704964,   0.023058463030916455,    -0.003897750444672562,\n-0.003283755402115808,   0.005560069431679312,    0.0034454440210008,\n0.02718005039017147,     -0.008241380465771322,   0.002178880393242813,\n0.016451144669255704,    -0.0261046414164074,     0.02973524715164565,\n-0.013627994163967538,   0.004192740261730055,    0.032467302549868744,\n-0.03200366639304101,    0.02492709178283419,     0.0338615156297381,\n0.011703483523732666,    0.03099836119873022,     -0.007412347056306492,\n-0.02589778361091281,    -0.0025489906956634445,  0.006475496802030856,\n-0.022765680286622847,   0.02790360403782963,     -0.02024597479599086,\n0.015522350085557626,    0.006662900099458563,    -0.02563712046780912,\n-0.028962344147830697,   -0.017623502038396948,   -0.00298923268476963,\n0.025781309874652047,    0.009855562777794797,    0.016270267406551582,\n0.033704874987574525,    -0.027872581114895545,   0.012717722432880281,\n0.014464222740679615,    0.0318210993270413,      0.03221912156688836,\n0.02135299399109263,     -0.020554482997048682,   -0.014675779852121889,\n0.007154210251550124,    0.03287767771031901,     -0.03445341031501248,\n0.008906544224110595,    0.03068367599450101,     -0.022780151920066723,\n0.03375315881253277,     0.015170736884746619,    0.035468470084596714,\n-0.007450530817749529,   -0.019748449894167335,   -0.003180170511915159,\n-0.03483078228873643,    -0.0037720289285327335,  -0.008921652160096168,\n-0.0039227616027120915,  0.02095251301323109,     0.008041322708278198,\n0.03351938435830294,     0.005175620776044141,    -0.0016859999954056404,\n-0.005248865739281365,   0.023546214039679672,    0.01453242246670008,\n0.004285724809678307,    0.03132163460135965,     0.026146838126899274,\n-0.02177293858429763,    -0.023719908972481565,   -0.026363656630791717,\n-0.0034799203079964786,  -0.01453502695884922,    0.033563164735304137,\n-0.029534826726986277,   0.01715087779125445,     -0.007719318299564086,\n0.016576082471225193,    0.03265527090246624,     -0.015667547452518193,\n-0.03214047042782504,    -0.019166912156562313,   -0.0255177202965274,\n0.006056736917574246,    0.00989254215888544,     -0.027125892703722246,\n-0.006771054909589767,   0.030586920183415578,    -0.02470415492810507,\n-0.028861372606692914,   0.0027185853446740705,   0.004952501577045163,\n-0.029112158087445286,   -0.023340429042308063,   -0.003342593835088757,\n-0.007447994892825318,   -0.00529746647703647,    -0.021729629075323154,\n0.017505071253251226,    -0.005643077862749082,   0.02069016883530489,\n0.02383323868389605,     -0.020744888618499418,   -0.010050487438782372,\n-0.032431146397127165,   0.020456316448222694,    0.0293512561771611,\n0.02024183045127121,     0.022693452703114663,    0.017789879473124128,\n-0.025428411659507343,   0.016924843429990604,    -0.010525741971874709,\n0.029781592884324404,    0.026981264233110334,    -0.019856363755394353,\n0.013103097952183958,    -0.004976733436406652,   -0.031963265178565986,\n-0.01218048183755637,    -0.0218373754690273,     -0.0042860691490548665,\n0.001794676778377421,    0.020574041911662178,    -0.017379387814634287,\n-0.01018814247567642,    0.033024970546154414,    0.006053068421276072,\n-0.024633642262619476,   0.00608467800437302,     0.017657301481911587,\n0.016867639486815196,    0.030741304815044557,    0.016723597875583338,\n-0.006243839611303552,   0.0207326601126437,      0.02936072852932879,\n-0.006729132439116626,   -0.009233630935550963,   -0.012777662135309642,\n-0.02678751801278658,    -0.021982820383952138,   0.005263684576275272,\n0.03055562117250977,     0.007416216325927173,    -0.020807958146662656,\n0.007293123005670056,    0.011452476345953857,    0.025845474978140315,\n0.0029562355747372233,   -0.02451468584535666,    0.03317580598466846,\n0.006788071190703309,    -0.004353388597791512,   -0.031072416250513567,\n0.018518059066356642,    0.014257323189870035,    -0.012739806768635214,\n0.024127520103380727,    -0.008945133326233414,   -0.025950598890153297,\n0.027550002305261834,    -0.0018433944620333382,  -0.03491186869050395,\n0.03502679657236709,     -0.022150383143008386,   0.023040758416124414,\n-0.019091359333105858,   -0.020747059049614183,   0.016071782683523064,\n0.007341878808419942,    -0.005892720352344021,   0.01566800674212937,\n0.017610256176032686,    -0.01795561653977002,    0.020859578152496273,\n0.021955153779321192,    -0.011198786307982656,   -0.00048108726818209464,\n0.021806229564523983,    -0.025190673452120005,   -0.0008853292808680254,\n-0.011465619605837663,   -0.0035368110141911846,  0.020218887599431617,\n0.010821320244485589,    -0.017866732890481827,   0.00019585731920464453,\n-0.024102869397960167,   -0.034491406444375906,   0.03234309148963756,\n-0.01486142867370549,    0.014561611904737664,    -0.001467520297661554,\n0.014591052468100019,    0.01722177352057075,     0.01654117636076119,\n-0.03462090007293365,    0.021654710593264823,    -0.034160496900534035,\n0.008596302096545978,    0.02580489381053882,     -0.03349531834391791,\n0.03396303702870495,     0.006322826954506041,    -0.02866720623386124,\n0.02889058274108951,     -0.023712783861809233,   -0.025917897234412766,\n-0.023408173815835574,   0.005896289914619776,    -0.018832398632740815,\n0.013917662542093898,    -0.0114180598095815,     -0.026228769323714245,\n-0.027270583761916257,   0.027172289515838062,    0.028293023000558224,\n0.016948123539514207,    0.02296226320025259,     -0.015210891745227804,\n-0.003925115769831511,   -0.011871275584553347,   -0.010345775513119977,\n0.025738158131286173,    -0.02196941525660687,    0.027149897932874104,\n-0.01630599905572533,    -0.015575705132350093,   -0.030474618104872387,\n0.03206423361440749,     -0.006029974588550693,   -0.02966533812776192,\n-0.00044848436129133314, -0.01941820607067844,    0.009799357676777143,\n-0.018805615725297264,   0.013745215345077666,    -0.013735384130149637,\n0.026254115470000235,    0.022317489455848754,    -0.02564622513779506,\n-0.0035099645419503023,  -0.007362104681501716,   0.020835270174774243,\n0.02264452133728575,     0.02646521589948382,     0.0029527992028916456,\n-0.0074348189094976215,  0.0168242093637741,      0.018925905766595308,\n0.01435942386763922,     -0.016005874672366773,   0.027263629642725676,\n0.020104495442896345,    0.003885939701596175,    0.013992945060818138,\n-0.0246470956457777,     0.02567736760949796,     -0.025982954732602773,\n-0.01989995757066784,    0.019380958289601735,    -0.0006160561067465081,\n-0.03198903276927081,    -0.016675237591480454,   0.004214178421031001,\n-0.006653768330016224,   0.014681773057658625,    -0.004569172419920712,\n0.01792123895393374,     -0.004408754526688834,   0.013222965861570717,\n0.025165249018081835,    -0.020655198042644183,   -0.02896011627006908,\n-0.019584480978639074,   -0.02450432591085931,    -0.004735838845719994,\n0.011499604302160665,    0.029834048774072298,    -0.0034447940228059444,\n-0.031713148417105666,   -0.02649288164373865,    0.017822149025167773,\n-0.00646292963143943,    0.03153144874468945,     0.026164217868638102,\n-0.030371078327776864,   0.01826160086546487,     -0.005985706397968986,\n-0.020623536195743964,   -0.014607540898194667,   0.02196497825974039,\n-0.031624986864863064,   0.010870728782982397,    0.022995813411894904,\n0.006623685450078282,    0.027788350244047275,    -0.028643147538287093,\n-0.012713616611852645,   -0.026388244912414115,   -0.011561372502264744,\n-0.026415191368325888,   -0.01898680232203136,    0.019261611411581264,\n0.0031633456112910097,   -0.007466273124895474,   0.010479537226045872,\n-0.014477927361034766,   -0.03183363866979385,    0.006803009751343838,\n0.012485570516005549,    -0.03278088758108496,    0.029424858431869188,\n-0.032583784221837414,   0.016024786602178365,    -0.0018595767038930447,\n0.007530416980307747,    0.034370993631781394,    0.01135120059722992,\n-0.007140581428880188,   0.029959602370409056,    0.007837074583672363,\n-0.001922038484189489,   -0.02898819326768317,    0.02366745048948754,\n0.02349733312204333,     0.02347556099509582,     0.00790884407587235,\n-0.007883727111362022,   0.015019690835561117,    -0.024080867542524205,\n0.01209937595439584,     0.020319927421043063,    0.03003612478563399,\n-0.022785398839107896,   0.00803804817883694,     0.028406096401294934,\n-8.10868920349539e-05,   0.01968495685652316,     -0.007871766486048655,\n0.010103157465740467,    -0.030587305477435083,   -0.025574726590631026,\n0.00938528658665114,     -0.01027978025139857,    0.007874027854460952,\n0.03409143084733996,     0.003032613310332507,    0.024167476011654292,\n0.006419860375523207,    -0.012863237666244094,   0.016507850741343057,\n-0.009932136541050827,   -0.035167249423264386,   0.005445567828072785,\n0.03542364159705586,     0.009705141979675551,    -0.018610288195739247,\n-0.014204949770879636,   0.015758679085661347,    0.02774125941668861,\n-0.018820443634107658,   0.0004507241265969131,   -0.01925534011888495,\n-0.006689908466597783,   0.011328189289524209,    0.01427269945148511,\n-0.028312600729046986,   0.016536518250752537,    0.010909500537789496,\n-0.025979645123621345,   0.020963329638725072,    -0.021141507383935783,\n0.01690331858541018,     -0.01589473133824571,    0.0048529145482573855,\n-0.011301132758871433,   0.03055033069392344,     0.020476974747097927,\n-0.022622704290311393,   0.007797355325332806,    -0.018024106947660226,\n0.017832427017015585,    0.03299581853386876,     -0.03123952054589709,\n-0.002117717503771464,   -0.007704314269816112,   -0.016558291719818475,\n0.017350802914783605,    0.01636373241047039,     -0.016973150040243617,\n0.011992567374474794,    0.025041677254752426,    0.009098600966239465,\n-0.017431463796885673,   -0.021212729692360606,   0.026591675105971782,\n-0.00847707683711649,    0.02844944861322509,     0.023956407768081778,\n0.005980735672704898,    -0.024688440050759795,   -0.007432675016517588,\n0.03542039302246913,     -0.02377021852815943,    0.00860205543990828,\n0.026524983584291038,    -0.027944251830461484,   -0.02451021313576853,\n0.001900709019266208,    0.007079325565826482,    -0.0063729406249024645,\n0.030131723984330606,    0.0015000335554565178,   -0.02651315776733889,\n-0.03205203619013779,    -0.004675935284310888,   0.027150283003063814,\n-0.02956668096299935,    -0.02914170316414826,    0.028309013143886966,\n-0.026252960575629345,   -0.026570938105838722,   0.009568294687567742,\n-0.02766351163508411,    0.03506763645827251,     0.02302191253584227,\n-0.015549043006311825,   -0.013946518214837143,   -0.00936151471438049,\n-0.026623387329210435,   0.009743608876534644,    0.0038002853099119993,\n0.020278413721311186,    0.0026404916675789748,   -0.026561277736342582,\n-0.0057383906186125,     0.015146721504523564,    -0.01467844588757679,\n-0.01561651444130432,    0.019703038552254637,    0.0008822043363760277,\n0.01446603310465954,     0.018724454815736376,    0.00948239582373899,\n-0.025578633538341902,   -0.0053324284584622605,  -0.02255528262080865,\n0.03131769661961639,     0.023176503380817493,    -0.009348328691912029,\n-0.0066019629361623545,  0.007032895077634184,    0.02824846032200849,\n-0.020394953299256436,   -0.016031778108760924,   -0.02563530776384779,\n0.019757620060027268,    -0.006537410872720536,   0.03020382263787162,\n-0.006862774043045551,   -0.01896264343461313,    -0.027411628036228,\n-0.021162421870965897,   0.014084823685893033,    0.013970814285890198,\n-0.018040800656588567,   -0.02150396961126302,    -0.003987052885327112,\n-0.031876773034990556,   -0.026159176722183795,   -0.000947820353206809,\n-0.012221411654189756,   -0.020616982727022653,   0.03145703456250866,\n0.012187284954757738,    0.019999552575108492,    -0.011025776400884242,\n0.021848679671235716,    0.03528590822392776,     -0.023787762775736424,\n0.015606953222724389,    -0.027439999045599364,   -0.03119594617400808,\n-0.018639308262331764,   0.02418484749997942,     0.029734202433714257,\n-0.006343890107129165,   0.025244581286746115,    0.03498835865983078,\n0.01139361169486599,     0.009639901610084687,    0.02041026784487664,\n0.008114606853354966,    -0.0016050068334379655,  0.0016045964889492598,\n-0.028331822947574,      -0.02774427423100544,    -0.024742359568874717,\n-0.004162896204302983,   0.02053670741267397,     -0.00667633625805578,\n-0.022783362331112077,   -0.02879615570230537,    -0.016419065352887324,\n0.00821129173797998,     0.02008239752509306,     0.013106032150324654,\n-0.015285482551117993,   -0.026463501649353936,   0.026599407766761434,\n0.03445889878951294,     -0.012940915088372258,   0.004178197750405003,\n0.011412232320041793,    0.027553896805522938,    -0.03421441787303721,\n-0.030848256187024713,   -0.023134311466211744,   -0.012366171590293176,\n0.02979010623215879,     -0.009808644972466203,   0.022478847669272082,\n-0.02239076668935012,    -0.00842723713116826,    -0.014129961820999364,\n-0.03529511950451641,    -0.03489541857445656,    -0.01280063583731128,\n-0.014811357490134403,   -0.010257644943506505,   0.018470889546292533,\n0.019248960364995373,    -0.014075720419684768,   -0.0038416957973733596,\n-0.03357599673350469,    0.02441899773939536,     0.030634572242377478,\n0.023614081114198285,    0.02360424825220141,     -0.02304906396658012,\n-0.029617529672113927,   0.02938016067571352,     0.005819566486775745,\n-0.0006371127535495989,  -0.015491909424645296,   -0.02482625317044996,\n-0.013228419601953112,   0.024455382356769938,    -0.0009619774107019752,\n-0.0013505554786349325,  0.026305495334174374,    0.022784576951743993,\n0.02625347265838539,     0.033648626078013125,    -0.029709602684873625,\n-0.019594181842458425,   -0.0018992820297484994,  0.028590851177979403,\n-0.0032264346867573413,  0.02351986951885091,     -0.012242681074593347,\n0.02662196451253872,     0.019669740246844494,    0.029347328282282235,\n-0.029274496247005406,   -0.007631411519600149,   -0.0013003894864562612,\n-0.028231094772344777,   0.0012614009582857441,   0.028674965519734204,\n0.024289948874170644,    0.0019489677693102026,   0.02684215944645981,\n-0.01386434324761171,    -0.01607827567617627,    -0.03254405088161349,\n-0.007523692206976692,   0.03191761457930562,     -0.016133732541237834,\n0.02624836221370032,     0.017359219332524812,    0.0064594818934194855,\n-0.033391139018360015,   -0.00544539317385024,    -0.031919110554009304,\n-0.031123205156122245,   0.012185801665957023,    0.025020167635025695,\n-0.015853771690064505,   0.014536456070158457,    -0.020651515647627308,\n-0.007229742989307825,   0.001480287843892282,    0.032628370435054316,\n0.009624596399996996,    -0.021838064897283238,   0.008676067570384907,\n-0.021388640397301047,   0.019723176875210476,    -0.033785302600448944,\n0.012018151271371076,    -0.027336105926244428,   0.0038403206039337363,\n-0.027928754326428096,   -0.031188213290755613,   -0.0072167639351122005,\n-0.03281353474178667,    -0.022912757843033964,   -0.025207522360186908,\n-0.006276887611304627,   -0.02556844675536622,    -0.030160748433386602,\n-0.009962373384330132,   0.02968136914154693,     -0.03345769731546984,\n-0.014753318159725937,   -0.030227887952503425,   -0.014077636004729364,\n0.03438595541515678,     -0.021438150418659707,   0.022604374736488724,\n0.025938888168588414,    0.024905689613964888,    0.0038194257923869213,\n0.03370519870524868,     -0.02383271950986194,    -0.005633004579686914,\n-0.031339397434076155,   0.0001939800030531434,   -0.007295505117341973,\n-0.007366387267918249,   0.012487861554900146,    0.01246242591326827,\n-0.0036190574616403576,  0.010655602657968355,    0.012869314846220907,\n6.409872450278765e-05,   -0.025172445378457513,   0.002697921266096391,\n0.005315993440946909,    -0.00368664272457173,    0.03181060260066912,\n-0.0030229920586514747,  -0.011196476859451299,   0.0013471692591294374,\n0.013560517698285986,    0.030771342893043507,    -0.03459825681097373,\n0.0278758366436728,      -0.004957522215738134,   -0.026370007840304677,\n0.005265613732887087,    0.014021035960599035,    0.012895759968643339,\n0.033482695367744425,    -0.006827343615307743,   -0.03500395981283203,\n0.024377689620130132,    -0.003145351072166648,   -0.014344924066767944,\n0.01572183372494801,     -0.028116613576854417,   -0.02357444465750569,\n-0.031497503016813436,   -0.008147671154625358,   -0.031775009196272054,\n-0.032157459578041274,   0.01517581119152259,     -0.004628701634773722,\n0.025257740170314853,    -0.029707646580915577,   -0.012977138493320899,\n-0.0014031881519546944,  -0.0037457190721932,     0.0018157719336919151,\n0.022113081755048034,    -0.022356729936094086,   0.01163658870647228,\n-0.019921256931891982,   -0.0013546464199417707,  0.0012170630034576413,\n-0.03429252177323745,    -0.029891803354652968,   -0.035022068540074634,\n0.009488117270213021,    0.020802865806688844,    -0.024601110508785818,\n0.02151264381520072,     -0.026568945993096425,   0.014596848396265572,\n-0.00907069233785675,    0.024585285258685384,    -0.033770761791735084,\n-0.010676157539059983,   0.007762564084122656,    -0.03270671059334253,\n0.02003452236678237,     -0.0005228674213503814,  -0.016448868833557298,\n-0.03286031160032261,    -0.025917473643648315,   -0.012603843717836198,\n-0.017729483944222413,   0.018761533837292708,    -0.015800578602504205,\n-0.010121991633642484,   0.02196534853418397,     0.028620362439122343,\n-0.01527165967123368,    -0.002192287136426155,   0.017106102255583098,\n-0.00012643808378926772, -0.010796938382474959,   0.01971206112936154,\n0.01943816406980782,     0.022222953796571934,    0.0007608084801776453,\n-0.027278782761372133,   -0.0005536209252195762,  -0.00549985118030788,\n0.00334005698854333,     0.034045071086244064,    0.016437429139698874,\n0.01563332522333914,     -0.017748891321656524,   -0.031175881482041104,\n-0.030103748200739733,   -0.0035573549545776196,  -0.022970147691435665,\n-0.03263469241060123,    -0.02111494640111733,    0.0030419653562923877,\n0.002836881195101924,    -0.017846221511940832,   0.01660032888546519,\n-0.002559873326725946,   -0.02157587315457799,    0.012268867207887595,\n0.008688077279742999,    0.032589275081882946,    -0.014115228200931354,\n-0.03413898727474359,    -0.005354331729066567,   -0.019530870172793344,\n-0.0043778457104608004,  -0.0351959996929072,     -0.01775463084394462,\n0.02332030042256354,     -0.011742898350229514,   0.015695755076434684,\n-0.029308688865546818,   -0.03181593696096462,    -0.0067183472746887764,\n0.031544138467717094,    0.02611566692827668,     0.012584572558426115,\n-0.034551053311642356,   0.030431790048057912,    0.01884803262524103,\n-0.018983595291751705,   -0.02987162991907212,    0.011874188742749663,\n-0.024750501311138096,   0.0029833996946205255,   -0.03424395208861471,\n-0.03384966189037522,    -0.013974822883109654,   0.026974512045261544,\n-0.03499674702222302,    -0.03417285433046192,    -0.02755846954217749,\n0.006826191017139461,    -0.032757776712912495,   -0.03166649077771513,\n-0.01686965830506142,    0.007241239692637814,    0.012674314383064267,\n-0.030800048507563196,   0.0008947783036202012,   0.03142702231693865,\n-0.017603301798313088,   0.0005061146878119681,   -0.0033778065987646716,\n0.02909183586270996,     0.005031836467252613,    -0.027208275566907247,\n-0.030872418545983563,   0.011985272253775015,    -0.015489380693219692,\n0.004643026863133868,    0.014101680710911437,    -0.004255299854472189,\n0.01743984193303137,     0.020556985543075015,    -0.024058281191087327,\n-0.02417591658948941,    0.017206587296937192,    -0.0066018680883685454,\n-0.022324669785811838,   0.02776784946188841,     -0.01759496480412406,\n0.02483920552511081,     -0.015887677453781182,   0.033067774148235245,\n-0.01846112781636828,    -0.004483790880494093,   0.024382697778928365,\n-0.00650632577737623,    -0.0166724735508678,     0.0026748413571696422,\n0.0064484699353323394,   -0.03323865491107504,    0.02661613489455759,\n0.029495447917363953,    0.008014127643942317,    -0.009293286314886906,\n0.032110229923719265,    0.027011820213151475,    0.018993967542036652,\n0.023789981237994647,    -0.010590020421474151,   0.02624863516438275,\n-0.030487254729173074,   -0.027733431843346344,   -0.031220571871007397,\n-0.0030943215667666524,  -0.013645153237864438,   -0.02301617526267375,\n-0.006140944205053979,   0.002370249042386054,    -0.024521695055131083,\n-0.019313443606021708,   0.01040332313223862,     0.008342489280427419,\n-0.021752295757766316,   -0.029178333825975056,   -0.021631865287921864,\n-0.0062109746648403765,  -0.02774500078038733,    -0.026242106645456474,\n-0.0007937812789039964,  0.032355824130449594,    0.030616422416094927,\n-0.015360872073757295,   -0.031111070878356715,   0.0017206806702294414,\n-0.01618643870865159,    -0.023517299862869916,   0.03036399879858175,\n-0.0072005999492153385,  0.031884340559663805,    0.005373051386604092,\n-0.02402665552738422,    0.016944356953613095,    -0.014651814203385072,\n-0.026530484053020123,   0.007883231798368702,    0.022423416024299057,\n-0.025176908680170473,   0.02223977588303026,     0.018047677433899303,\n-0.026534640017821028,   0.02516761019378032,     -0.02779467432513698,\n0.008292178628707236,    0.029715061006687842,    0.00359579810075894,\n-0.031017413127495095,   -0.018671966494773585,   0.008028158715753353,\n0.017197381003577317,    -0.011926259583933419,   0.023783710905773848,\n0.015479674766449672,    0.029373789720303585,    -0.026716383830106334,\n-0.02093364430960299,    -0.016052815496496776,   0.032122792450892966,\n-0.018963055002854143,   0.016772534898760086,    -0.02186735521381683,\n0.020794011266476294,    -0.033568008440800115,   -0.015458942339614612,\n0.02273879959562454,     0.01436768423122365,     -0.02418213927183712,\n-0.00012551264951599084, -0.02473539886430156,    -0.02356249019804971,\n0.014838061985519742,    0.016773142085590005,    -0.013228087665365174,\n0.016459095611555553,    0.03367618073843789,     0.01608629038579887,\n-0.01780720657320306,    -0.00042323066046395,    -0.02454079646252129,\n0.014099492609004671,    0.01713551782082338,     0.03494346824481816,\n-0.02428675479728092,    0.009969893091162148,    -0.003072093501198287,\n-0.005524072316238986,   0.026647762993010415,    0.01452936186476159,\n-0.0004928801679620382,  0.024853053542694292,    0.029719397102679845,\n0.007810080615027153,    0.018401746345231496,    0.027102161497472965,\n0.02198303345629228,     -0.023704075566735792,   -0.01079415014728398,\n-0.012366514530461954,   0.021456813472163452,    0.012582721641491173,\n-0.02540712425602636,    -0.023494776806661184,   0.022479255395937297,\n-0.032050355273379676,   0.028371064210715398,    -0.025140926972371396,\n0.008451634172189684,    0.0209535019500918,      -0.007803232113385389,\n-0.024110551761219512,   -0.0011368499126345267,  0.01015243777735145,\n0.0228123818835733,      0.031738008288156073,    0.0044965062886144925,\n-0.025857870443226356,   -0.03245167676284726,    -0.015396136643441883,\n0.005867665050642091,    0.024428417184800304,    0.0003865928295828499,\n-0.02485078639669166,    0.0122513476560944,      0.03221624911305643,\n-0.026187073144973108,   0.017739747676528732,    1.3301211030753672e-05,\n-0.007381026703672807,   -0.02187763390645644,    -0.007366068112457467,\n0.01682827004493942,     -0.015104407050905409,   -0.026475053579933443,\n0.0343502800794521,      0.013267881468310871,    0.03155385476917975,\n-0.01815359790106942,    -0.03353563841256563,    0.01271084712553816,\n0.011310104522631806,    0.003199858470004995,    0.0048812558129147565,\n-0.0006304628518532053,  -0.009569621822088663,   0.02585365407027317,\n0.008713216385171751,    0.01059018448713972,     0.026803012533503097,\n0.023246205137535992,    -0.024255518574788373,   -0.0131423687408136,\n0.03230515937805202,     -0.028546451716306875,   -0.018823374369366264,\n0.0009752501731385896,   -0.006729994416547758,   0.010171181841270614,\n-0.01982234835589362,    0.00471533337353795,     -0.00494889137444374,\n-0.0299171257089176,     0.003261610677320138,    -0.004440709686375871,\n0.030184292060687685,    0.011448462455603126,    -0.01616798170125356,\n-0.0010259381129126355,  0.022172532563074745,    0.02080663964864862,\n0.00033813891016740545,  -0.013860788702329032,   -0.010843398821148416,\n-0.02418412495892956,    0.02139186894871994,     0.019243270842187313,\n0.011231563743210587,    -0.0203953884013969,     0.01365844242680299,\n-0.022037153862296526,   -0.02117453732235228,    -0.0072407036881029785,\n0.026009362993603312,    -0.026745368177795492,   0.014567693694736665,\n0.023167699077384495,    0.02307738658735384,     -0.022186684047871566,\n0.017854592701238892,    0.014029441196020691,    -0.027006610484414717,\n0.023218827660720656,    -0.03217734931064195,    -0.00725770557360879,\n-0.032368448908401466,   -0.01010154175245597,    -0.011001477942752858,\n-0.01964619280706764,    -0.024663090585062306,   0.03259590925860493,\n0.03564525393671048,     0.0006685234947941503,   -0.01945694970688517,\n-0.0026847142700969612,  0.025501524195233626,    -0.024220390067790372,\n0.026651105413860555,    -0.021348777340874495,   -0.01976137790935567,\n0.004192727440796763,    -0.011941416660871467,   0.010890688930958037,\n0.003502328723143084,    -0.033258716554172923,   0.016277544421542833,\n-0.03273087626307114,    0.03042928958747123,     -0.0049762200288045845,\n-0.03307102837534925,    -0.03167674795798037,    0.02681718595848938,\n0.005366125888854323,    0.019438155797329586,    -0.014427347041483867,\n0.03400361871750414,     0.018258414442287253,    0.01292579020111139,\n0.034060238171145195,    0.020477938092256478,    0.031559783071108884,\n0.005161496372320781,    0.00921915171605836,     0.011923756168030144,\n-0.0313692084104881,     0.016201991806392566,    -0.015909790296234284,\n-0.021019629254273586,   -0.020525823257928812,   0.0018069150823840086,\n0.010858130916208764,    0.016217671719381137,    0.015695257793537056,\n-0.018080376817869788,   -0.003787146201685877,   0.001513601197514726,\n-0.0262983713424821,     -0.010114386068362211,   -0.010830109827361394,\n0.018192204553004545,    -0.0026880178599497334,  -0.029995750123164775,\n0.03062261799510952,     0.03443965899891154,     -0.0010585186563870086,\n-0.03469032285696564,    -0.00031688669494729844, -0.002132141279976074,\n0.0004940949414904178,   -0.0017444498611785303,  0.0008864418769903054,\n0.03255850683116075,     0.008689202279385078,    -0.02923320750166554,\n-0.02139222034761501,    0.005421065258046436,    -0.03217669706971679,\n-0.0038304216130634217,  -0.014608288970280428,   0.020790591024626246,\n0.02337563558895005,     -0.02411911897594244,    0.024360657495038216,\n0.01174647428444426,     0.005195653146610436,    -0.009754624782196486,\n-0.0008062788464623144,  -0.015138354875052653,   0.026067976091711787,\n-0.02390515836959157,    -0.019975520218982284,   0.006121773412393846,\n0.011199597547024081,    -0.013659402037231585,   0.008128628992932738,\n-0.02783236802085872,    0.03457591642606148,     -0.025327451514088762,\n0.03294094756846845,     0.012176024155801213,    0.012337570444445611,\n-0.006567449441806221,   0.012138445885617188,    0.028086685701627794,\n0.005815164076117239,    -0.02747052975234524,    -0.02868940183535715,\n0.023794195676443964,    -0.034997574272057234,   -0.007433529844428156,\n-0.0023839808642587357,  0.012537996931535835,    -0.005237517681523244,\n0.023033900691803878,    -0.022675795842507174,   -0.0013713028730593735,\n-0.022220525677397303,   0.030792034284499635,    -0.004664959865789162,\n-0.028837443855934165,   -0.012890615117956812,   0.013867025793454129,\n0.006887247209705452,    0.0006479425348994071,   0.022175809949135507,\n-0.023948990666789516,   0.02756353988569381,     0.030361163030440872,\n-0.011858811755860121,   -0.035001618723131706,   -0.006851843047872508,\n-0.02907958268528491,    -0.02776259790865645,    -0.0054379724076075164,\n0.008709741577767367,    0.011366449393039053,    0.009279535647023796,\n0.031412066828519554,    0.004326947446537863,    0.023399717491882886,\n0.025840438741278494,    0.021245613733864226,    -0.03123329878349359,\n0.022524910102637827,    0.011831033430893565,    -0.02691458978605072,\n0.0007288222657104555,   0.031975208847946475,    -0.014318702249746065,\n-0.023442308306736784,   0.007696126343200699,    0.013974103690130333,\n0.026822261923220243,    0.025192931697691177,    0.0257613771493436,\n-0.01685848424309566,    -0.034524767316986484,   0.014780255581842339,\n-0.012029596288712386,   7.353954671310677e-05,   0.02056273189746184,\n0.018357083365082055,    -0.02071363885199731,    -0.013162202122254931,\n-0.009647345746673293,   -0.03045081469838401,    -0.02129172192147527,\n-0.018642377324987778,   -0.014434613227330289,   0.03300231669896899,\n-0.0015856507400511491,  -0.03271769391844606,    0.016240157559121123,\n-0.025768582187499823,   -0.02212992484737808,    0.031296936474593445,\n-0.019125017747508424,   -0.007389010210919224,   -0.0007939896703755436,\n-0.015385350997946919,   0.020010139384023278,    -0.022506794177242485,\n-0.03494796495653654,    -0.020562972527874455,   0.013549638533432455,\n0.031127200402315383,    -0.030819745878571003,   0.00312919708553161,\n-0.020720794936763074,   0.03364626379171165,     0.015224432800414245,\n0.029209213793063134,    0.01484463308269499,     -0.018000392756444685,\n-0.0001776156707541308,  0.023149074509862547,    0.004514094241434444,\n0.0027738787785660207,   0.0295714171971411,      -0.020939227865304378,\n-0.002036194550075936,   -0.00844574548378033,    -0.03103912975697671,\n0.020735833408888467,    0.02905197731668562,     -0.03409148233619628,\n-0.017064108883392864,   -0.023823499181985872,   0.024335158224633516,\n0.014415489089129183,    -0.00788176443061516,    0.030558956128525445,\n0.02565248723719025,     0.010502689005129382,    -0.015855950423727828,\n-0.018405937031988718,   0.03207297180056447,     0.027057773965266492,\n-0.0324274246158629,     -0.015598167429044645,   0.02712201683568933,\n0.01631388719010496,     -0.02111775469965946,    0.01802859088073291,\n0.02732008553912224,     -0.01935365769086436,    0.01663669989752037,\n0.021745386114910694,    -0.017600568460833552,   0.024710796139231384,\n0.01287364962882374,     0.028096979114792253,    0.027186667054652468,\n-0.002794122373861364,   -0.02719145446972239,    -0.022765726478735884,\n0.007710385721951809,    -0.002371956951654232,   -0.0006173163749590348,\n-0.02137532641276413,    -0.030140742857184464,   -0.003879321630639817,\n0.03549765872121669,     -0.021851468640568066,   0.03184803506100229,\n-0.011886141165762816,   -0.013386764312191973,   -0.0015349336565844299,\n0.0007703015424923258,   0.009187471136302654,    -0.0356190867265275,\n0.014934546009405627,    0.011409281499373527,    0.009033626426422303,\n0.016003425871277302,    0.004502763956317244,    -0.026731035812875024,\n-0.009672125842670996,   -0.003467518718548715,   -0.006596520516992451,\n-0.021442970682266114,   0.00686926154683491,     -0.028117792714844356,\n-0.018364411646734292,   0.021252731647266414,    -0.008784164289828318,\n-0.02503450171568154,    -0.01889243142747827,    0.008517412585218343,\n-0.032403443023346905,   0.025885110009103485,    -0.007013026042797077,\n-0.0010166971489850255,  -0.004760536957815602,   0.018919358524940245,\n0.025668311229709383,    0.013117594971496123,    -0.01715170273131212,\n-0.03503175863518124,    -0.02867904390717044,    -0.0016919719952561854,\n-0.03566055482034905,    -0.0034986589225633386,  0.008124653656661247,\n0.007782894716387259,    -0.03534694148137033,    -0.004886323662532237,\n0.0200857127566913,      -0.006479847317790555,   0.02449350112370343,\n-0.02490588413741544,    -0.022397154761825886,   -0.003935976325446304,\n0.010586099746265818,    0.011687766008621306,    -0.028059786943545755,\n-0.013780792197937961,   -0.022559949154866317,   -0.022109527403643532,\n-0.0008514579958446209,  -0.005091371445907694,   -0.005818256799737147,\n0.01699277140665545,     0.026134214103277223,    0.028242495722120016,\n0.025659826251965015,    -0.019912896726986165,   0.013911962051497584,\n0.030269098208290775,    0.005028795581740353,    0.03408567043158776,\n0.017183699777458133,    0.03516914634536255,     0.02300988970980135,\n0.02457454748424738,     -0.009407215136385665,   0.01959099829920735,\n0.032338996892389456,    -0.021618053077458073,   0.00961006779507702,\n-0.03331393253310636,    -0.023791019029367276,   -0.0019296441148643245,\n-0.01096985756233867,    0.018623635015287632,    0.009499634238654535,\n0.029984705552476665,    -0.02171526700286883,    0.03174590834511753,\n0.023450167991976918,    0.025859199327187166,    0.033765093557830486,\n-0.018957999582447507,   0.0003922640320890926,   -0.007937903336311756,\n0.018895295832561245,    0.0043604421359078605,   0.00609120682336708,\n-0.026470139833825138,   -0.013786951946944641,   0.011346478834014469,\n0.03437387431676261,     0.030352417485935573,    -0.03157141436601315,\n-0.02818926078294115,    0.001826784598089786,    -0.011769469687441112,\n0.02585629505048282,     -0.018939700208733454,   -0.02761079302417716,\n-0.0219759261446626,     0.03178071674328961,     0.00993075444075951,\n-0.007498602997847714,   0.03506678362025855,     0.002135533181723508,\n0.014260161658572117,    -0.03044451415675895,    -0.0013082551072821635,\n-0.031059400242806415,   -0.013814717637195384,   0.027718558170500618,\n-0.008212325806961573,   0.010755518394029502,    0.03174882187183467,\n-0.017884920281457557,   -0.02689205342787134,    -0.013547913344844453,\n-0.020121013505783634,   0.010692746663408486,    0.022207696697486526,\n0.02281961764800885,     0.02705655279304192,     0.009577944399512912,\n-0.032135550043864085,   -0.03267069282293418,    0.008106539796524837,\n-0.01213285136822047,    -0.00946628499717274,    -0.02785050029881046,\n0.015045346926680152,    -0.016846559876934983,   -0.005918085248018068,\n0.00542841644436161,     0.00674926813721542,     -0.02910148856430461,\n-0.015154992556406541,   -0.0008826643372895705,  0.022310260548090464,\n-0.002502150064760067,   0.030224511043662628,    -0.016782512617350254,\n-0.02039371823487583,    0.01316366035082209,     0.0003282592248641723,\n-0.0032485595365090753,  0.022269716357660126,    -0.02152142416268432,\n0.016953628593264672,    -0.035706952377632335,   -0.008536092139153675,\n-0.006589035544954158,   0.010102774212312078,    -0.0010626755101014343,\n0.031050383516702616,    0.0011545164033011565,   0.027770039621110708,\n-0.00796709373920432,    0.009118735198860107,    -0.01822039909836917,\n0.026048158731006844,    0.02040507536833542,     -0.0050916644108559795,\n-0.012938858706526024,   0.02633056433171621,     0.013400646159101906,\n0.007264505627226945,    -0.020353798271856172,   -0.018517127269216987,\n0.010075932624944542,    -0.01449196571205368,    -0.0043685935236157615,\n0.005887475616513601,    -0.025327314374521293,   0.011378401372246097,\n-0.024079133359726158,   -0.010139217395601727,   -0.02551413323197548,\n0.00949317681797981,     0.02812785416475335,     -0.019808501416533442,\n-0.00661433536410302,    0.010703650020222197,    0.01764181200986016,\n-0.01430857774593684,    -0.012213163578773722,   0.01979017672809536,\n-0.032551832939043436,   0.02522059522817308,     0.019181083565053672,\n-0.019673824586555096,   -0.006171057857892681,   0.029026036161045075,\n-0.011002965055716636,   0.01044294442177832,     -0.019249424656623642,\n0.01896660877722102,     0.014820310862561326,    0.023179270992033832,\n0.02309844966096538,     0.02523442600441843,     -0.03197520774208992,\n0.005420028734545913,    -0.02432984839026192,    0.01627356120510624,\n0.00493616169939184,     -0.011087155039000016,   0.006268875727789026,\n-0.004315501804729608,   -0.02272641066082754,    -0.0028961439025449215,\n0.029614513799380838,    0.02683005053427174,     -0.01508251995332147,\n0.009761889535432429,    -0.003072090804303524,   0.0008295182121133876,\n-0.008305275687503817,   0.030022344066495732,    -0.006854598227207488,\n-0.0035606053258178906,  0.01842125744569196,     0.01974796356066341,\n0.0038339117255281525,   0.015920756206208458,    0.026787774319351712,\n-0.029099355006706927,   -0.02668710723746241,    0.022742163672478426,\n-0.0027702364762970306,  -0.03243003523754278,    0.006552314859843279,\n-0.03457999294847061,    -0.03557765123073721,    -0.03504049765353926,\n0.021966623524797318,    -0.020968370692498697,   0.001480230417827704,\n-0.01790682092895058,    -0.004732179906661122,   0.012368975398723192,\n-0.023123291755622704,   0.0008412922178347516,   0.02505836588387017,\n-0.027838378132229263,   -0.0047858302523727326,  -0.03183134408124744,\n-0.0340252904135019,     -0.010794898390851166,   -0.029255260974048226,\n0.024270780444444424,    0.027275500500594112,    0.0024160300261178353,\n-0.026597390518950555,   -0.023563716720902038,   -0.03288773231452048,\n0.004700583550200119,    -0.016498609965306266,   0.020459204160362857,\n-0.016996141303502448,   -0.031941253595480355,   -0.023165140707540378,\n0.01288900474652717,     0.0058452234316456264,   0.00825141566962353,\n0.0036138288546331988,   0.012881056859116129,    0.009038440430844641,\n-0.0024387281769888847,  -0.01793266591810475,    -0.0320684756455259,\n-0.024617585757477235,   -0.011312527461812803,   0.0025984500456169763,\n0.02769360189987602,     -0.01190778445948905,    -0.008025890748021005,\n0.010567820476252487,    -0.0025717302252199876,  0.021544317732820353,\n-0.03560615882982372,    -0.025580037498237427,   0.004611481557931364,\n0.025590200149548492,    0.00635192196158684,     0.027594989572168008,\n0.02267272021916346,     -0.009584745074497485,   -0.022123828465755335,\n-0.003978186574778434,   0.016882473622450805,    0.005110894819073095,\n-0.006852873416939607,   0.003370922383772433,    0.03368105865069839,\n0.006817867800449462,    -0.012678368687103567,   0.03320753159606529,\n0.03568933750198499,     0.020340184249448705,    -0.012860495725853443,\n0.004715729180965879,    0.02956789126658268,     -0.020283338826524656,\n-0.008894755034632313,   -0.02448130589597275,    0.028323730754649355,\n-0.023841514346558457,   -0.022769205837610773,   -0.033607055613301656,\n-0.007832962885683461,   -0.017329912731541542,   0.023390096650771526,\n-0.009130040273534399,   -0.008261496773056423,   0.031838289177439257,\n-0.006371708858824344,   -0.026659000163794973,   0.00499889208547355,\n-0.024968127849800646,   -0.0339579043536796,     -0.002365939457223227,\n0.016242239823322083,    0.006788677616505502,    -0.006254254669192129,\n0.005585502929474089,    0.019805256864473795,    -0.014429850957400275,\n-0.0044474158469930015,  0.03355532371565251,     -0.006240258855009451,\n-0.03396794148047927,    -0.02722440055757429,    0.029321875021700826,\n0.023135100160605507,    -0.01599490359415925,    0.0025065142415359016,\n-0.030479088697708344,   0.006635676589823034,    -0.0025433642796465522,\n-0.007541717237091397,   0.02514556042214411,     0.001273635016485229,\n0.0027178181029879817,   0.027229060153145815,    0.01339807720698956,\n-0.017435495368387444,   -0.0315872659211447,     0.005080774523086988,\n-0.02293389466079354,    0.01823348840844742,     -0.019940502329145116,\n0.03096772707728903,     0.005725871228895412,    -0.02808275477848199,\n-0.021001175597713306,   0.012156583000503112,    0.03192475815392376,\n0.034225048040808476,    -0.02483733717427693,    -0.011797007859764919,\n0.025191632154854482,    0.02423582898099667,     0.010085948699715392,\n-0.030768345221262497,   0.03482655184688678,     -0.03267093854267456,\n0.025197144490189685,    -0.013029044579726794,   0.02689567512116935,\n-0.028570051901534155,   0.032571502423090995,    0.020554122301641234,\n0.014900487461296612,    0.006096230671855091,    0.030276489136353744,\n0.02386278713394953,     -0.02495380718818201,    -0.009476376244616906,\n-0.004828381329755144,   0.033671363127464125,    0.005432006147169329,\n-0.02056194669342354,    0.015080513463777057,    -0.035320918911910706,\n-0.034837587829926825,   -0.014210989283340476,   0.0005148689505304575,\n-0.0035675702547217553,  0.028271323160836748,    0.023237824813663828,\n0.0247942866176978,      0.03086536454411798,     -0.006083862369883397,\n-0.0016236864511899318,  -0.01140218688212502,    -0.0028330125912546323,\n-0.0017003625335625145,  0.01804446282278707,     0.009995183160114758,\n-0.022681272414253984,   -0.01322274574680658,    0.007228704890717609,\n-0.004209182754546459,   0.01003059040788616,     0.011257148109599402,\n0.01292753004089606,     -0.03175583854142074,    -0.02381660266420219,\n0.026408576230188652,    -0.0005485974667748012,  -0.00556251518702981,\n0.010467345855344248,    -0.014588583339126254,   -0.023889194497509834,\n0.006873217838058506,    -0.02763858577458208,    -0.012215573208890669,\n-0.03267469231040982,    -4.870263970370634e-05,  0.027371520863024856,\n0.01982534546117828,     -0.009817590913760188,   -0.010735653888321126,\n0.0316813925289366,      -0.02676749948015059,    -0.007697918786098854,\n-0.02555581022851375,    -0.006763039777151607,   0.011108961039855503,\n0.03475150884955528,     0.0067363751456019595,   -0.01020994512233357,\n-0.03209332300605506,    0.0262437458972765,      0.013690482080591917,\n0.03499975426133306,     -0.03470237949260829,    0.03416698976484591,\n1.236686416401194e-05,   -0.018860492289990195,   -0.02221104684415659,\n-0.03415812419551286,    -0.005104582926500797,   -0.02975253338227928,\n3.0057167121201796e-05,  0.030369726498137437,    0.03531330567052882,\n-0.0006491556363012939,  0.014442774628841708,    -0.03473043787972336,\n-0.022212315195419274,   -0.02224499415985635,    -0.0005361992490324842,\n-0.03497911449390292,    0.02402500369837164,     -0.01686725179176667,\n-0.00912739592920015,    0.01295464463795521,     0.0254908373975422,\n-0.029896041056442096,   0.013480298166149745,    0.03130702074494804,\n0.0037423790527158812,   0.006749078653460019,    0.035512217708280364,\n-0.002057491901278677,   -0.03493076101188785,    -0.004867161795555098,\n-0.020455024719201662,   -0.003995972021862994,   0.020889990844619344,\n-0.026100562748051826,   0.01148499998771891,     0.0009299310072737638,\n0.005517938744486092,    0.02553470774649475,     0.0004577883548823285,\n0.010512414537688577,    -0.02227817731279561,    -0.012362503460572667,\n0.020736008106381088,    -0.01732124461671451,    0.005872217234934687,\n-0.02393829401836416,    0.027072942703327676,    -0.013082527276135441,\n0.02895715143871254,     0.007208937824347933,    0.027526555047708852,\n0.025245267369087276,    0.005488717814013959,    -0.021136982938703395,\n0.02844002529553804,     -0.008093978672258004,   -0.005970803096709839,\n-0.02544839567227534,    -0.024909458356682256,   -0.01610366768995869,\n-0.031525277138557996,   -0.007562249796934119,   0.026176451995766386,\n-0.01409825371833235,    -0.025501428606318478,   0.01230190148718175,\n-0.03431308525107538,    -0.009421301471057908,   0.007689228026377376,\n-0.0021427853612258707,  0.02278273254728675,     -9.740247418830013e-05,\n-0.0062598807279473645,  0.011959634278892984,    0.018667003655866512,\n0.01519894125798555,     0.03225658097256554,     -0.020168111876530215,\n0.02213332824021358,     -0.020574582739571714,   -0.009630581828255276,\n-0.021216963653644623,   0.018934297706114957,    0.034892081984969306,\n0.030696694120578127,    0.015177916276109465,    0.011828951039572693,\n-0.005548263120638306,   -0.009075453717046766,   -0.028466229841317595,\n0.022701354884233263,    -0.02355179479993986,    -0.023463037985940616,\n0.030457301317233388,    -0.009371445187187109,   -0.011062618812809955,\n0.011885214503702921,    -0.02518830594677222,    0.0056459962270108245,\n-0.005996957938171002,   -0.0340400367260226,     -0.032735652110243846,\n-0.0017085648472359636,  -0.03369916437969573,    0.03536856226598145,\n-0.01580394668691204,    -0.0219990269875256,     0.03137465566340581,\n0.023261299931497892,    0.00909081638973231,     -0.03088117120375571,\n-0.0085463627774926,     -0.01739498511208383,    -0.03442476837668598,\n0.02832991228621009,     0.033031713821508525,    -0.01541522451076595,\n-0.009594244746492944,   -0.0014933244828404999,  -0.011351477739004006,\n0.029121553466677486,    0.00019196755393691145,  0.011555594009481798,\n0.03134851018191937,     0.02698368059618552,     -0.01795571718996404,\n-0.01599633774340661,    -0.0159520193592328,     -0.014333200373886246,\n-0.01686643539132883,    -0.008640881079331047,   0.030264144449832407,\n-0.020583412545073603,   -0.030323566401446327,   -0.0059287651676803,\n0.024414946154486947,    0.0074083122359333954,   0.03547765358096571,\n0.007480595879227479,    -0.03438089769808337,    0.005169284250716134,\n-0.01918550198399406,    0.03308619608523696,     0.024244558534137515,\n-0.03305717925331717,    -0.004601484073608775,   0.03370284382174835,\n-0.03380297531725081,    0.0010950908925605224,   -0.03209102555230997,\n0.0007096802101601969,   0.033516442346470346,    0.00536113144211273,\n0.004830885036717326,    -0.014685847604054407,   0.004871559864668243,\n0.032202281977334546,    0.02204911970974852,     0.013422733951685226,\n0.029639531723908666,    0.02520239312708518,     0.015149246388258264,\n-0.017767323792675854,   -0.007497193859499579,   -0.009946427055693612,\n-0.015048428427981724,   -0.017454160027235068,   -0.009444920551271725,\n-0.005833217160424714,   -0.004618745788469547,   -0.014286850670806817,\n0.0030225110158620073,   0.010803372489592145,    -0.03335727139005796,\n-0.028309883271353774,   0.006884300863873617,    -0.03034305850023525,\n-0.006560698679770771,   0.021483535044977155,    -0.02764809454684407,\n0.0006608703822588554,   -0.023667348150767778,   0.02995745251453747,\n0.021782904029036643,    0.03476012573478098,     0.025805968644732478,\n-0.032538323620837986,   -0.0285996616231109,     0.012977892775405817,\n-0.006391133947806469,   0.008350104377762624,    -0.0009619766458690163,\n-0.009026176871795133,   0.008742534239277502,    0.015854264340626905,\n-0.017471167385785937,   -0.008275394121097535,   -0.028210004270323916,\n0.00891852781562782,     -0.02391324881331518,    0.002749676894161398,\n0.008088335896085652,    -0.02604751334742576,    0.019249167328578152,\n-0.013513281040710137,   -0.008151265700877304,   0.021245311923809365,\n0.024847312733576543,    -0.022985983395684605,   -0.00020251081967242218,\n-0.031498434408120675,   0.010200198413938369,    -0.005013915559415668,\n0.010357397213959436,    -0.023126917214707925,   -0.03162795098456898,\n0.012034365602547812,    0.034584108653591294,    0.002640569784917065,\n0.03230923787933974,     -0.03002658788969224,    0.028855961301079796,\n-0.019849012798467767,   0.014768462142841308,    -0.03414701410886806,\n0.009451030849170879,    0.02244035710360849,     0.02117775811880294,\n-0.004225939899136341,   -0.011335338973686318,   -0.022374070478904773,\n0.02200045283014019,     0.022924901090890418,    -0.010539745369063094,\n0.009341610295897631,    0.020068516755532728,    0.007109170588358399,\n-0.025253702497308746,   0.024421106839279432,    -0.011486758116928524,\n0.024001135202710806,    0.015414050740861614,    -0.011056564894634358,\n0.02805262466271344,     -0.004171180211999375,   0.007233251015530382,\n-0.011577145944667196,   -0.034568660075970516,   0.002748352229965881,\n0.027914190340257033,    0.027309077451684045,    -0.010936904794780329,\n-0.0050025880046413885,  0.03322171553695697,     0.0013363704389190512,\n0.012721792518431679,    0.017998059450919826,    0.030550686035214315,\n-0.03179262535107854,    0.021986050426915853,    -0.006649380006625547,\n0.010094632612477426,    0.018508452059575076,    -0.03353857569532995,\n-0.00032820151824467355, -0.023028556418052147,   -0.0036243450345845862,\n0.008081302616022435,    0.017290661915996326,    -0.02524879934283477,\n-0.012880863843848669,   0.027987834876210267,    0.02690550040606539,\n-0.016822629075061886,   0.0010309999416591006,   0.007933601717787382,\n0.0022201576210626617,   -0.010678508979733,      -0.000886080318452363,\n-0.0031314307623920524,  0.020784139179761366,    0.02585687810603112,\n-0.028625164384281594,   -0.003897329437207997,   0.01970130325010447,\n0.017994250141086052,    0.011632270314749615,    -0.013807090444677561,\n-0.01458549734529022,    -0.010848247987631612,   -0.008199843430357552,\n0.01899684805328323,     0.019257520359616396,    -0.0011643180762529618,\n-0.0006446387315177818,  0.011638299129483378,    -0.0065014422401157125,\n-0.008880625145724708,   0.0019945617276256084,   0.005070373691551586,\n0.025260529935940378,    -0.02801593891035299,    -0.002953572613793666,\n-0.019649016593021585,   -0.005546397348780533,   -0.03522416270342517,\n-0.02827061532692217,    -0.027967832099324588,   0.03529427638143893,\n0.0008345574270781721,   0.018623024835223274,    0.02362449709725202,\n-0.027938422230578675,   0.025097124719018496,    0.011747654002602628,\n-0.015718666565766433,   -0.017082668042020004,   -0.033207260874965006,\n0.010347591474941931,    0.007744174084371891,    0.02730082744192844,\n-0.030377523420836532,   0.009309446271477189,    -0.0010964976604184717,\n-0.03018284699922026,    0.0008899216359721875,   0.008803465270224853,\n0.023066553246741568,    -0.016087319622199763,   -0.018098528636678424,\n0.018677953208472486,    -0.004031179438085912,   0.023645848179674123,\n0.006685667642221536,    0.006145335776881945,    -0.0038117320520486392,\n-0.0049544650600914265,  0.012566229403235016,    -0.014368966803481462,\n-0.031279935477138844,   -0.028283505167169216,   -0.03373462359132707,\n0.01815417330080873,     -0.00947489679911982,    -0.02805539493350684,\n-0.0008299386253917922,  0.005138330083040535,    -0.01136142050723413,\n-0.029636450073067103,   0.0061697052493602,      -0.025600007129855773,\n0.010662276289969597,    0.0041575546939559395,   0.024032991460051785,\n-0.03448267706787722,    0.0025956545761127397,   -0.019858216013342787,\n-0.020052836842374733,   0.00787551693946473,     0.01523907464106173,\n0.01572511921143126,     -0.0056800213950846026,  -0.01060550282324791,\n0.02256647882993965,     -0.013723589544757275,   0.006719550831656841,\n0.01677473082363803,     0.008733866899689809,    -0.021386625908872872,\n-0.0004970802581839018,  0.03180171383341424,     -0.01167021031337514,\n0.01998592317053287,     0.028128439399701284,    0.017089663851872428,\n0.01445596982485503,     0.026550245271316837,    -0.016652701570262874,\n-0.025028619972111595,   0.022171963627785198,    -0.028703831350817364,\n0.010165191479740383,    -0.024051363501814638,   -0.007003404050772226,\n-0.004247046435769365,   0.0036671933709576665,   -0.030298842037375737,\n-0.014495194628605473,   0.02101915585694203,     0.03250789035226336,\n-0.02734078206440398,    0.029506163845660228,    -0.0059402994457697445,\n0.007747512153909111,    0.025883426365174177,    0.017444644886989196,\n0.020973401882188634,    0.007424882959703687,    0.03287675651022936,\n0.019411683848817276,    0.018867412329566575,    0.027278143553449673,\n0.021386398761887238,    -0.016730274380678912,   -0.011667563235879093,\n0.021458059749956404,    -0.006539804729641424,   -0.018969194965136327,\n-0.016716906271934173,   0.028581005726112597,    0.011589911265634245,\n-0.030975430508400226,   0.010133323914323518,    -0.023958008126065987,\n-0.026518092244297384,   0.018135660364589554,    0.008577719341884322,\n0.034117210835898415,    -0.009065589938119201,   0.022794521499629808,\n0.017380151869564556,    -0.01141632556608523,    -0.018502158642334524,\n0.01804433133575501,     -0.013009102359294065,   -0.009792644113672842,\n0.0331164861114453,      -0.011731632766443574,   -0.03402911859201069,\n0.025458506427216587,    -0.01117071052498773,    0.03273943966863782,\n0.007063452387776527,    0.020211487892214948,    -0.02452106413344649,\n0.01298313292079712,     0.029819771333522108,    -0.011399142517147742,\n-0.03430865973536077,    -0.007482315206783972,   -0.025997317442517303,\n0.020482986024022605,    0.024669229868589174,    -0.015596219042491866,\n0.008253732561556188,    -0.003147119015812018,   0.013174030862673674,\n0.01675315024621136,     0.02183236370575312,     -0.02665517065465488,\n-0.035289654532853876,   0.004910713469122347,    -0.03305779640222036,\n-0.016376173694339802,   0.020415651357269256,    -0.020562619406447356,\n0.03153674316720812,     -0.03025838361786566,    0.03099577460097185,\n-0.028526719917899106,   -0.02638333005311152,    -0.026444295324074534,\n-0.005207996062442488,   0.009181824121449411,    -0.027025786196735402,\n-0.01930998404402987,    0.013045427840453743,    0.022437489690029254,\n0.0011219297843835874,   0.010192948093032053,    0.005318931793475906,\n-0.004725499758853272,   0.012375088220211192,    0.03118649710522962,\n0.01910760451928835,     -0.007458228907324314,   0.020497152705912552,\n0.028165900682318466,    0.00853859684960802,     -0.009868011145945701,\n-0.01772498660041983,    -0.0025667581396117372,  -0.027538025286546274,\n0.007461052151081829,    -0.01841870192188914,    0.033297072068450305,\n-0.03405269707694626,    -0.031864365047938804,   -0.020930824820523473,\n0.0018515798400579914,   0.03547250549452819,     0.014042510296381538,\n-0.008433014038393796,   -0.006989872842209104,   0.015964884034461058,\n0.01408483299351871,     -0.005731692832666089,   0.024450685826628363,\n0.016314568069102753,    0.020899576861748242,    -0.006871672230230497,\n0.006876437502872803,    0.02170633813938776,     0.02927826129322232,\n-0.010167861102731133,   -0.033111256697748295,   -0.018810495921184,\n-0.0010228838563137482,  -0.02259768008070682,    0.00356511058864088,\n0.00951459016238515,     -0.03459267995894091,    -0.010196293279230002,\n0.016543717620557268,    0.032179977796557034,    0.003271746998684456,\n-0.014949579386300156,   0.011655130695826337,    -0.02681034829620782,\n-0.02428246760012904,    -0.023512897636433723,   -0.022206114989732795,\n0.0346296249070154,      -0.013039744076069431,   0.02390541006539629,\n0.00559957141652231,     0.007063912892220493,    -0.019375704998887387,\n-0.032131672944651406,   -0.03383478253479895,    0.021419848952961743,\n-0.006684488154412661,   -0.023929836670053113,   -0.006963564388861278,\n0.028062962484398157,    -0.014991132301677573,   -0.019086447307026966,\n0.018101378478190384,    0.01137214398019253,     -0.034515801354119975,\n-0.0020195757252862235,  0.022789855512892872,    -0.002253047976840656,\n0.02880928883879292,     0.010836953700692209,    -0.033375977732605214,\n0.013343609802300625,    -0.02664802139305081,    0.01019565988692095,\n0.018334542486566043,    0.025760192162345992,    0.0059519582167159414,\n-0.026834529880920242,   -0.006826375150864927,   -0.011458070333831876,\n0.02238907857160196,     0.03407676209784277,     -0.0037596203858996325,\n0.012154020333156235,    0.016843517338729613,    0.02485237320254293,\n-0.015685985305579353,   0.004505558840591347,    0.012980765849528944,\n0.03173859716041136,     -0.016773380621489687,   0.025128702827146965,\n-0.015623353609665347,   0.022838248997970687,    -0.006951979874036681,\n0.012309812198731791,    0.008683811490545621,    0.020287539262279917,\n-0.017753168530659738,   0.034292129343955105,    -0.024475810967365626,\n-0.0007823077933538805,  0.0010375181925631788,   -0.00111191264121187,\n0.0003226148032454769,   -0.03189835753807454,    -0.025916381708692718,\n-0.00541145553610321,    0.009237833808650278,    0.010996903486904106,\n0.009491677602778033,    0.01619794494174057,     0.0313777072443363,\n-0.031888908224087555,   0.02315828245800364,     0.03163957383501392,\n-0.011234475819391163,   -0.03338597685441792,    0.004904224929136241,\n-0.01957268940031624,    0.010551052579169813,    0.03391329326116671,\n-0.007186956917078792,   0.003677358652016674,    0.026673027924924753,\n0.032612174093850345,    -0.027551970077236698,   -0.019627416915547542,\n-0.02260100560413842,    -0.02918302386869015,    0.00800956157680392,\n0.02336000467887588,     -0.02596337898743299,    -3.204381658572508e-05,\n-0.011339821095195157,   0.017206122118952036,    0.0222306386603822,\n-0.033352200478482814,   0.024024402258911375,    -0.009891131622758191,\n-0.03331956853685244,    -0.01234606339867596,    -0.02419715127390993,\n-0.03497940185892956,    -0.013026680443118006,   0.006285257562873061,\n-0.0004329190683691118,  0.01771498613368129,     -0.01207042290825026,\n-0.007979402691271882,   0.03350689366686128,     0.02662457374551439,\n0.010450318520993278,    0.02722724110051373,     -0.01617340721868901,\n0.03194036844163303,     0.024920625660725153,    -0.0062128945845245165,\n0.012595043094211047,    0.025349532292071857,    -0.03289184082232291,\n-0.009149097423191302,   0.015627268459330258,    -0.014766273419352065,\n-0.0180204331229841,     -0.004688771425266382,   -0.013445388916960779,\n0.033607169873196854,    -0.026709022766123865,   0.030161329583753622,\n0.0033168435201310076,   -0.03538788046365161,    0.009715489631648921,\n-0.006863715580893571,   0.03033883343464784,     -0.0034663352306655132,\n-0.006017507487772316,   0.035661383660419294,    0.009069639429776566,\n-0.019764143476182962,   -0.031077057251707688,   -0.002041031698534677,\n0.0058558833113597775,   0.006502424466512256,    -0.006888290093834856,\n-0.008247274123395312,   -0.01651344223421776,    -0.011720411842004397,\n-0.016670780395774232,   0.025737771081222847,    0.031177721537064183,\n-0.032474532334152824,   0.011674892928859806,    0.02614957375845707,\n0.027616722018606453,    0.01995369065260584,     -0.0038611913403703607,\n-0.006714883347233786,   -0.006055252813495694,   0.0018469260055997772,\n0.02040668576572743,     -0.027518917647592154,   -0.015094524348318117,\n0.0183561344761483,      0.0009853587478094647,   -0.02685523446128979,\n0.009330517791585636,    0.02977987518651138,     0.01002986790866447,\n0.00045260748465379496,  0.007060671638977001,    -0.02617088230444138,\n0.00036572333659878886,  0.023181478984966718,    -0.026610390769216563,\n0.01070732624393699,     0.01025578195835589,     -0.03218787675899016,\n-2.4341321590959364e-05, 0.01011414441320562,     -0.011101023987898306,\n-0.0222584345252002,     -0.011106214958518093,   0.0038233969375750837,\n0.02830360454718589,     0.017320181085138376,    0.02362455095627758,\n0.028954252004019788,    0.014706308050937238,    0.02156404893226177,\n-0.009061943976060725,   -0.026840716613529006,   -0.027076436250574296,\n-0.011386693225809597,   0.01789270872058553,     -0.02781898448490509,\n0.010518960192205091,    0.033971721879695105,    0.027511227886931618,\n-0.03565909416390398,    0.015322532330930687,    -0.012114451933182438,\n0.01691792436270513,     0.024761109411677116,    -0.02957248063006951,\n0.01861528011188325,     0.03237415950699746,     0.03205417516067171,\n0.0007357674420675157,   -0.01301444830871194,    0.030220538787935212,\n-0.00411703671643489,    -0.02173770415399361,    0.02658363264277795,\n-0.029881994482207287,   -0.032657642080222996,   0.002934438475161441,\n0.030879641183740907,    0.00306013918950458,     0.009969526475900261,\n0.024390632709262044,    -0.015028495472685024,   0.011267864380468624,\n0.032290354893356854,    -0.001785951364643807,   -0.017172383440786705,\n0.02221354328142794,     0.021348267816990767,    0.025600170116113395,\n-0.021251405862317472,   0.01785265250073857,     0.015710467935385188,\n0.010572648583859224,    -0.013789865242994819,   0.006632010615235281,\n0.01129464761040264,     0.006489939612791198,    -0.02101598141673287,\n0.000808031155260783,    -0.011136193431281296,   0.02655076911802063,\n0.02455312417414632,     0.014092485358404738,    -0.031518151208452354,\n0.009815099566211793,    0.020567277928932415,    -0.02126645437814985,\n0.014179536514381363,    0.012101064596722808,    -0.034913026373873945,\n-0.030737624382767264,   0.0026315170999026295,   -0.01865621168962264,\n0.006270411490118889,    0.027789925507859595,    -0.00815324680549469,\n-0.035178389260071406,   0.020957890384811297,    0.03538758624493691,\n-0.013077881188050913,   -0.020102449085595997,   -0.02732531638813246,\n-0.0015974119142467824,  -0.030181809706160377,   0.020740790389662492,\n-0.033071344493847105,   0.026991483124061036,    0.02664829727340493,\n0.006571548821646416,    -0.014455771140906808,   -0.030652287820375893,\n0.013577431874074024,    -0.028658524433268773,   -0.002462931410543125,\n5.0004673732435236e-05,  0.03350968558275657,     0.0024610154110050425,\n-0.006139081324655332,   -0.02803689262838992,    -0.01210398994531598,\n-0.010546633749871826,   -0.023156538582423968,   -0.022921575439265117,\n0.026811871655840112,    -0.015880776786589088,   0.019320649857094307,\n-0.021799206732548242,   0.020475323806893778,    -0.004692977420348791,\n-0.01647764274480474,    -0.016588073648616062,   0.024624199013360215,\n-0.015411449877454502,   0.02670030405759001,     -0.03512864827103107,\n-0.0064633951520347566,  0.017675461551421467,    0.007881733858681397,\n0.008246328108551209,    -0.015839477599802965,   0.02144817469514303,\n0.003647553129554456,    0.007833447756126433,    -0.025476263464525684,\n0.03558422078896777,     -0.014240998892205703,   -0.02386960488508262,\n-0.00710629828464098,    -0.0076426226077490845,  -0.008605688572762551,\n0.02304707115324015,     0.004231323253984485,    -0.0329495934972501,\n-0.032775038843857636,   -0.030526149498469955,   -0.01315913816522852,\n0.011311384262059465,    0.010836701580281478,    0.028897136692323844,\n-0.009974022071949862,   0.010626572375770789,    0.02824617112121621,\n-0.015392516321993992,   0.01158492042064091,     0.0073997002164737525,\n0.009764088153102668,    0.0060670808107423,      -0.01979776851599358,\n-0.01322642793304542,    -0.028057875705308082,   0.010201977039068466,\n0.021680710662444185,    -0.020971193677773763,   0.015448589945465559,\n-0.021021379823942223,   0.03566271028962994,     0.009984017411977686,\n0.011532393225200293,    0.012791976005943489,    -0.02002897599274014,\n-0.013053313128335622,   0.013699051711486117,    0.014618454731619775,\n-0.029905915008621164,   -0.006011096358165633,   -0.02902003251918282,\n0.02603276426449445,     0.0011635122625861924,   -0.03032418985186944,\n0.029598951365188364,    0.02829277836038014,     0.007878804864222908,\n-0.009449290590729464,   0.02590755332128542,     -0.025608940883196974,\n-0.004537437631734221,   0.006908070418651847,    0.029511229079091005,\n-0.018807360552780497,   0.014087368246250303,    -0.0069372096373051285,\n0.03157336026149834,     0.03367909215207972,     0.012989798594756106,\n-0.032054835389832254,   0.022134387789628063,    -0.021546221405049113,\n-0.01334093971266938,    0.0016826238224366844,   -0.033479470242752586,\n-0.023685937161848525,   0.010489768082089115,    0.03170513877194984,\n0.032541585827896326,    -0.009042829034877424,   -0.002267087247414098,\n-0.006326135391325744,   0.02158264973353539,     0.0005378597503740701,\n0.01682774390147214,     -0.020008549354939238,   -0.03332171077584072,\n0.03283214440389728,     -0.02385149804223525,    0.013624269261917668,\n0.004694171620269899,    0.03072483106491067,     -0.02402734739888023,\n-0.00036408517434773275, 0.019765073928068422,    -0.03374983551985996,\n0.015245745000497055,    -0.0005172863381785146,  -0.003385842844449546,\n-0.0021241551362323114,  -0.007800374848718428,   -0.013061836769372757,\n-0.011259424834861198,   -0.002339954537494225,   -0.030657460295818582,\n0.03490540663847519,     0.02840893353954581,     -0.018125998425037013,\n0.035498792908420666,    0.0049242190771569706,   0.002583071145252691,\n-0.01699388814459807,    0.0017163071624705015,   -0.02475718572688355,\n6.493186738896047e-05,   -0.017585959425612408,   0.03547677483263095,\n-0.029250630582317128,   -0.024038313746007976,   0.02674430171439509,\n0.03401629015667537,     0.011678215402330121,    -0.025063357225700054,\n-0.006431915622953246,   0.021091737602780315,    0.030740630428651224,\n0.019229655242046007,    -0.004597067143850331,   0.015729598900703665,\n0.03433129040410746,     -0.025271392810403803,   -0.028926349054697043,\n-0.0335985135531628,     0.03131059972251345,     0.013953475056725442,\n0.007453210595785829,    -0.0023980977866626912,  0.02743823079411778,\n-0.030581980165330456,   -0.02286608079922999,    -0.01938267493612243,\n-0.027601972053963354,   -0.03470337809808907,    0.03329767380198765,\n-0.01978737035676324,    -0.016615819942678554,   0.018054586916654958,\n0.02365424076047615,     -0.013112800372324096,   0.03506327553403356,\n0.01440871447711528,     0.030433927753072153,    -0.015530107719127622,\n0.025699295294577117,    0.021607138145807114,    -0.021436250096853373,\n-0.03233402445688616,    -0.022501376230162913,   0.027596569679314308,\n0.028042577584533997,    0.015973265701774344,    0.006814199363959502,\n-0.03393884351621454,    0.026801154390159874,    0.03097073756743185,\n0.009302430034555949,    -0.032338181225207575,   0.011719165973503911,\n0.011575276775988201,    0.032397409295728236,    0.026310057063136445,\n0.008033063157423699,    -0.014569807565863147,   0.018128165729778187,\n0.0036690586411158854,   0.03315673962487094,     0.028542744170017856,\n0.027441465324000547,    0.023486485022626655,    0.017977841752806565,\n-0.027283059990369854,   -0.014292869537824231,   -0.029787824178906977,\n0.015363278219199843,    -0.018502873670197928,   -0.033470858952124774,\n0.0019480841714147957,   -0.006956680737422679,   -0.01866211490818769,\n0.021169381978452837,    -0.035689521548543046,   0.0014925836666274512,\n0.03517832421887773,     0.0038185465649288597,   -0.022343239914248175,\n-0.022406000381557576,   -0.019583739455494718,   0.013985282923658113,\n0.0070027997371327234,   -0.029617368351935083,   0.012702578137831178,\n0.00544659625292006,     -0.014813293652902935,   0.013577610598500132,\n0.02056906624807606,     0.010152307391474562,    -0.012693293124038139,\n0.007551447026565294,    -0.00415042070037818,    -0.013394442515119087,\n-0.024147345230381277,   0.012233651751144246,    0.005316055806359188,\n-0.010562617721853374,   -0.017006449204024197,   0.013185513410811596,\n-0.023439122652087162,   -0.029213580769557553,   -0.0141333312853431,\n-0.02714256569788894,    0.009184917074154626,    -0.0031188962981944985,\n-0.024286871684918075,   -0.020307913663285704,   0.02259086044133219,\n-0.006504004754259781,   0.007007085750452081,    -0.002243153501874151,\n-0.032993285391240294,   -0.027528118802915114,   -0.03428532039866747,\n-0.013092976714472664,   -0.0267654297201643,     0.019241468508952277,\n-0.0246513307718655,     -0.02658230555854849,    0.02458282124752348,\n0.023131001695157867,    -0.003008282274840441,   0.0296935425642448,\n-0.03527560610147665,    0.0215285123181252,      -0.011823610225340817,\n0.029067144462406474,    -0.019094899773832892,   -0.03028267886427963,\n-0.008521443477353808,   0.022119906224937747,    0.024894175680541853,\n0.008607336368439014,    0.00013812187565492056,  -0.0001955123965960505,\n0.025985754442977856,    0.009890817370858791,    -0.013225138611111891,\n0.03390947373523915,     0.03368940646614078,     0.016077338721707104,\n0.0023978419067873153,   0.02124697539046072,     0.00761091993284968,\n-0.030885476295937818,   -0.03519024786606811,    0.029013963540157655,\n0.01908401705755891,     0.034277160539600345,    -0.03171670679077441,\n0.019529859985135598,    -0.01377765513156632,    -0.010511900100468359,\n0.0077520274845863735,   0.01612115704570807,     0.022138293251531185,\n-0.009469743330449754,   0.023824847877917863,    0.02505894166262804,\n0.005650939993620191,    0.027841807591939317,    0.02149585748484775,\n-0.004816807518871987,   0.0008989570326006938,   -0.0049352831986017665,\n0.016333411014052047,    0.022631635960068775,    -0.008724433079171676,\n0.0031897068732446255,   0.017649654322820608,    -0.03394091526481565,\n0.02824833860267777,     -0.03167619482808259,    -0.020804827456938266,\n0.02992806187821905,     0.0026710413236546676,   0.020660795079846608,\n-0.03472359974160524,    0.03493296080701141,     0.030219448639826618,\n-0.019475078753173714,   0.01331960519645426,     0.030242975117712383,\n0.00545006610155332,     0.014382624605204,       -0.022921388080743055,\n-0.0071228964170581945,  -0.02575378646690052,    -0.02605947524064617,\n0.013723917726027077,    -0.035431087344772745,   0.029345788887774026,\n0.029409298097718438,    -0.01386621695760533,    -0.02788267723251881,\n-0.02545638072061904,    -0.022322416524268297,   0.020768375903672292,\n-0.009148779165937489,   -0.009645353950906948,   -0.031331037630797254,\n0.023893543834470753,    0.013302247182700027,    1.0020490141458638e-05,\n-0.008090811265253024,   -0.008539097798924382,   0.01022620424715103,\n-0.015029175162996511,   -0.035585814776625264,   0.021971941534173405,\n0.02890619992949355,     -0.001076395554320613,   0.0036709329630506466,\n-0.009178793428142784,   -0.009189871218563754,   -0.00040590536532519075,\n0.0026540977458600385,   -0.022323836509732298,   -0.022326862472068696,\n0.01591226984226665,     0.00964353320909098,     -0.03367253168855531,\n-0.003549784062268365,   -0.013455356529426254,   -0.02531859253443351,\n0.023318821078671025,    0.026410114140437056,    0.03127621661108304,\n-0.0013812437141910003,  -0.012771044489020467,   -0.018044399869704842,\n0.021385035838945552,    -0.03437439914892923,    0.030306680396485562,\n0.02828480039663416,     0.013893743577076154,    0.01880772647959991,\n-0.018037486331237338,   -0.011431963071086538,   -0.002292387859777391,\n-0.03120524543185782,    0.03296055120005406,     -0.030911764462585454,\n-0.02257465835149964,    0.005033251920023455,    0.022340334947888996,\n0.011345759632355448,    0.0018363547640658743,   -0.013031176115169685,\n-0.009001905781637065,   -0.018427115790782694,   0.01588512361627772,\n-0.022995990777724983,   -0.020696472213419706,   0.0018058328523236236,\n0.00794169955776332,     0.023523119141208436,    0.029097137511985494,\n0.025969705879772993,    0.004018943395410757,    -0.0223408003014041,\n-0.017596826156233217,   0.01974937251076498,     0.028086535179368058,\n-0.0221721948829853,     0.014059017921925621,    0.009091445899370443,\n-0.02938649379959376,    -0.01908760882761429,    -0.00688394797125744,\n0.028707089062062097,    -0.03239449844076319,    0.013478791619194535,\n0.0047938883794980125,   0.004978246549305446,    -0.021915876170384586,\n0.024063701456996392,    -0.020817909813636768,   0.02849491982054103,\n-0.005139112337659433,   0.02109427115449676,     -0.009077944627065031,\n0.006033010894207784,    0.018620734867337205,    -0.010838666842522,\n0.013109834517120642,    -0.01782872367949024,    0.02548676442523772,\n0.016799797858948647,    -0.017774949037294763,   -0.009282461942572349,\n0.004535998626794641,    -0.0224157260092437,     0.0039133742605976475,\n0.005747631193134436,    -0.027335813707909003,   0.02057276764686691,\n-0.006710203823406463,   0.027322595183274748,    -0.013877109556035794,\n-0.02478629085856738,    -0.033565823840903904,   0.026827076115980904,\n-0.025146959944394514,   0.028939346504235186,    0.023444743603002954,\n0.01604294745407141,     -0.016569924939592726,   0.017626403842333094,\n0.03200958523358736,     0.017360216909682414,    -0.01366831704414434,\n0.0013060877332644208,   0.021092041930246996,    0.03221967777377549,\n-0.005175647022117702,   0.012762066279573539,    -0.029742753816335208,\n0.022433610332518995,    -0.0137871107229577,     -0.006984116256089206,\n-0.02175573500428124,    -0.028992722320122167,   0.02051403778218542,\n0.007458435533276147,    0.009431961835891503,    0.02555134805508686,\n-0.01837227885369687,    -0.005332680979460142,   -0.012978059602285905,\n0.03285960001415081,     -0.0022939142517698907,  0.034538284180537636,\n0.03060610436089535,     -0.02878447592270954,    0.03386134881513269,\n0.005564828775393461,    -0.02596278521179578,    -0.005358295965297625,\n0.004443678325659085,    -0.02953424733466484,    0.020592450844408677,\n0.026073581775187378,    0.02152879898188688,     -0.022713944842047463,\n0.0008345570617663119,   0.02818595926172333,     0.03408530840580292,\n-0.005174544770384346,   0.004080875318394152,    0.0233059825620676,\n-0.024394983440927474,   -0.029993140166026316,   0.0017718418636670625,\n-0.004421982986121659,   -0.013330481295387631,   -0.025814614939990564,\n-0.00562464003540597,    0.0286783793531864,      0.012404798911297936,\n0.010682914203319896,    0.022284893187610795,    -0.009521200241824599,\n0.00929243886346536,     0.021343659058574556,    -0.030120157699443546,\n0.0021914102135691354,   -0.03533902559940872,    0.02677671254543604,\n-0.0018443938666610205,  0.013953075297335256,    -0.028571250564789086,\n0.025610155457614428,    0.03276748891118184,     -0.026773169537394725,\n-0.03452182897161488,    0.019078250322632908,    0.032118396673408434,\n0.031116518937504507,    0.020543043489733417,    -0.03443727264204427,\n0.023560878941371963,    0.029932059369682358,    -0.01789290136249029,\n0.003465087564810533,    0.034739622471827214,    0.0027510745291111794,\n-0.01420274241249931,    0.021728212670583415,    -0.0038077261781773648,\n-0.02213292001220445,    0.007925129133085533,    -0.002347543401422823,\n0.012732910026927509,    -0.0022314134961702553,  -0.032058351453222673,\n-0.025888706334987386,   0.0029677322706592813,   -0.030796794369076355,\n-0.015332528178540883,   0.025621657671544083,    0.02024809891401986,\n0.017049838705869267,    -0.012687156966745865,   -0.03200939876614577,\n-0.006897758768800285,   -0.00749927550742505,    0.0037816663829985148,\n0.029550955925063134,    0.021855759825674868,    -0.03415732582647734,\n-0.024339518226088295,   0.02096435876963085,     -0.019103057016553484,\n0.011854806359237618,    -0.005293760861209148,   0.008386273387791425,\n-0.017464095662833634,   0.028359945006078267,    0.034099312942065266,\n0.03222464174495824,     -0.021349781667731296,   0.01753761174918386,\n0.016229245257436804,    -0.02141173970856174,    0.03184396702117837,\n-0.022383040915316246,   -0.008218693520487754,   0.02822890192003372,\n0.003370955677409605,    -0.034394650949891116,   -0.024829221042263164,\n-0.014928315950208064,   -0.02314412565382921,    -0.017732790816450333,\n0.029893475468089084,    0.0330474319863885,      -0.034075552164133056,\n0.0010941930748781961,   -0.022357915903211685,   -0.012186505666661874,\n-0.029646289671921747,   0.02402310517689198,     -0.02706965169094708,\n-0.014879572424079255,   0.027020571696613416,    -0.010344678376493974,\n-0.033295446110649635,   -0.01712960690158231,    -0.01860282093164961,\n0.020768185447545797,    0.010254586090976014,    -0.007633186737611383,\n0.025094799406509976,    0.03165078243500733,     -0.016037892827548472,\n0.018386442295088724,    0.0023926581010024284,   0.02544597926404406,\n-0.009354345961295292,   -0.01718319519863655,    -0.02717317425810899,\n0.026666106871434683,    0.03417675447198715,     0.00796548894229864,\n0.019455798532322884,    -0.004171582721410303,   -0.0016665026318044957,\n-0.022648610815263138,   0.027741913703624832,    -0.016351892732016527,\n-0.025871086571961775,   -0.03054628702895666,    -0.011673050944117762,\n0.00809864954424061,     0.00046674811518768574,  -0.0034147162813361054,\n0.033406706567305273,    0.001990922340727238,    0.01708910302243748,\n0.006371344525824376,    -0.027594052875611848,   -0.0008164944694160942,\n-0.016252971858373145,   0.03125450879077279,     0.03510859879162601,\n-0.012148350505524905,   -0.0010828390141582956,  0.009174269051282038,\n-0.02974376499987632,    -0.008950551686449211,   0.0023254053322336954,\n-0.026644906180135833,   -0.016508306793897927,   -0.026251294872558704,\n0.012036167927737651,    -0.017446303770728627,   0.025497082435077936,\n0.004639797537446183,    0.003381119274445708,    -0.011226652933641834,\n0.033702220207276735,    0.023282105602762802,    0.011705877524776514,\n-0.007255802112835782,   0.028795590754750022,    -0.025951736817991542,\n-0.018087047103570467,   -0.022285063229088367,   -0.02752318098909335,\n-0.02693336527012039,    0.0329026319895827,      0.0273030043440201,\n-0.008792814119568813,   -0.030583676044977786,   -0.0009614991665800518,\n0.028540302910074873,    -0.0008990517240421277,  -0.0013267578505742736,\n-0.011443769963012756,   -0.02710486151655185,    -0.007276448281731351,\n-0.022437039445056418,   0.014344411365243328,    -0.02956374638389888,\n0.01770808152060235,     0.014855171939791474,    0.023967903939759137,\n-0.005239669599792035,   -0.02530066082173029,    -0.03325590386349476,\n0.0054436741705809555,   -0.0333337404937086,     -0.01823400536588554,\n0.009378211580063982,    0.009379245101713634,    -0.027577871469917786,\n0.014113844359078316,    0.004826513896608978,    -0.02137505306566564,\n-0.010572800016081707,   0.024941593874343707,    -0.006289773542491003,\n0.002800154390128587,    0.001552834215514839,    0.02987317171182018,\n-0.021113854670015926,   -0.006793943031924122,   -0.035222816205513756,\n0.03355956020992886,     0.012865129236061717,    -0.005928787641329171,\n0.0072199841362949714,   -0.034443504920452915,   0.03410024505400164,\n-0.021120606853444666,   -0.03231299438236728,    -0.025461131396678095,\n-0.023022031557792103,   -0.016145437986199798,   0.007581814032207296,\n0.0014454327609381304,   -0.009638144129513122,   0.03449792966011699,\n-0.01887250807502816,    -0.01932630506864054,    0.007063134639040403,\n0.025602433927373276,    -0.02421002294969095,    0.018757768075764774,\n-0.027040687295920796,   0.02043859196245106,     0.001380270132023734,\n-0.031962233619331766,   0.02326024380627798,     0.005703043257109384,\n-0.01633653097613821,    0.009175329834032178,    0.025911645637371104,\n0.0029121506386437274,   0.024517308851857107,    0.009506096854819235,\n-0.003991027379437906,   0.01676201370670595,     0.018426265024567536,\n-0.022752078555520146,   0.032936324888036654,    -0.02993275017698388,\n-0.03230742146101454,    0.005148225476170902,    -0.029430786664358957,\n-0.029241442032483758,   -0.006890195462932156,   -0.00958603803217655,\n-0.02772308513177687,    0.014320994809068604,    0.02185119028100001,\n-0.010599553575794039,   -0.0181198012049205,     0.014973656917089358,\n-0.005708309766110935,   -0.007217841192481683,   0.002875771723340811,\n-0.017623448875572035,   -0.02467691714525382,    -0.006228106307943039,\n-0.028439239664790377,   -0.021520175885802118,   0.023604958181673675,\n0.0056007115453593805,   -0.0036569185473475808,  0.004655792933605304,\n-0.027487475874329828,   -0.0010581759470937471,  -0.0012385805440248618,\n-0.02731934084206456,    -0.001762242278053835,   0.012227492588348803,\n-0.021207858842967147,   -0.03493106527488443,    0.0205867348201752,\n0.022608199692503637,    -0.0002739438067217833,  0.0024114276887151538,\n-0.018702402795784952,   -0.009998206539515695,   0.01903302075464407,\n-0.024925521338199155,   0.017140819757727997,    -0.03409791290421689,\n0.00896613508615135,     -0.007337450919138613,   -0.005163416261458244,\n-0.014141173373201277,   0.03540348049638767,     0.011135656049823726,\n-0.014623599396855376,   0.03370538290057512,     0.014835874598879733,\n0.02173368232998894,     -0.0020670680917791923,  0.02215788987290969,\n0.03214255027518196,     0.014423367264017002,    0.010269608808373916,\n-0.029117183375094984,   0.014943698539378634,    -0.029004218021305046,\n0.004819071316395204,    -0.006136453340268466,   0.008992440778102755,\n0.03251247815182718,     0.013588785264189805,    -0.028592475537141764,\n-0.012473691579504263,   -0.0008913483074532752,  -0.028870998725462636,\n0.00036764810286111463,  0.02288021655588953,     0.02626887748733551,\n0.0014205679585171144,   -0.0052967864163981915,  0.005942396791465584,\n0.032541195419370554,    0.030258982187365682,    -0.009796264420149359,\n-0.0014356476621227138,  0.018486646437717857,    0.02839604529314628,\n-0.018685591157228905,   -0.005048827461412521,   0.008129997497650976,\n-0.035529137587930644,   0.0069243324089543635,   -0.004370176073118475,\n-0.0346414584549177,     -0.005469944024274214,   0.009505354953208969,\n0.02230871806105308,     -0.004410214106479127,   -0.000914405761728235,\n0.002062727651032008,    -0.0043141137087512405,  -0.019892302362801862,\n-0.016945988461321972,   0.030964110778827214,    0.0288775446441098,\n-0.021530298584477026,   -0.03448577517324774,    -0.008030394077936185,\n0.03105486111803813,     -0.004069665823789512,   -0.022502405387016183,\n0.029009623632431914,    -0.012394914477676813,   0.0024112016662701397,\n-0.011446854310787924,   -0.02198841125824316,    0.021975047179733927,\n0.0006937789243220574,   0.009255116624279136,    -0.019789851429838523,\n-0.019327177811987235,   0.0356783703795067,      -0.004197490222892397,\n0.0016012554706532067,   -0.0045762154233303255,  0.005000882820314395,\n-0.03305376056259802,    0.02974158724232483,     -0.029998732019885153,\n0.01671122809699908,     0.029173384590016994,    0.02888131389772196,\n0.031245603991906668,    0.008397422332461648,    -0.01747070746106516,\n0.027946379496170362,    0.024583021108256456,    -0.023253922009097774,\n0.0015151174287804262,   0.003070008095188481,    0.01722385445094121,\n0.014978020786276976,    0.03486931402880811,     0.003998615894150871,\n-0.018152746356100573,   -0.0012092842024262354,  -0.011937350008741885,\n0.004864854551918112,    -0.014476707402462334,   0.0062008761339965735,\n0.005830101611705654,    -0.03405130247108809,    -0.021299965129806944,\n-0.014163573070088356,   -0.03170632608309934,    0.03313295497037882,\n-0.022210434401472592,   -0.03463699425079362,    0.005246240191732373,\n0.03417414542191998,     0.016001002525987643,    -0.012227749157659474,\n-0.0007198075271099518,  -0.026783820218925954,   0.0030210148431389834,\n0.0034572500679557194,   0.024576358279484192,    0.00532661178841265,\n-0.028449357332240455,   -0.030852985163883198,   0.017186909105476798,\n-0.022197696192460876,   -0.0014449437289489012,  -0.01208318149905742,\n0.013056183791912304,    0.028884047754742164,    0.023138982847715095,\n-0.014505371411603723,   0.023372827879810217,    -0.033667049051986225,\n-0.02175324260923485,    -0.02575001873414042,    0.03343700359059642,\n0.005462552603264226,    0.0031740484442646655,   -0.009261928582152412,\n0.007424520998031972,    0.012818639239416585,    0.0275950685819127,\n0.02616351111129332,     0.017066430196435983,    0.0076978474543255805,\n0.029386146316802354,    0.01482052631666364,     -0.01846201563684804,\n-0.016295382836816117,   -0.012293577054357272,   0.03128763645081362,\n0.015432916935377017,    0.016702623197305935,    0.014007693169820439,\n-0.009952963801817871,   0.02495766291890138,     0.02460213690258071,\n0.012834632121080785,    0.03148328041505506,     -0.008282226690169639,\n0.030184704575351225,    0.017387241612007505,    -0.03170364742736983,\n-0.027077922229325202,   0.026256046370292874,    0.03168884120287383,\n0.014672270761119433,    -0.012843029848113712,   -0.009471596141161363,\n0.007170817313323086,    0.0026121656662643766,   -0.019861201308529863,\n-0.031073223719914285,   0.03037449165383861,     0.017622544955518498,\n0.028306422150404676,    -0.02846449051015272,    -0.008817452525907488,\n-0.0027184124269388843,  -0.009144898885062805,   -0.023793268141530113,\n-0.03555498584676615,    -0.03127510300627811,    0.016886320932591483,\n0.03499373571517538,     0.03418014799238659,     0.01637171373134946,\n0.028384013322413033,    -0.01668353464803192,    -0.02875465967522049,\n0.022217743965075722,    0.017453774379477458,    -0.009365980849803801,\n-0.014684956183496727,   -0.01401713381776579,    0.03252005628253867,\n0.0068892176734820345,   -0.03247664355742221,    -0.027305291779273842,\n-0.030623796118246914,   0.03082406699049467,     -0.005892052007297255,\n-0.0331027414317907,     -0.0011401721399295706,  -0.0012857648870186397,\n-0.00020568911638640147, 0.023659701411394656,    0.034874492518680356,\n0.0011978629756926873,   -0.005778846299423006,   0.005429578677469238,\n-0.029678341097448633,   -0.033011276777893395,   -0.020766692168562164,\n0.02621842298036594,     -0.008554765217813176,   0.014700180732385087,\n0.021086902211726027,    0.030111588705785872,    0.031350700508027324,\n-0.007685708050597373,   -0.013609430952483244,   0.03495034270331992,\n-0.014434991959179053,   0.019209685261050855,    -0.003994023530412592,\n-0.02858155712849804,    -0.0052701212732643,     -0.02656574999751486,\n-0.025575770658644317,   0.010307211688991846,    -0.01723314467410264,\n-0.01607772937719293,    -0.02173040564796073,    -0.032530510265003844,\n-0.004355173946429377,   0.019149437487100223,    -0.01699309357189498,\n0.009983907748204972,    0.006947885246026416,    0.008769782343220463,\n-0.014228453968975865,   0.028419417916043053,    0.026500335220018892,\n-0.025560615405860607,   0.0323552239826567,      -0.012517345822395378,\n0.009894642223490076,    -0.004124631543678647,   0.021638592752191224,\n-0.014861638626894791,   0.007465509795946583,    -0.02627972414975276,\n0.008912677878058701,    0.005130815175189635,    0.02671535035854667,\n0.032902127349263136,    -0.004233622931091799,   0.0006720538004522816,\n-0.006669569310062041,   0.029569105393535702,    -0.026687290149365637,\n0.02975550768894585,     0.002901633500778647,    0.002968476072410131,\n0.0036809549967102046,   -0.018029229725800358,   0.019616140680741714,\n0.029569825277273483,    -0.00702471624379405,    0.013736703944178426,\n-0.0054359201082607245,  -0.029767833354094574,   0.01669693358444596,\n0.014990619528934213,    -0.031465437225669114,   0.006396633968174914,\n0.023824679141277297,    -0.021026632775815304,   -0.016788168425164958,\n0.01024593192612214,     0.0004366062220579733,   -0.024639905046639477,\n-0.016159868218827634,   -0.014996436148480785,   0.0024592643108390455,\n0.030406451443222394,    0.027976415916519226,    0.03155174473270412,\n-0.014808572104741544,   0.022075541797308907,    0.01876682337039195,\n0.019764128024385087,    0.031056243518872102,    -0.01993967879555329,\n0.031108351456665913,    -0.008262651796656568,   -0.0050689253066076535,\n0.030243840551052746,    -0.014714649412312548,   0.011229653873542711,\n0.022406119471279518,    -0.013049437166790181,   0.011793170822840498,\n-0.022432227248419825,   0.012400119859099779,    0.009470695835642496,\n0.03356768345338146,     -0.003611916836418895,   -0.01620931248382229,\n0.018343328647893658,    0.010786391493232928,    0.0032865917984546567,\n-0.030049954707205853,   -0.0005823846668539602,  -0.02588568021900446,\n-0.0008487087815330997,  -0.0012861139641277394,  0.020975299616852627,\n-0.0029319122666343145,  0.015904660185459163,    -0.008380493815519426,\n0.008657140828810448,    0.008647467928972459,    -0.020926395271115575,\n-0.032454890043967434,   -0.01287348607049452,    0.024989072839831965,\n-0.012880669207708828,   -0.027661321173712457,   0.010311809887801504,\n0.018315278700561623,    -0.031728381822622956,   0.017427116789114752,\n0.021927246197987162,    0.03148132298084,        -0.007964184243302863,\n-0.019115751168614088,   0.011894730574048828,    0.012378551824542243,\n-0.01751766299626851,    0.010400664823792736,    0.031418523715132055,\n0.010840400608219907,    -0.03473075266636985,    -0.0054732601221181365,\n-0.0023342104710291395,  0.010605291706601063,    0.02932302821960287,\n0.0009625862011757698,   0.002086520589781109,    0.016164342298670212,\n0.01350682304446053,     0.016661046085759246,    -0.025004385221019332,\n0.01762804199404827,     -0.00780417637385001,    0.021336479091273855,\n0.032120476642625455,    0.02928139798922867,     0.030542664448994217,\n-0.012804439929130123,   -0.022632494231993903,   0.02351921934291999,\n-0.019430402952089126,   0.004155743020430972,    -0.01302185362085851,\n-0.010716200782007175,   -0.020765584177032517,   0.006083939516386369,\n-0.01516396970867227,    0.03495594750496867,     0.0024066130822707,\n-0.026602203929699846,   0.030099584077620787,    -0.0008561470289037658,\n-0.027727798297988847,   0.03467009323322449,     0.024796980072490853,\n-0.022555136031970575,   0.008973290885103147,    -0.022498167137498484,\n-0.03273177587401969,    0.007995551716594725,    0.035627014000135425,\n0.003686560999642477,    0.017707853672486902,    0.010142647005047585,\n-0.01914085277877361,    -0.006557359844263572,   -0.017559134038378443,\n-0.015791564579420936,   0.0018111586517131706,   -0.0023284199403006806,\n-0.033985336594224265,   -0.015669741664415298,   0.006450937597244886,\n0.0004159768128040546,   -0.000791526784806413,   0.005408202194893075,\n0.03372695517958059,     0.0011097823787116845,   0.03510547793600243,\n0.0007618996952552922,   0.03359845288846639,     0.0006645080117263026,\n-0.03530145356202746,    -0.014499685798794293,   0.00910894716191365,\n-0.017347478791542952,   0.03424121137214543,     -0.006046101233736612,\n0.018593010208700547,    0.005990637925064514,    -0.014170462591611904,\n-0.029179966258130328,   0.029246831136398675,    0.023578671756479857,\n0.02478402806495745,     -0.0027652923941563173,  0.0007246014730603362,\n-0.007756356896573502,   -0.011315254142426574,   -0.02741158392826909,\n0.014869565490603427,    0.01567632252449347,     -0.0004587138967470729,\n-0.03082889570874391,    -0.0029464705083917598,  0.03493397629255014,\n-0.00034464540603267626, 0.019432292892644545,    -0.018881603338814026,\n0.016541277376508137,    0.024360249261360337,    -0.015415433388365436,\n0.024445502189425792,    0.029778170387477883,    -0.022075543125496134,\n0.022444784301273984,    0.02091545070012112,     -0.01823429180036191,\n-0.00908958229150555,    0.006335919305714881,    -0.009744505327004802,\n-0.03132265865120959,    0.027957835091344075,    -0.009332929239555017,\n0.018813099500787436,    -0.005732951545954672,   -0.01982739109993883,\n0.012421323099601953,    0.014333740446036858,    0.02533326365028145,\n-0.009220262358491152,   0.010895388358242719,    0.021396471898356004,\n-0.021895106759614653,   -0.028326195784249424,   0.0053104533745859895,\n0.004665664460755463,    -0.02827456957993738,    -0.0034834339696585477,\n-0.031191244182346232,   0.00031691579201951835,  -0.03143788116295531,\n0.011323683441974453,    -0.01976666670204847,    0.003218257344448567,\n0.011503213794874035,    0.02275318086757678,     -0.008947015907128335,\n0.022575047111303155,    -0.00430333738492476,    -0.01847015490402766,\n0.02428437829440762,     0.020368765283040092,    -0.006687695504042681,\n-0.009427974560697359,   0.02850828903655319,     -0.0048536135896441535,\n0.013433573470174225,    -0.007105771684749415,   -0.013004049231259163,\n0.018595775121179523,    -0.018421091757545017,   -0.03461888033004051,\n-0.027299236417011413,   0.009010400831468724,    0.008387429830328133,\n0.009380715896274665,    -0.017349107845795582,   -0.005042000448673375,\n0.004337099811291489,    -0.034552435933681964,   8.28307411581765e-05,\n-0.006810873766728826,   -0.025674528016595744,   -0.033627646003496436,\n-0.012304365368881376,   0.03130774521223642,     -0.013786913324624608,\n0.00784721707203572,     -0.013345070125447944,   0.006998048173611635,\n-0.008559379436129657,   0.025885251011188982,    0.0047786589341834275,\n0.014763184772021177,    -0.0188709162989282,     0.018730836459713112,\n0.010289718502386436,    -0.013845714733590562,   0.004932243810406506,\n-0.006772779733448855,   -0.01779618132615395,    -0.005887111451626522,\n0.008903683098040254,    -0.02100532505376149,    0.019360382950027788,\n-0.0024744783730499503,  -0.0298926491000416,     -0.018072632680262133,\n0.028783093613935162,    -0.021587968347951354,   0.016847667152563885,\n-0.018720029829316667,   -0.015503475685069473,   0.02079686859638913,\n-0.018374946728950108,   0.010554385358863137,    0.011918806634674466,\n0.016861444148078678,    -0.03160572775170345,    0.018242676293395717,\n-0.010085946257003176,   0.022823061629649182,    -0.007922250849476222,\n-0.01813305741481265,    -0.0011008544349473085,  0.024424842148774675,\n0.014710963939932866,    -0.02574295371169566,    0.01633756782100113,\n-0.026743283760468067,   -0.014037572663188398,   0.00986972804415988,\n0.006402055616011315,    0.007912048351259906,    0.02876741244422464,\n0.02565525443643025,     0.023675289397488315,    -0.02489012432223736,\n-0.01899831618313066,    0.0019959694235201736,   -0.012893942511122048,\n0.005641698296372748,    -0.019886332367013218,   0.009181866450008203,\n0.032161258159466466,    0.000835979722676334,    0.002155834321556717,\n-0.011154616001576039,   0.035625989912561336,    -0.0016336908988237506,\n0.022177283804784603,    0.009512952588502368,    -0.011008804963507852,\n-0.015613000522479943,   0.028997818253020405,    0.029199880847210945,\n0.03029844694572925,     -0.02343348705874121,    0.012422819965898271,\n-0.03478739913778877,    0.001956746184892999,    0.019976436442240127,\n0.03293239347316306,     0.023118316686613783,    0.022350892683488242,\n0.006470607503527942,    0.010065197929874987,    -0.021938104680333286,\n-0.008751712151138498,   -0.005244846882408988,   0.018822504181016497,\n0.00019856031396017372,  -0.005132563593445438,   -0.026163649390020263,\n-0.020507375926608385,   -0.019214788632187063,   0.025417423511889737,\n-0.004404532691734028,   -0.015373703379369346,   0.03315169340842908,\n0.033801339442457896,    0.02547316742282353,     -0.02411830773444351,\n0.03229554464835232,     -0.0026064947180205384,  0.020055877642878875,\n0.008006379086803002,    -0.00225515074397362,    -0.02503063072478622,\n0.015240208467976721,    0.005688741404118307,    -0.02964591486343217,\n0.033148093045356715,    -0.022433896932392415,   0.011129178764240069,\n-0.024463355288331726,   -0.02840131495515306,    -0.014886147302545774,\n-0.0016444449215110568,  0.0017958458163458027,   -0.0034601952498482125,\n-0.029303875463156603,   0.010376224009962179,    -0.029676650786059567,\n0.01773696749345163,     0.0027540028091051095,   0.013031315215597963,\n0.008835312812101164,    0.02187375659086464,     0.033648814156884636,\n0.011748941919171465,    0.020828477325155137,    0.015774264346984725,\n-0.0021713139822434136,  0.002631865315228925,    0.016671074191541502,\n-0.01815199609285315,    0.011728826735975455,    0.034686694200905484,\n0.012201687387498748,    0.010749071237506902,    0.015025278539787301,\n-0.005781343619054119,   -0.014475326925199324,   0.004490204313628771,\n-0.023032684370970564,   -0.003875373405813969,   -0.03123756926503195,\n-0.02611142379276317,    0.018965307592332455,    0.028392537879619206,\n-0.013122437018104576,   -0.011961346245702354,   -0.03305429861939419,\n-0.03089417480937051,    -0.03411549279881976,    -0.01073798844855991,\n0.02585523086303755,     -0.010095924382526622,   0.006768197428298388,\n0.01949210493501843,     -0.013953407676623793,   0.005316385326403137,\n0.030862500603274976,    -0.022268302796470605,   0.009445157134507418,\n-0.016542482379988777,   -0.007233153227033812,   0.012892410600468989,\n-0.008476085117806342,   -0.022597364694465126,   0.03246847341302036,\n0.008903270759747934,    0.023084072468955313,    0.01817636626862543,\n0.004943876035202854,    -0.014010227427906228,   -0.014580126203031918,\n0.015522868120506421,    -0.022267026423351384,   -0.004336630203547155,\n0.02631865171091892,     -0.012547631775414958,   -0.014643642368686205,\n0.02762747920511602,     0.03334501188143588,     -0.031089053535699216,\n0.023025932542702028,    -0.002491823439415357,   -0.014056986411846462,\n-0.02351876502164001,    -0.034847210204475336,   0.03504989643229094,\n-0.03357209833539702,    0.022750995028124364,    -0.028571976141114577,\n0.032513248833677004,    0.03504964384815557,     -0.035695243844586326,\n-0.034441755162992874,   -0.008408770166658228,   0.010813977500474936,\n-0.023428746884287626,   -0.02740537578600894,    -0.035713023783289506,\n0.016057460804083226,    0.017283674001832908,    0.0343682605026771,\n0.008802101436245697,    -0.011748250667969234,   0.029834778910859748,\n0.00876535517247071,     -0.00894878405074407,    -0.009536731548984751,\n-0.005647762780023332,   0.016531792620468357,    -0.010407854344071004,\n-0.020271551855068584,   -0.02564676871692299,    -0.000881402976415083,\n0.010674090153394076,    -0.011847518203857146,   0.01570882001010775,\n-0.002615731047920265,   -0.016673781857571637,   -0.015139058899020999,\n0.006850221277655745,    -0.02749141046081517,    -0.02717552621089329,\n-0.01329192922181438,    0.0337132969550042,      -0.0053691700520342445,\n-0.002338838495746057,   0.0303841029391158,      -0.02566809511698884,\n-0.0023973066230512175,  -0.02717538343113335,    0.005030700322510382,\n0.035582599248371774,    -0.02229973341306239,    -0.0021496634201811993,\n-0.01787140982757787,    0.015941085840398606,    -0.008541929120962457,\n0.021962480291914013,    0.01527243367930503,     0.0261086192359655,\n-0.0021080218777069304,  -0.015360225493332443,   0.027152836078619267,\n-0.005089566994017636,   0.016625310228095592,    -0.010281355113404103,\n0.000795009345985658,    0.02281078453329067,     0.007707057284798226,\n0.006843977527846299,    0.026687216101662026,    0.0020418845848011774,\n-0.010691718251913007,   0.032248596531577606,    0.027726111924809105,\n0.026776687096477847,    0.02482053697634924,     -0.0073901752375933084,\n0.0054159106423406645,   -0.033419290617419786,   -0.026214653259395426,\n0.01829243142894713,     -0.0070136913939245395,  0.017084687763221685,\n-0.023737577862999504,   -0.021151584307380723,   -0.004948665186948221,\n-0.0035736681475198274,  -0.005245208279838954,   -0.006255995812731927,\n-0.0316570832077173,     0.03330425112565947,     -0.004892496422760176,\n-0.02608404241007976,    0.03190111149101905,     0.01236907775028779,\n0.017423126840559466,    0.02164102519016273,     -0.001589071588151382,\n-0.02347771133402297,    0.03436838540172462,     -0.013117629062121335,\n-0.012236283365402039,   -0.023509541387433264,   -0.031583087285262344,\n-0.019210948068734555,   -0.03149796574209981,    0.016776000403098956,\n0.031053110465239547,    0.019162124311562348,    -0.010841052929410067,\n0.016245987177775208,    -0.02336862551796701,    0.03090784763496729,\n0.028912791217640628,    0.027387982894164758,    0.01621384906348985,\n0.01095078678949377,     0.033084589343225106,    0.005783688727096875,\n-0.018883072316086203,   0.026477868861306198,    -0.003097183946680475,\n-0.033908268558325204,   0.005966698244845683,    -0.017250049161826778,\n0.03279766770091799,     0.030094660353303514,    0.00571973607095735,\n-0.0063782559365638015,  0.029437969752504907,    0.02062864776775838,\n-0.0233466689037377,     0.021197255290561934,    -0.03361749586442571,\n0.03411448647766522,     0.021337791898992986,    -0.010688181400847008,\n-0.008559153742634011,   -0.014926690066199693,   -0.0031436680240375615,\n0.012588657143382245,    -0.033169218023503935,   -0.009725179137816993,\n0.030580566022537708,    0.026059493718155365,    0.02820314984730976,\n0.016499976899905604,    0.022750526012459096,    -0.00045519160765244185,\n0.026873598944737905,    0.021676904402804096,    0.028227188381291186,\n-0.024974710639436314,   -0.011160843951906101,   0.03174846908639418,\n0.0011425568803394293,   0.02770040525218382,     -0.01611967808806164,\n-0.0006454449675172914,  0.00048569776273400215,  0.026822313387077457,\n-0.030927265468720565,   -0.030734990861490744,   -0.026718069651820418,\n-0.012288267684904881,   0.001889627422323538,    -0.02232956150170752,\n-0.014987326233545222,   -0.02286241968494761,    0.024430370929082304,\n-0.02139786846467473,    0.002637676527026416,    0.001945661163700144,\n0.03495665977490672,     0.008838109805741694,    0.030837907512582894,\n-0.020686770325662913,   0.028054491135258708,    0.024754583958562122,\n-0.0027304051385791234,  0.008924953327503276,    0.026938398986929988,\n0.007562526996019272,    -0.012044969006569444,   0.02825998693105526,\n-0.02653577684985491,    0.004890063579127809,    -0.01576313091516829,\n0.007506325482530218,    -0.035554358031380386,   -0.0006286044123878311,\n0.0183448209327394,      0.014153479975695318,    0.02411545892152631,\n-0.019703581657174632,   0.002341781217602447,    0.030270741515540996,\n-0.02251932924272345,    -0.0005604866530342248,  -0.016492097669096355,\n0.022465827036901077,    -0.001523260781555648,   -0.007272419438051577,\n0.02246280510106137,     0.02269982263612269,     -0.012506747538187415,\n-0.030874104630597712,   0.004941848634624927,    -0.007670299664701642,\n-0.027728742103273196,   0.008319776359069917,    -0.021529713567120926,\n0.026214910921554518,    -0.02545787456433622,    0.03130115808787142,\n0.030181956124089485,    -0.007468596383103384,   -0.02664941632822464,\n-0.03392154553755473,    -0.002211750696285066,   0.01203152961815092,\n0.028275655941042144,    0.03543420563936187,     0.03451336989505694,\n-0.012832543381213597,   0.015343663805873724,    0.03292056011276247,\n0.010897694089818031,    0.026007385603330917,    -0.014289948882119357,\n0.004321003393683187,    -0.004523427023690367,   0.009512986578939016,\n-0.0035246145016806702,  0.02978392848535497,     0.007618747604230092,\n0.022458332141826756,    0.019004888926790673,    -0.022708338456870956,\n0.021107428155312278,    -0.009714357333867852,   -0.02260829103128868,\n0.029671916063023517,    0.005529876563664556,    -1.874782433043874e-05,\n0.004195083411544945,    -0.03369947077992399,    0.0178883584516116,\n-0.019967523247785904,   -0.026179764282970253,   -0.022144096636443796,\n0.002896899418120705,    -0.022827572506887786,   0.028878748361070752,\n0.01617355973136731,     -0.0021405109470639355,  -0.00030998770988769985,\n0.02837728288476051,     0.0067199624985384955,   -0.02115440603357411,\n0.016002579736005496,    0.01982343957746658,     0.02491870178636788,\n0.0012694715079325672,   0.014984554137696606,    -0.010578486843090555,\n-0.009953145157924321,   -0.016544245449628354,   0.031766010987187,\n-0.0067592874200434385,  -0.01951709841463918,    -0.01794436874969699,\n0.03251124095051745,     0.021291045691027886,    0.016489636242981862,\n-0.017106999928096767,   0.03259144084444162,     -0.009163932398968462,\n-0.021702990603192165,   0.029697205284879718,    0.011944701376459848,\n0.007893339530730792,    -0.001364733885792914,   -0.014562131956083618,\n-0.027820123817434046,   0.011592391738386172,    0.01710028555334693,\n-0.0012154749263732817,  0.015301427009749338,    -0.03410095723372906,\n-0.0038812414158265274,  0.01989680275385952,     -0.012940524558494608,\n-0.02329212484888945,    0.0028890055802161052,   -0.027379927582891338,\n-0.010970284987486574,   -0.003911609961269966,   -0.02022990670935795,\n0.02301135378808461,     0.008926064375051437,    -0.02743927608140333,\n0.028262268891985343,    0.0329077337400508,      0.012421939480407889,\n-0.021123985084131183,   0.033099138784285026,    0.009310709487255693,\n-0.013540618531412005,   -0.0035222837570961702,  -0.027825511792844544,\n-0.014938449049732254,   -0.002006703358511013,   -0.031019057951503393,\n-0.015351989253993836,   0.025510097717286025,    0.0217105106321775,\n0.00790475845683164,     0.009321235792721705,    -0.029560337555090497,\n0.01912200414214467,     0.01185799949296481,     0.031006105357653285,\n-0.004956319515148046,   0.019570303247657708,    0.029488714911331353,\n-0.017909256254063255,   -0.013116358081313267,   0.008664636958392757,\n-0.0019612313140257493,  0.018374371083876184,    0.03398196392183947,\n0.026068427709374935,    -0.026772559325552645,   0.01586998308898804,\n0.009951056908722142,    -0.028297179901951207,   0.024669708065505936,\n-0.013711509958551527,   -0.002597232735438675,   0.01650189810591583,\n0.012867275225786805,    0.023324686171999263,    0.005783621954285231,\n-0.03212064314750629,    0.0038933959181432815,   -0.00736855453005103,\n-0.01667789431268181,    -0.0268437235490381,     -0.004375816315265203,\n-0.011997970884912825,   -0.011481569884718093,   -0.0029945696899941754,\n0.0050446962043202105,   -0.031544277953036874,   -0.029075888582974083,\n-0.00740025123904844,    0.027683942395244528,    -0.03438320399976036,\n-0.007473456951970293,   0.000989392180106019,    -0.004131270378776689,\n-0.030012568556666085,   -0.03500010605846208,    0.007984199274387616,\n-0.009276029829186119,   0.011634930234348107,    -0.007219024136417848,\n0.02072476953672146,     -0.006624397622746533,   0.01679821977553026,\n0.021310769559615035,    0.03011966107667811,     0.0034260112471992277,\n-0.009246057884801722,   0.029630044323126492,    0.010688542446049854,\n-0.01075039433540903,    0.009681747837546462,    0.03542216208642736,\n-0.011289434570385773,   -0.009599970402245235,   0.024403916763851806,\n0.029701351558210805,    0.0013670473589393883,   -0.03410115313511574,\n0.030408280919371762,    0.034554239357184664,    -0.035214370683895546,\n0.008992222782854045,    0.03100786236143195,     0.020349236551443422,\n-0.033264054224418915,   0.028667338278881904,    0.0271038381176988,\n-0.008165807385529862,   0.004604023735505661,    0.018509723180544904,\n-0.029032969508420506,   0.016708929763455543,    -0.022336392020445024,\n-0.023574010595391326,   -0.0029574896098291587,  0.02548877974180039,\n0.01726039529403908,     -0.028557410755197417,   -0.00045080952607154786,\n0.011194921298040339,    -0.03220537818142479,    0.03279914128195128,\n-0.02815057507225277,    -0.0005527927443031591,  0.006989564988635978,\n0.013293548706195304,    0.011267943617251521,    -0.004709825191984857,\n-0.028350756085042082,   -0.02248033184213453,    -0.012759530356098319,\n-0.03546225208481092,    0.022176350840258888,    -0.032353868747245954,\n-0.013137471015231961,   -0.009399937874289666,   -0.0230024297240546,\n0.028509976847556136,    -0.02231019775011618,    0.00023951331278962825,\n0.010224031804976837,    -0.004803126798510423,   0.029720242597168576,\n0.0210628666852271,      0.0180180019920804,      -0.023852964892993843,\n-0.002121950399892571,   0.023231087795864514,    -0.02090344769664346,\n0.00845677626289196,     -0.008105872004408281,   0.009513231510011828,\n0.012954841197788114,    0.007463296488906265,    0.03308698131443465,\n0.010214787875558302,    0.0037564555526987515,   0.030560019765053893,\n-0.0030325369600220204,  -0.027981981646263497,   0.0014407048725891428,\n-0.034639985838438164,   -0.01951002886125738,    -0.03131416373321963,\n-0.019495463532774957,   0.027595286442240668,    -0.01934444428255896,\n-0.01046929854377267,    0.015112243631304279,    -0.011020586238266057,\n0.032480754499308866,    -0.007637379270527013,   -0.003733058373050308,\n-0.025162592792952115,   0.02612466204351187,     0.0017638447467066393,\n-0.02325689919717544,    0.021976294057571833,    -0.019225829681487772,\n-0.03383731979662325,    0.008351168808345235,    -0.023791948673737642,\n-0.010521484286247091,   -0.02682694149470228,    -0.02610708930000761,\n-0.012920014279981382,   -0.0015162202346584003,  -0.02323650760256748,\n-0.0006763024262828757,  0.016583174755535095,    -0.019079146866876395,\n0.030120576781429508,    -0.03394319747558238,    0.009553379493301158,\n0.019139700155042048,    0.026732683649512437,    0.02195746290408993,\n0.0026833714289004446,   -0.024021950933635405,   -0.016788727373578765,\n0.0020831274754239404,   -0.026420745870124114,   -0.015854952504548974,\n0.012322448651585358,    0.010548930896434414,    0.018360567183833745,\n-0.0037294946576778565,  -0.0134412556193851,     -0.02453565321821128,\n0.01040893204456147,     0.02628404536384803,     0.027350148701373166,\n-8.525226528577345e-05,  -0.008073516306398956,   0.010263708248511059,\n-0.021778963620310683,   0.023836157936084432,    0.004195565453594261,\n0.033161622114809386,    0.0037154081180121312,   0.02402388363388368,\n-0.0036081612538225406,  -0.0019271976673146077,  0.015746755242906797,\n-0.0024255129078718835,  -0.023731546756218587,   0.011950984592014427,\n-0.013492688702138449,   0.026247352616180806,    -0.026512987671722728,\n0.00789181295309997,     0.010351837935302715,    0.024868804851000292,\n0.029634114660484934,    -0.015582941176877235,   0.021382655426361797,\n0.032339800388501115,    0.01844134984587745,     -0.02044179563503794,\n-0.02370139685221544,    -0.009896291883290005,   0.024047951492287063,\n-0.023950195196253774,   -0.002276756188046482,   0.012558182846577066,\n0.03199736325799453,     -0.009090587528143528,   0.006687616258338532,\n-0.003168930303575393,   -0.034946187773138675,   -0.03252599339687803,\n0.004562797490257009,    -0.02595481255293053,    -0.027279275120579847,\n-0.0032840712541482415,  -0.024526408520549395,   -0.018692703097127197,\n0.02304847714639452,     0.027740220179345187,    0.01743809206456085,\n0.01805971285915893,     0.01633018968794245,     0.026630652376915198,\n0.011225175402720722,    -0.024627834579852948,   -0.01997264271839906,\n-0.009052955410545007,   0.022778464420665334,    0.025738305815191945,\n0.006343859978615648,    -0.0018951308636298014,  -0.0298251575493026,\n0.032618551756334734,    0.0059236093787837065,   0.0004371297093765777,\n-0.03444792758192216,    -0.014121178477760692,   0.012556634808101834,\n0.004330196568767771,    0.019849021557935012,    -0.01405978081000732,\n-0.02172287776720145,    -0.0235530764076237,     -0.021902894719347477,\n-0.001997644361421318,   0.031234667592362382,    0.0018621332673934446,\n0.02963520496739421};\n\nstatic float nn_linear_baseline_biases_dram[10][1] = {\n0.029830838495251873,  -0.027718893800693683, 0.014915538915354814,\n0.013144414092396091,  0.026214015226942618,  0.005715480139309234,\n-0.016521356227486333, 0.01685057481095459,   0.007825814410188814,\n0.031028853769378233};\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/debug_8h/","title":"snRuntime/include/debug.h","text":""},{"location":"runtime/Files/debug_8h/#defines","title":"Defines","text":"Name snrt_trace(x...)"},{"location":"runtime/Files/debug_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/debug_8h/#define-snrt_trace","title":"define snrt_trace","text":"<pre><code>#define snrt_trace(\nx...\n)\ndo {                 \\\n    } while (0)\n</code></pre>"},{"location":"runtime/Files/debug_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#if defined(__SNRT_USE_TRACE)\n\n#include \"printf.h\"\n\n#define snrt_msg(fmt, x...)                                             \\\n    do {                                                                \\\n        printf(\"[\\033[35mSNRT(%d,%d)\\033[0m] \" fmt, snrt_cluster_idx(), \\\n               snrt_cluster_core_idx(), ##x);                           \\\n    } while (0)\n\n#define SNRT_TRACE_INIT 0\n#define SNRT_TRACE_ALLOC 1\n\n#define snrt_trace(trace, x...) \\\n    do {                        \\\n        snrt_msg(x);            \\\n    } while (0)\n\n#else\n\n#define snrt_trace(x...) \\\n    do {                 \\\n    } while (0)\n\n#endif  // defined(__SNRT_USE_TRACE)\n\n#ifdef __cplusplus\n}\n#endif\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_1b87772ecb6338d255491e73d109d92a/","title":"snRuntime/vendor","text":""},{"location":"runtime/Files/dir_1b87772ecb6338d255491e73d109d92a/#directories","title":"Directories","text":"Name snRuntime/vendor/riscv-opcodes"},{"location":"runtime/Files/dir_1b87772ecb6338d255491e73d109d92a/#files","title":"Files","text":"Name snRuntime/vendor/printf.h <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_25389e8ccedb83043d280350ea057a45/","title":"snBLAS/include","text":""},{"location":"runtime/Files/dir_25389e8ccedb83043d280350ea057a45/#files","title":"Files","text":"Name snBLAS/include/snblas.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_44cec6e3ea30e076b9313c4641539d9f/","title":"benchmark","text":""},{"location":"runtime/Files/dir_44cec6e3ea30e076b9313c4641539d9f/#directories","title":"Directories","text":"Name benchmark/include benchmark/src <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_5b32b0c8d196e0bee0bc7bd37f53bc55/","title":"benchmark/src","text":""},{"location":"runtime/Files/dir_5b32b0c8d196e0bee0bc7bd37f53bc55/#directories","title":"Directories","text":"Name benchmark/src/matmul <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_5f735e483190b1e987f01bac27340d4c/","title":"applications/src/kernels","text":""},{"location":"runtime/Files/dir_5f735e483190b1e987f01bac27340d4c/#files","title":"Files","text":"Name applications/src/kernels/batchnorm.h applications/src/kernels/conv2d.h applications/src/kernels/gemm.h applications/src/kernels/maxpool.h applications/src/kernels/nnlinear_baseline.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_63258e4bd604a30941441a5bf13ee1c7/","title":"snRuntime/include","text":""},{"location":"runtime/Files/dir_63258e4bd604a30941441a5bf13ee1c7/#files","title":"Files","text":"Name snRuntime/include/debug.h snRuntime/include/dm.h snRuntime/include/eu.h snRuntime/include/interface.h snRuntime/include/kmp.h snRuntime/include/occamy_base_addr.h snRuntime/include/occamy_hbm_xbar_peripheral.h snRuntime/include/occamy_quad_peripheral.h snRuntime/include/occamy_soc_peripheral.h snRuntime/include/omp.h snRuntime/include/perf_cnt.h snRuntime/include/snitch_cluster_peripheral.h snRuntime/include/snrt.h <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_65d9ac0513258746857e829de6bdcde3/","title":"applications/src/utils","text":""},{"location":"runtime/Files/dir_65d9ac0513258746857e829de6bdcde3/#files","title":"Files","text":"Name applications/src/utils/utils.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_687df1e3e4d8e7c59c4585f2d14d078b/","title":"snRuntime","text":""},{"location":"runtime/Files/dir_687df1e3e4d8e7c59c4585f2d14d078b/#directories","title":"Directories","text":"Name snRuntime/include snRuntime/src snRuntime/tests snRuntime/vendor <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_778b26f90665cd07894fddcdc79f6d9b/","title":"applications/data","text":""},{"location":"runtime/Files/dir_778b26f90665cd07894fddcdc79f6d9b/#files","title":"Files","text":"Name applications/data/data_fp32_nnlinear.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_a04768fb9c5f69508e8162509da4a728/","title":"snRuntime/src","text":""},{"location":"runtime/Files/dir_a04768fb9c5f69508e8162509da4a728/#files","title":"Files","text":"Name snRuntime/src/team.h <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_a43e155b6864a88b68593d32d6762148/","title":"snRuntime/vendor/riscv-opcodes","text":""},{"location":"runtime/Files/dir_a43e155b6864a88b68593d32d6762148/#files","title":"Files","text":"Name snRuntime/vendor/riscv-opcodes/encoding.h <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_a6e4fee11f07c3b70486e88fe92cbbdc/","title":"applications","text":""},{"location":"runtime/Files/dir_a6e4fee11f07c3b70486e88fe92cbbdc/#directories","title":"Directories","text":"Name applications/data applications/include applications/src <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_b48e99e00c13f140bbfb4c281bca5194/","title":"applications/include","text":""},{"location":"runtime/Files/dir_b48e99e00c13f140bbfb4c281bca5194/#files","title":"Files","text":"Name applications/include/layer.h applications/include/network.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_c678f1d94fcadf23f088beb06c159bb6/","title":"snRuntime/tests","text":""},{"location":"runtime/Files/dir_c678f1d94fcadf23f088beb06c159bb6/#files","title":"Files","text":"Name snRuntime/tests/data.h snRuntime/tests/lto_a.h <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/dir_c9be9173870f327345d33414c30b89d4/","title":"benchmark/include","text":""},{"location":"runtime/Files/dir_c9be9173870f327345d33414c30b89d4/#files","title":"Files","text":"Name benchmark/include/benchmark.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_d11ce512391593108fa9a153ee74f81a/","title":"snBLAS","text":""},{"location":"runtime/Files/dir_d11ce512391593108fa9a153ee74f81a/#directories","title":"Directories","text":"Name snBLAS/include <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_d8614481a845e6b5182a8bafa4362c3a/","title":"applications/src/layers","text":""},{"location":"runtime/Files/dir_d8614481a845e6b5182a8bafa4362c3a/#files","title":"Files","text":"Name applications/src/layers/batchnorm_layer.h applications/src/layers/conv2d_layer.h applications/src/layers/maxpool_layer.h applications/src/layers/nnlinear_backend_baseline.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_dc58b1af80798a6a36e5f5ae77c7a4ef/","title":"applications/src","text":""},{"location":"runtime/Files/dir_dc58b1af80798a6a36e5f5ae77c7a4ef/#directories","title":"Directories","text":"Name applications/src/kernels applications/src/layers applications/src/utils <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dir_e8f13bae39bfe8cd0afeb13d1c0e76c2/","title":"benchmark/src/matmul","text":""},{"location":"runtime/Files/dir_e8f13bae39bfe8cd0afeb13d1c0e76c2/#files","title":"Files","text":"Name benchmark/src/matmul/matmul.h <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/dm_8h/","title":"snRuntime/include/dm.h","text":""},{"location":"runtime/Files/dm_8h/#functions","title":"Functions","text":"Name void dm_init(void )Init the data mover and load a pointer to the DM struct in to TLS. Needs to be called by the DM itself and all harts that want to use the dm functions. void dm_main(void )data mover main function void dm_exit(void )Send the data mover to exit() void dm_memcpy_async(void * dest, const void * src, size_t n)Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. void dm_memcpy2d_async(uint64_t src, uint64_t dst, uint32_t size, uint32_t sstrd, uint32_t dstrd, uint32_t nreps, uint32_t cfg)Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. void dm_start(void )Trigger the start of queued transfers and exit immediately. void dm_wait(void )Wait for all DMA transfers to complete. void dm_wait_ready(void )Wait for the DM core to be ready."},{"location":"runtime/Files/dm_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/dm_8h/#function-dm_init","title":"function dm_init","text":"<pre><code>void dm_init(\nvoid )\n</code></pre> <p>Init the data mover and load a pointer to the DM struct in to TLS. Needs to be called by the DM itself and all harts that want to use the dm functions. </p>"},{"location":"runtime/Files/dm_8h/#function-dm_main","title":"function dm_main","text":"<pre><code>void dm_main(\nvoid )\n</code></pre> <p>data mover main function </p>"},{"location":"runtime/Files/dm_8h/#function-dm_exit","title":"function dm_exit","text":"<pre><code>void dm_exit(\nvoid )\n</code></pre> <p>Send the data mover to exit() </p>"},{"location":"runtime/Files/dm_8h/#function-dm_memcpy_async","title":"function dm_memcpy_async","text":"<pre><code>void dm_memcpy_async(\nvoid * dest,\nconst void * src,\nsize_t n\n)\n</code></pre> <p>Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. </p> <p>Parameters: </p> <ul> <li>dest destination pointer </li> <li>src source pointer </li> <li>n number of bytes to copy </li> </ul> <p>Return: transfer ID </p> <p>block only if DM queue is full</p>"},{"location":"runtime/Files/dm_8h/#function-dm_memcpy2d_async","title":"function dm_memcpy2d_async","text":"<pre><code>void dm_memcpy2d_async(\nuint64_t src,\nuint64_t dst,\nuint32_t size,\nuint32_t sstrd,\nuint32_t dstrd,\nuint32_t nreps,\nuint32_t cfg\n)\n</code></pre> <p>Queue an asynchronus memory copy. The transfer is not started unless dm_start or dm_wait is issued. </p> <p>Parameters: </p> <ul> <li>src source address </li> <li>dst destination address </li> <li>size size in inner dimension </li> <li>sstrd outer source stride </li> <li>dstrd outer destination stride </li> <li>nreps number of repetitions in outer dimension </li> <li>cfg DMA configuration </li> </ul> <p>block only if DM queue is full</p>"},{"location":"runtime/Files/dm_8h/#function-dm_start","title":"function dm_start","text":"<pre><code>void dm_start(\nvoid )\n</code></pre> <p>Trigger the start of queued transfers and exit immediately. </p>"},{"location":"runtime/Files/dm_8h/#function-dm_wait","title":"function dm_wait","text":"<pre><code>void dm_wait(\nvoid )\n</code></pre> <p>Wait for all DMA transfers to complete. </p>"},{"location":"runtime/Files/dm_8h/#function-dm_wait_ready","title":"function dm_wait_ready","text":"<pre><code>void dm_wait_ready(\nvoid )\n</code></pre> <p>Wait for the DM core to be ready. </p>"},{"location":"runtime/Files/dm_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid dm_init(void);\n\nvoid dm_main(void);\n\nvoid dm_exit(void);\n\nvoid dm_memcpy_async(void *dest, const void *src, size_t n);\n\nvoid dm_memcpy2d_async(uint64_t src, uint64_t dst, uint32_t size,\nuint32_t sstrd, uint32_t dstrd, uint32_t nreps,\nuint32_t cfg);\n\nvoid dm_start(void);\n\nvoid dm_wait(void);\n\nvoid dm_wait_ready(void);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/encoding_8h/","title":"snRuntime/vendor/riscv-opcodes/encoding.h","text":""},{"location":"runtime/Files/encoding_8h/#defines","title":"Defines","text":"Name MSTATUS_UIE MSTATUS_SIE MSTATUS_HIE MSTATUS_MIE MSTATUS_UPIE MSTATUS_SPIE MSTATUS_UBE MSTATUS_MPIE MSTATUS_SPP MSTATUS_VS MSTATUS_MPP MSTATUS_FS MSTATUS_XS MSTATUS_MPRV MSTATUS_SUM MSTATUS_MXR MSTATUS_TVM MSTATUS_TW MSTATUS_TSR MSTATUS32_SD MSTATUS_UXL MSTATUS_SXL MSTATUS_SBE MSTATUS_MBE MSTATUS_GVA MSTATUS_MPV MSTATUS64_SD MSTATUSH_SBE MSTATUSH_MBE SSTATUS_UIE SSTATUS_SIE SSTATUS_UPIE SSTATUS_SPIE SSTATUS_UBE SSTATUS_SPP SSTATUS_VS SSTATUS_FS SSTATUS_XS SSTATUS_SUM SSTATUS_MXR SSTATUS32_SD SSTATUS_UXL SSTATUS64_SD SSTATUS_VS_MASK HSTATUS_VSXL HSTATUS_VTSR HSTATUS_VTW HSTATUS_VTVM HSTATUS_VGEIN HSTATUS_HU HSTATUS_SPVP HSTATUS_SPV HSTATUS_GVA HSTATUS_VSBE USTATUS_UIE USTATUS_UPIE DCSR_XDEBUGVER DCSR_NDRESET DCSR_FULLRESET DCSR_EBREAKM DCSR_EBREAKH DCSR_EBREAKS DCSR_EBREAKU DCSR_STOPCYCLE DCSR_STOPTIME DCSR_CAUSE DCSR_DEBUGINT DCSR_HALT DCSR_STEP DCSR_PRV DCSR_CAUSE_NONE DCSR_CAUSE_SWBP DCSR_CAUSE_HWBP DCSR_CAUSE_DEBUGINT DCSR_CAUSE_STEP DCSR_CAUSE_HALT DCSR_CAUSE_GROUP MCONTROL_TYPE(xlen) MCONTROL_DMODE(xlen) MCONTROL_MASKMAX(xlen) MCONTROL_SELECT MCONTROL_TIMING MCONTROL_ACTION MCONTROL_CHAIN MCONTROL_MATCH MCONTROL_M MCONTROL_H MCONTROL_S MCONTROL_U MCONTROL_EXECUTE MCONTROL_STORE MCONTROL_LOAD MCONTROL_TYPE_NONE MCONTROL_TYPE_MATCH MCONTROL_ACTION_DEBUG_EXCEPTION MCONTROL_ACTION_DEBUG_MODE MCONTROL_ACTION_TRACE_START MCONTROL_ACTION_TRACE_STOP MCONTROL_ACTION_TRACE_EMIT MCONTROL_MATCH_EQUAL MCONTROL_MATCH_NAPOT MCONTROL_MATCH_GE MCONTROL_MATCH_LT MCONTROL_MATCH_MASK_LOW MCONTROL_MATCH_MASK_HIGH MIP_USIP MIP_SSIP MIP_VSSIP MIP_MSIP MIP_UTIP MIP_STIP MIP_VSTIP MIP_MTIP MIP_UEIP MIP_SEIP MIP_VSEIP MIP_MEIP MIP_SGEIP SIP_SCIP MIP_MCIP MIE_SSIE MIE_HSIE MIE_MSIE MIE_STIE MIE_HTIE MIE_MTIE MIE_SEIE MIE_HEIE MIE_MEIE MIE_SCIE MIE_MCIE MCAUSE_INTERRUPT MIP_S_MASK MIP_VS_MASK MIP_HS_MASK MIDELEG_FORCED_MASK SIP_SSIP SIP_STIP PRV_U PRV_S PRV_M PRV_HS SATP32_MODE SATP32_ASID SATP32_PPN SATP64_MODE SATP64_ASID SATP64_PPN SATP_MODE_OFF SATP_MODE_SV32 SATP_MODE_SV39 SATP_MODE_SV48 SATP_MODE_SV57 SATP_MODE_SV64 HGATP32_MODE HGATP32_VMID HGATP32_PPN HGATP64_MODE HGATP64_VMID HGATP64_PPN HGATP_MODE_OFF HGATP_MODE_SV32X4 HGATP_MODE_SV39X4 HGATP_MODE_SV48X4 PMP_R PMP_W PMP_X PMP_A PMP_L PMP_SHIFT PMP_TOR PMP_NA4 PMP_NAPOT IRQ_U_SOFT IRQ_S_SOFT IRQ_VS_SOFT IRQ_M_SOFT IRQ_U_TIMER IRQ_S_TIMER IRQ_VS_TIMER IRQ_M_TIMER IRQ_U_EXT IRQ_S_EXT IRQ_VS_EXT IRQ_M_EXT IRQ_S_GEXT IRQ_COP IRQ_HOST IRQ_M_CLUSTER IRQ_S_CLUSTER PTE_V PTE_R PTE_W PTE_X PTE_U PTE_G PTE_A PTE_D PTE_SOFT PTE_RSVD PTE_PBMT PTE_N PTE_ATTR PTE_PPN_SHIFT PTE_TABLE(PTE)"},{"location":"runtime/Files/encoding_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/encoding_8h/#define-mstatus_uie","title":"define MSTATUS_UIE","text":"<pre><code>#define MSTATUS_UIE 0x00000001\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sie","title":"define MSTATUS_SIE","text":"<pre><code>#define MSTATUS_SIE 0x00000002\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_hie","title":"define MSTATUS_HIE","text":"<pre><code>#define MSTATUS_HIE 0x00000004\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mie","title":"define MSTATUS_MIE","text":"<pre><code>#define MSTATUS_MIE 0x00000008\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_upie","title":"define MSTATUS_UPIE","text":"<pre><code>#define MSTATUS_UPIE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_spie","title":"define MSTATUS_SPIE","text":"<pre><code>#define MSTATUS_SPIE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_ube","title":"define MSTATUS_UBE","text":"<pre><code>#define MSTATUS_UBE 0x00000040\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mpie","title":"define MSTATUS_MPIE","text":"<pre><code>#define MSTATUS_MPIE 0x00000080\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_spp","title":"define MSTATUS_SPP","text":"<pre><code>#define MSTATUS_SPP 0x00000100\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_vs","title":"define MSTATUS_VS","text":"<pre><code>#define MSTATUS_VS 0x00000600\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mpp","title":"define MSTATUS_MPP","text":"<pre><code>#define MSTATUS_MPP 0x00001800\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_fs","title":"define MSTATUS_FS","text":"<pre><code>#define MSTATUS_FS 0x00006000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_xs","title":"define MSTATUS_XS","text":"<pre><code>#define MSTATUS_XS 0x00018000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mprv","title":"define MSTATUS_MPRV","text":"<pre><code>#define MSTATUS_MPRV 0x00020000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sum","title":"define MSTATUS_SUM","text":"<pre><code>#define MSTATUS_SUM 0x00040000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mxr","title":"define MSTATUS_MXR","text":"<pre><code>#define MSTATUS_MXR 0x00080000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_tvm","title":"define MSTATUS_TVM","text":"<pre><code>#define MSTATUS_TVM 0x00100000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_tw","title":"define MSTATUS_TW","text":"<pre><code>#define MSTATUS_TW 0x00200000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_tsr","title":"define MSTATUS_TSR","text":"<pre><code>#define MSTATUS_TSR 0x00400000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus32_sd","title":"define MSTATUS32_SD","text":"<pre><code>#define MSTATUS32_SD 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_uxl","title":"define MSTATUS_UXL","text":"<pre><code>#define MSTATUS_UXL 0x0000000300000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sxl","title":"define MSTATUS_SXL","text":"<pre><code>#define MSTATUS_SXL 0x0000000C00000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_sbe","title":"define MSTATUS_SBE","text":"<pre><code>#define MSTATUS_SBE 0x0000001000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mbe","title":"define MSTATUS_MBE","text":"<pre><code>#define MSTATUS_MBE 0x0000002000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_gva","title":"define MSTATUS_GVA","text":"<pre><code>#define MSTATUS_GVA 0x0000004000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus_mpv","title":"define MSTATUS_MPV","text":"<pre><code>#define MSTATUS_MPV 0x0000008000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatus64_sd","title":"define MSTATUS64_SD","text":"<pre><code>#define MSTATUS64_SD 0x8000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatush_sbe","title":"define MSTATUSH_SBE","text":"<pre><code>#define MSTATUSH_SBE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mstatush_mbe","title":"define MSTATUSH_MBE","text":"<pre><code>#define MSTATUSH_MBE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_uie","title":"define SSTATUS_UIE","text":"<pre><code>#define SSTATUS_UIE 0x00000001\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_sie","title":"define SSTATUS_SIE","text":"<pre><code>#define SSTATUS_SIE 0x00000002\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_upie","title":"define SSTATUS_UPIE","text":"<pre><code>#define SSTATUS_UPIE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_spie","title":"define SSTATUS_SPIE","text":"<pre><code>#define SSTATUS_SPIE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_ube","title":"define SSTATUS_UBE","text":"<pre><code>#define SSTATUS_UBE 0x00000040\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_spp","title":"define SSTATUS_SPP","text":"<pre><code>#define SSTATUS_SPP 0x00000100\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_vs","title":"define SSTATUS_VS","text":"<pre><code>#define SSTATUS_VS 0x00000600\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_fs","title":"define SSTATUS_FS","text":"<pre><code>#define SSTATUS_FS 0x00006000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_xs","title":"define SSTATUS_XS","text":"<pre><code>#define SSTATUS_XS 0x00018000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_sum","title":"define SSTATUS_SUM","text":"<pre><code>#define SSTATUS_SUM 0x00040000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_mxr","title":"define SSTATUS_MXR","text":"<pre><code>#define SSTATUS_MXR 0x00080000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus32_sd","title":"define SSTATUS32_SD","text":"<pre><code>#define SSTATUS32_SD 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_uxl","title":"define SSTATUS_UXL","text":"<pre><code>#define SSTATUS_UXL 0x0000000300000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus64_sd","title":"define SSTATUS64_SD","text":"<pre><code>#define SSTATUS64_SD 0x8000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sstatus_vs_mask","title":"define SSTATUS_VS_MASK","text":"<pre><code>#define SSTATUS_VS_MASK     (SSTATUS_SIE | SSTATUS_SPIE | SSTATUS_SPP | SSTATUS_FS | SSTATUS_SUM | \\\n     SSTATUS_MXR | SSTATUS_UXL)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vsxl","title":"define HSTATUS_VSXL","text":"<pre><code>#define HSTATUS_VSXL 0x300000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vtsr","title":"define HSTATUS_VTSR","text":"<pre><code>#define HSTATUS_VTSR 0x00400000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vtw","title":"define HSTATUS_VTW","text":"<pre><code>#define HSTATUS_VTW 0x00200000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vtvm","title":"define HSTATUS_VTVM","text":"<pre><code>#define HSTATUS_VTVM 0x00100000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vgein","title":"define HSTATUS_VGEIN","text":"<pre><code>#define HSTATUS_VGEIN 0x0003f000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_hu","title":"define HSTATUS_HU","text":"<pre><code>#define HSTATUS_HU 0x00000200\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_spvp","title":"define HSTATUS_SPVP","text":"<pre><code>#define HSTATUS_SPVP 0x00000100\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_spv","title":"define HSTATUS_SPV","text":"<pre><code>#define HSTATUS_SPV 0x00000080\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_gva","title":"define HSTATUS_GVA","text":"<pre><code>#define HSTATUS_GVA 0x00000040\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hstatus_vsbe","title":"define HSTATUS_VSBE","text":"<pre><code>#define HSTATUS_VSBE 0x00000020\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-ustatus_uie","title":"define USTATUS_UIE","text":"<pre><code>#define USTATUS_UIE 0x00000001\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-ustatus_upie","title":"define USTATUS_UPIE","text":"<pre><code>#define USTATUS_UPIE 0x00000010\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_xdebugver","title":"define DCSR_XDEBUGVER","text":"<pre><code>#define DCSR_XDEBUGVER (3U &lt;&lt; 30)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ndreset","title":"define DCSR_NDRESET","text":"<pre><code>#define DCSR_NDRESET (1 &lt;&lt; 29)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_fullreset","title":"define DCSR_FULLRESET","text":"<pre><code>#define DCSR_FULLRESET (1 &lt;&lt; 28)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreakm","title":"define DCSR_EBREAKM","text":"<pre><code>#define DCSR_EBREAKM (1 &lt;&lt; 15)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreakh","title":"define DCSR_EBREAKH","text":"<pre><code>#define DCSR_EBREAKH (1 &lt;&lt; 14)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreaks","title":"define DCSR_EBREAKS","text":"<pre><code>#define DCSR_EBREAKS (1 &lt;&lt; 13)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_ebreaku","title":"define DCSR_EBREAKU","text":"<pre><code>#define DCSR_EBREAKU (1 &lt;&lt; 12)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_stopcycle","title":"define DCSR_STOPCYCLE","text":"<pre><code>#define DCSR_STOPCYCLE (1 &lt;&lt; 10)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_stoptime","title":"define DCSR_STOPTIME","text":"<pre><code>#define DCSR_STOPTIME (1 &lt;&lt; 9)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause","title":"define DCSR_CAUSE","text":"<pre><code>#define DCSR_CAUSE (7 &lt;&lt; 6)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_debugint","title":"define DCSR_DEBUGINT","text":"<pre><code>#define DCSR_DEBUGINT (1 &lt;&lt; 5)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_halt","title":"define DCSR_HALT","text":"<pre><code>#define DCSR_HALT (1 &lt;&lt; 3)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_step","title":"define DCSR_STEP","text":"<pre><code>#define DCSR_STEP (1 &lt;&lt; 2)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_prv","title":"define DCSR_PRV","text":"<pre><code>#define DCSR_PRV (3 &lt;&lt; 0)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_none","title":"define DCSR_CAUSE_NONE","text":"<pre><code>#define DCSR_CAUSE_NONE 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_swbp","title":"define DCSR_CAUSE_SWBP","text":"<pre><code>#define DCSR_CAUSE_SWBP 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_hwbp","title":"define DCSR_CAUSE_HWBP","text":"<pre><code>#define DCSR_CAUSE_HWBP 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_debugint","title":"define DCSR_CAUSE_DEBUGINT","text":"<pre><code>#define DCSR_CAUSE_DEBUGINT 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_step","title":"define DCSR_CAUSE_STEP","text":"<pre><code>#define DCSR_CAUSE_STEP 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_halt","title":"define DCSR_CAUSE_HALT","text":"<pre><code>#define DCSR_CAUSE_HALT 5\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-dcsr_cause_group","title":"define DCSR_CAUSE_GROUP","text":"<pre><code>#define DCSR_CAUSE_GROUP 6\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_type","title":"define MCONTROL_TYPE","text":"<pre><code>#define MCONTROL_TYPE(\nxlen\n)\n(0xfULL &lt;&lt; ((xlen)-4))\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_dmode","title":"define MCONTROL_DMODE","text":"<pre><code>#define MCONTROL_DMODE(\nxlen\n)\n(1ULL &lt;&lt; ((xlen)-5))\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_maskmax","title":"define MCONTROL_MASKMAX","text":"<pre><code>#define MCONTROL_MASKMAX(\nxlen\n)\n(0x3fULL &lt;&lt; ((xlen)-11))\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_select","title":"define MCONTROL_SELECT","text":"<pre><code>#define MCONTROL_SELECT (1 &lt;&lt; 19)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_timing","title":"define MCONTROL_TIMING","text":"<pre><code>#define MCONTROL_TIMING (1 &lt;&lt; 18)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action","title":"define MCONTROL_ACTION","text":"<pre><code>#define MCONTROL_ACTION (0x3f &lt;&lt; 12)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_chain","title":"define MCONTROL_CHAIN","text":"<pre><code>#define MCONTROL_CHAIN (1 &lt;&lt; 11)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match","title":"define MCONTROL_MATCH","text":"<pre><code>#define MCONTROL_MATCH (0xf &lt;&lt; 7)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_m","title":"define MCONTROL_M","text":"<pre><code>#define MCONTROL_M (1 &lt;&lt; 6)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_h","title":"define MCONTROL_H","text":"<pre><code>#define MCONTROL_H (1 &lt;&lt; 5)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_s","title":"define MCONTROL_S","text":"<pre><code>#define MCONTROL_S (1 &lt;&lt; 4)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_u","title":"define MCONTROL_U","text":"<pre><code>#define MCONTROL_U (1 &lt;&lt; 3)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_execute","title":"define MCONTROL_EXECUTE","text":"<pre><code>#define MCONTROL_EXECUTE (1 &lt;&lt; 2)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_store","title":"define MCONTROL_STORE","text":"<pre><code>#define MCONTROL_STORE (1 &lt;&lt; 1)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_load","title":"define MCONTROL_LOAD","text":"<pre><code>#define MCONTROL_LOAD (1 &lt;&lt; 0)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_type_none","title":"define MCONTROL_TYPE_NONE","text":"<pre><code>#define MCONTROL_TYPE_NONE 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_type_match","title":"define MCONTROL_TYPE_MATCH","text":"<pre><code>#define MCONTROL_TYPE_MATCH 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_debug_exception","title":"define MCONTROL_ACTION_DEBUG_EXCEPTION","text":"<pre><code>#define MCONTROL_ACTION_DEBUG_EXCEPTION 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_debug_mode","title":"define MCONTROL_ACTION_DEBUG_MODE","text":"<pre><code>#define MCONTROL_ACTION_DEBUG_MODE 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_trace_start","title":"define MCONTROL_ACTION_TRACE_START","text":"<pre><code>#define MCONTROL_ACTION_TRACE_START 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_trace_stop","title":"define MCONTROL_ACTION_TRACE_STOP","text":"<pre><code>#define MCONTROL_ACTION_TRACE_STOP 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_action_trace_emit","title":"define MCONTROL_ACTION_TRACE_EMIT","text":"<pre><code>#define MCONTROL_ACTION_TRACE_EMIT 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_equal","title":"define MCONTROL_MATCH_EQUAL","text":"<pre><code>#define MCONTROL_MATCH_EQUAL 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_napot","title":"define MCONTROL_MATCH_NAPOT","text":"<pre><code>#define MCONTROL_MATCH_NAPOT 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_ge","title":"define MCONTROL_MATCH_GE","text":"<pre><code>#define MCONTROL_MATCH_GE 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_lt","title":"define MCONTROL_MATCH_LT","text":"<pre><code>#define MCONTROL_MATCH_LT 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_mask_low","title":"define MCONTROL_MATCH_MASK_LOW","text":"<pre><code>#define MCONTROL_MATCH_MASK_LOW 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcontrol_match_mask_high","title":"define MCONTROL_MATCH_MASK_HIGH","text":"<pre><code>#define MCONTROL_MATCH_MASK_HIGH 5\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_usip","title":"define MIP_USIP","text":"<pre><code>#define MIP_USIP (1 &lt;&lt; IRQ_U_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_ssip","title":"define MIP_SSIP","text":"<pre><code>#define MIP_SSIP (1 &lt;&lt; IRQ_S_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vssip","title":"define MIP_VSSIP","text":"<pre><code>#define MIP_VSSIP (1 &lt;&lt; IRQ_VS_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_msip","title":"define MIP_MSIP","text":"<pre><code>#define MIP_MSIP (1 &lt;&lt; IRQ_M_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_utip","title":"define MIP_UTIP","text":"<pre><code>#define MIP_UTIP (1 &lt;&lt; IRQ_U_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_stip","title":"define MIP_STIP","text":"<pre><code>#define MIP_STIP (1 &lt;&lt; IRQ_S_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vstip","title":"define MIP_VSTIP","text":"<pre><code>#define MIP_VSTIP (1 &lt;&lt; IRQ_VS_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_mtip","title":"define MIP_MTIP","text":"<pre><code>#define MIP_MTIP (1 &lt;&lt; IRQ_M_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_ueip","title":"define MIP_UEIP","text":"<pre><code>#define MIP_UEIP (1 &lt;&lt; IRQ_U_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_seip","title":"define MIP_SEIP","text":"<pre><code>#define MIP_SEIP (1 &lt;&lt; IRQ_S_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vseip","title":"define MIP_VSEIP","text":"<pre><code>#define MIP_VSEIP (1 &lt;&lt; IRQ_VS_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_meip","title":"define MIP_MEIP","text":"<pre><code>#define MIP_MEIP (1 &lt;&lt; IRQ_M_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_sgeip","title":"define MIP_SGEIP","text":"<pre><code>#define MIP_SGEIP (1 &lt;&lt; IRQ_S_GEXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sip_scip","title":"define SIP_SCIP","text":"<pre><code>#define SIP_SCIP (1 &lt;&lt; IRQ_S_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_mcip","title":"define MIP_MCIP","text":"<pre><code>#define MIP_MCIP (1 &lt;&lt; IRQ_M_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_ssie","title":"define MIE_SSIE","text":"<pre><code>#define MIE_SSIE (1 &lt;&lt; IRQ_S_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_hsie","title":"define MIE_HSIE","text":"<pre><code>#define MIE_HSIE (1 &lt;&lt; IRQ_H_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_msie","title":"define MIE_MSIE","text":"<pre><code>#define MIE_MSIE (1 &lt;&lt; IRQ_M_SOFT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_stie","title":"define MIE_STIE","text":"<pre><code>#define MIE_STIE (1 &lt;&lt; IRQ_S_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_htie","title":"define MIE_HTIE","text":"<pre><code>#define MIE_HTIE (1 &lt;&lt; IRQ_H_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_mtie","title":"define MIE_MTIE","text":"<pre><code>#define MIE_MTIE (1 &lt;&lt; IRQ_M_TIMER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_seie","title":"define MIE_SEIE","text":"<pre><code>#define MIE_SEIE (1 &lt;&lt; IRQ_S_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_heie","title":"define MIE_HEIE","text":"<pre><code>#define MIE_HEIE (1 &lt;&lt; IRQ_H_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_meie","title":"define MIE_MEIE","text":"<pre><code>#define MIE_MEIE (1 &lt;&lt; IRQ_M_EXT)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_scie","title":"define MIE_SCIE","text":"<pre><code>#define MIE_SCIE (1 &lt;&lt; IRQ_S_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mie_mcie","title":"define MIE_MCIE","text":"<pre><code>#define MIE_MCIE (1 &lt;&lt; IRQ_M_CLUSTER)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mcause_interrupt","title":"define MCAUSE_INTERRUPT","text":"<pre><code>#define MCAUSE_INTERRUPT 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_s_mask","title":"define MIP_S_MASK","text":"<pre><code>#define MIP_S_MASK (MIP_SSIP | MIP_STIP | MIP_SEIP)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_vs_mask","title":"define MIP_VS_MASK","text":"<pre><code>#define MIP_VS_MASK (MIP_VSSIP | MIP_VSTIP | MIP_VSEIP)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mip_hs_mask","title":"define MIP_HS_MASK","text":"<pre><code>#define MIP_HS_MASK (MIP_VS_MASK | MIP_SGEIP)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-mideleg_forced_mask","title":"define MIDELEG_FORCED_MASK","text":"<pre><code>#define MIDELEG_FORCED_MASK MIP_HS_MASK\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sip_ssip","title":"define SIP_SSIP","text":"<pre><code>#define SIP_SSIP MIP_SSIP\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-sip_stip","title":"define SIP_STIP","text":"<pre><code>#define SIP_STIP MIP_STIP\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_u","title":"define PRV_U","text":"<pre><code>#define PRV_U 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_s","title":"define PRV_S","text":"<pre><code>#define PRV_S 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_m","title":"define PRV_M","text":"<pre><code>#define PRV_M 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-prv_hs","title":"define PRV_HS","text":"<pre><code>#define PRV_HS (PRV_S + 1)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp32_mode","title":"define SATP32_MODE","text":"<pre><code>#define SATP32_MODE 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp32_asid","title":"define SATP32_ASID","text":"<pre><code>#define SATP32_ASID 0x7FC00000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp32_ppn","title":"define SATP32_PPN","text":"<pre><code>#define SATP32_PPN 0x003FFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp64_mode","title":"define SATP64_MODE","text":"<pre><code>#define SATP64_MODE 0xF000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp64_asid","title":"define SATP64_ASID","text":"<pre><code>#define SATP64_ASID 0x0FFFF00000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp64_ppn","title":"define SATP64_PPN","text":"<pre><code>#define SATP64_PPN 0x00000FFFFFFFFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_off","title":"define SATP_MODE_OFF","text":"<pre><code>#define SATP_MODE_OFF 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv32","title":"define SATP_MODE_SV32","text":"<pre><code>#define SATP_MODE_SV32 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv39","title":"define SATP_MODE_SV39","text":"<pre><code>#define SATP_MODE_SV39 8\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv48","title":"define SATP_MODE_SV48","text":"<pre><code>#define SATP_MODE_SV48 9\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv57","title":"define SATP_MODE_SV57","text":"<pre><code>#define SATP_MODE_SV57 10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-satp_mode_sv64","title":"define SATP_MODE_SV64","text":"<pre><code>#define SATP_MODE_SV64 11\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp32_mode","title":"define HGATP32_MODE","text":"<pre><code>#define HGATP32_MODE 0x80000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp32_vmid","title":"define HGATP32_VMID","text":"<pre><code>#define HGATP32_VMID 0x1FC00000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp32_ppn","title":"define HGATP32_PPN","text":"<pre><code>#define HGATP32_PPN 0x003FFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp64_mode","title":"define HGATP64_MODE","text":"<pre><code>#define HGATP64_MODE 0xF000000000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp64_vmid","title":"define HGATP64_VMID","text":"<pre><code>#define HGATP64_VMID 0x03FFF00000000000\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp64_ppn","title":"define HGATP64_PPN","text":"<pre><code>#define HGATP64_PPN 0x00000FFFFFFFFFFF\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_off","title":"define HGATP_MODE_OFF","text":"<pre><code>#define HGATP_MODE_OFF 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_sv32x4","title":"define HGATP_MODE_SV32X4","text":"<pre><code>#define HGATP_MODE_SV32X4 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_sv39x4","title":"define HGATP_MODE_SV39X4","text":"<pre><code>#define HGATP_MODE_SV39X4 8\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-hgatp_mode_sv48x4","title":"define HGATP_MODE_SV48X4","text":"<pre><code>#define HGATP_MODE_SV48X4 9\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_r","title":"define PMP_R","text":"<pre><code>#define PMP_R 0x01\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_w","title":"define PMP_W","text":"<pre><code>#define PMP_W 0x02\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_x","title":"define PMP_X","text":"<pre><code>#define PMP_X 0x04\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_a","title":"define PMP_A","text":"<pre><code>#define PMP_A 0x18\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_l","title":"define PMP_L","text":"<pre><code>#define PMP_L 0x80\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_shift","title":"define PMP_SHIFT","text":"<pre><code>#define PMP_SHIFT 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_tor","title":"define PMP_TOR","text":"<pre><code>#define PMP_TOR 0x08\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_na4","title":"define PMP_NA4","text":"<pre><code>#define PMP_NA4 0x10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pmp_napot","title":"define PMP_NAPOT","text":"<pre><code>#define PMP_NAPOT 0x18\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_u_soft","title":"define IRQ_U_SOFT","text":"<pre><code>#define IRQ_U_SOFT 0\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_soft","title":"define IRQ_S_SOFT","text":"<pre><code>#define IRQ_S_SOFT 1\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_vs_soft","title":"define IRQ_VS_SOFT","text":"<pre><code>#define IRQ_VS_SOFT 2\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_soft","title":"define IRQ_M_SOFT","text":"<pre><code>#define IRQ_M_SOFT 3\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_u_timer","title":"define IRQ_U_TIMER","text":"<pre><code>#define IRQ_U_TIMER 4\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_timer","title":"define IRQ_S_TIMER","text":"<pre><code>#define IRQ_S_TIMER 5\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_vs_timer","title":"define IRQ_VS_TIMER","text":"<pre><code>#define IRQ_VS_TIMER 6\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_timer","title":"define IRQ_M_TIMER","text":"<pre><code>#define IRQ_M_TIMER 7\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_u_ext","title":"define IRQ_U_EXT","text":"<pre><code>#define IRQ_U_EXT 8\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_ext","title":"define IRQ_S_EXT","text":"<pre><code>#define IRQ_S_EXT 9\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_vs_ext","title":"define IRQ_VS_EXT","text":"<pre><code>#define IRQ_VS_EXT 10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_ext","title":"define IRQ_M_EXT","text":"<pre><code>#define IRQ_M_EXT 11\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_gext","title":"define IRQ_S_GEXT","text":"<pre><code>#define IRQ_S_GEXT 12\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_cop","title":"define IRQ_COP","text":"<pre><code>#define IRQ_COP 12\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_host","title":"define IRQ_HOST","text":"<pre><code>#define IRQ_HOST 13\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_m_cluster","title":"define IRQ_M_CLUSTER","text":"<pre><code>#define IRQ_M_CLUSTER 19\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-irq_s_cluster","title":"define IRQ_S_CLUSTER","text":"<pre><code>#define IRQ_S_CLUSTER 17\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_v","title":"define PTE_V","text":"<pre><code>#define PTE_V 0x001                 /* Valid */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_r","title":"define PTE_R","text":"<pre><code>#define PTE_R 0x002                 /* Read */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_w","title":"define PTE_W","text":"<pre><code>#define PTE_W 0x004                 /* Write */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_x","title":"define PTE_X","text":"<pre><code>#define PTE_X 0x008                 /* Execute */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_u","title":"define PTE_U","text":"<pre><code>#define PTE_U 0x010                 /* User */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_g","title":"define PTE_G","text":"<pre><code>#define PTE_G 0x020                 /* Global */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_a","title":"define PTE_A","text":"<pre><code>#define PTE_A 0x040                 /* Accessed */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_d","title":"define PTE_D","text":"<pre><code>#define PTE_D 0x080                 /* Dirty */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_soft","title":"define PTE_SOFT","text":"<pre><code>#define PTE_SOFT 0x300              /* Reserved for Software */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_rsvd","title":"define PTE_RSVD","text":"<pre><code>#define PTE_RSVD 0x1FC0000000000000 /* Reserved for future standard use */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_pbmt","title":"define PTE_PBMT","text":"<pre><code>#define PTE_PBMT 0x6000000000000000 /* Svpbmt: Page-based memory types */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_n","title":"define PTE_N","text":"<pre><code>#define PTE_N 0x8000000000000000    /* Svnapot: NAPOT translation contiguity */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_attr","title":"define PTE_ATTR","text":"<pre><code>#define PTE_ATTR 0xFFC0000000000000 /* All attributes and reserved bits */\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_ppn_shift","title":"define PTE_PPN_SHIFT","text":"<pre><code>#define PTE_PPN_SHIFT 10\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#define-pte_table","title":"define PTE_TABLE","text":"<pre><code>#define PTE_TABLE(\nPTE\n)\n(((PTE) &amp; (PTE_V | PTE_R | PTE_W | PTE_X)) == PTE_V)\n</code></pre>"},{"location":"runtime/Files/encoding_8h/#source-code","title":"Source code","text":"<pre><code>/* See LICENSE for license details. */\n\n#ifndef RISCV_CSR_ENCODING_H\n#define RISCV_CSR_ENCODING_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#define MSTATUS_UIE 0x00000001\n#define MSTATUS_SIE 0x00000002\n#define MSTATUS_HIE 0x00000004\n#define MSTATUS_MIE 0x00000008\n#define MSTATUS_UPIE 0x00000010\n#define MSTATUS_SPIE 0x00000020\n#define MSTATUS_UBE 0x00000040\n#define MSTATUS_MPIE 0x00000080\n#define MSTATUS_SPP 0x00000100\n#define MSTATUS_VS 0x00000600\n#define MSTATUS_MPP 0x00001800\n#define MSTATUS_FS 0x00006000\n#define MSTATUS_XS 0x00018000\n#define MSTATUS_MPRV 0x00020000\n#define MSTATUS_SUM 0x00040000\n#define MSTATUS_MXR 0x00080000\n#define MSTATUS_TVM 0x00100000\n#define MSTATUS_TW 0x00200000\n#define MSTATUS_TSR 0x00400000\n#define MSTATUS32_SD 0x80000000\n#define MSTATUS_UXL 0x0000000300000000\n#define MSTATUS_SXL 0x0000000C00000000\n#define MSTATUS_SBE 0x0000001000000000\n#define MSTATUS_MBE 0x0000002000000000\n#define MSTATUS_GVA 0x0000004000000000\n#define MSTATUS_MPV 0x0000008000000000\n#define MSTATUS64_SD 0x8000000000000000\n\n#define MSTATUSH_SBE 0x00000010\n#define MSTATUSH_MBE 0x00000020\n\n#define SSTATUS_UIE 0x00000001\n#define SSTATUS_SIE 0x00000002\n#define SSTATUS_UPIE 0x00000010\n#define SSTATUS_SPIE 0x00000020\n#define SSTATUS_UBE 0x00000040\n#define SSTATUS_SPP 0x00000100\n#define SSTATUS_VS 0x00000600\n#define SSTATUS_FS 0x00006000\n#define SSTATUS_XS 0x00018000\n#define SSTATUS_SUM 0x00040000\n#define SSTATUS_MXR 0x00080000\n#define SSTATUS32_SD 0x80000000\n#define SSTATUS_UXL 0x0000000300000000\n#define SSTATUS64_SD 0x8000000000000000\n\n#define SSTATUS_VS_MASK                                                    \\\n    (SSTATUS_SIE | SSTATUS_SPIE | SSTATUS_SPP | SSTATUS_FS | SSTATUS_SUM | \\\n     SSTATUS_MXR | SSTATUS_UXL)\n\n#define HSTATUS_VSXL 0x300000000\n#define HSTATUS_VTSR 0x00400000\n#define HSTATUS_VTW 0x00200000\n#define HSTATUS_VTVM 0x00100000\n#define HSTATUS_VGEIN 0x0003f000\n#define HSTATUS_HU 0x00000200\n#define HSTATUS_SPVP 0x00000100\n#define HSTATUS_SPV 0x00000080\n#define HSTATUS_GVA 0x00000040\n#define HSTATUS_VSBE 0x00000020\n\n#define USTATUS_UIE 0x00000001\n#define USTATUS_UPIE 0x00000010\n\n#define DCSR_XDEBUGVER (3U &lt;&lt; 30)\n#define DCSR_NDRESET (1 &lt;&lt; 29)\n#define DCSR_FULLRESET (1 &lt;&lt; 28)\n#define DCSR_EBREAKM (1 &lt;&lt; 15)\n#define DCSR_EBREAKH (1 &lt;&lt; 14)\n#define DCSR_EBREAKS (1 &lt;&lt; 13)\n#define DCSR_EBREAKU (1 &lt;&lt; 12)\n#define DCSR_STOPCYCLE (1 &lt;&lt; 10)\n#define DCSR_STOPTIME (1 &lt;&lt; 9)\n#define DCSR_CAUSE (7 &lt;&lt; 6)\n#define DCSR_DEBUGINT (1 &lt;&lt; 5)\n#define DCSR_HALT (1 &lt;&lt; 3)\n#define DCSR_STEP (1 &lt;&lt; 2)\n#define DCSR_PRV (3 &lt;&lt; 0)\n\n#define DCSR_CAUSE_NONE 0\n#define DCSR_CAUSE_SWBP 1\n#define DCSR_CAUSE_HWBP 2\n#define DCSR_CAUSE_DEBUGINT 3\n#define DCSR_CAUSE_STEP 4\n#define DCSR_CAUSE_HALT 5\n#define DCSR_CAUSE_GROUP 6\n\n#define MCONTROL_TYPE(xlen) (0xfULL &lt;&lt; ((xlen)-4))\n#define MCONTROL_DMODE(xlen) (1ULL &lt;&lt; ((xlen)-5))\n#define MCONTROL_MASKMAX(xlen) (0x3fULL &lt;&lt; ((xlen)-11))\n\n#define MCONTROL_SELECT (1 &lt;&lt; 19)\n#define MCONTROL_TIMING (1 &lt;&lt; 18)\n#define MCONTROL_ACTION (0x3f &lt;&lt; 12)\n#define MCONTROL_CHAIN (1 &lt;&lt; 11)\n#define MCONTROL_MATCH (0xf &lt;&lt; 7)\n#define MCONTROL_M (1 &lt;&lt; 6)\n#define MCONTROL_H (1 &lt;&lt; 5)\n#define MCONTROL_S (1 &lt;&lt; 4)\n#define MCONTROL_U (1 &lt;&lt; 3)\n#define MCONTROL_EXECUTE (1 &lt;&lt; 2)\n#define MCONTROL_STORE (1 &lt;&lt; 1)\n#define MCONTROL_LOAD (1 &lt;&lt; 0)\n\n#define MCONTROL_TYPE_NONE 0\n#define MCONTROL_TYPE_MATCH 2\n\n#define MCONTROL_ACTION_DEBUG_EXCEPTION 0\n#define MCONTROL_ACTION_DEBUG_MODE 1\n#define MCONTROL_ACTION_TRACE_START 2\n#define MCONTROL_ACTION_TRACE_STOP 3\n#define MCONTROL_ACTION_TRACE_EMIT 4\n\n#define MCONTROL_MATCH_EQUAL 0\n#define MCONTROL_MATCH_NAPOT 1\n#define MCONTROL_MATCH_GE 2\n#define MCONTROL_MATCH_LT 3\n#define MCONTROL_MATCH_MASK_LOW 4\n#define MCONTROL_MATCH_MASK_HIGH 5\n\n#define MIP_USIP (1 &lt;&lt; IRQ_U_SOFT)\n#define MIP_SSIP (1 &lt;&lt; IRQ_S_SOFT)\n#define MIP_VSSIP (1 &lt;&lt; IRQ_VS_SOFT)\n#define MIP_MSIP (1 &lt;&lt; IRQ_M_SOFT)\n#define MIP_UTIP (1 &lt;&lt; IRQ_U_TIMER)\n#define MIP_STIP (1 &lt;&lt; IRQ_S_TIMER)\n#define MIP_VSTIP (1 &lt;&lt; IRQ_VS_TIMER)\n#define MIP_MTIP (1 &lt;&lt; IRQ_M_TIMER)\n#define MIP_UEIP (1 &lt;&lt; IRQ_U_EXT)\n#define MIP_SEIP (1 &lt;&lt; IRQ_S_EXT)\n#define MIP_VSEIP (1 &lt;&lt; IRQ_VS_EXT)\n#define MIP_MEIP (1 &lt;&lt; IRQ_M_EXT)\n#define MIP_SGEIP (1 &lt;&lt; IRQ_S_GEXT)\n#define SIP_SCIP (1 &lt;&lt; IRQ_S_CLUSTER)\n#define MIP_MCIP (1 &lt;&lt; IRQ_M_CLUSTER)\n\n#define MIE_SSIE (1 &lt;&lt; IRQ_S_SOFT)\n#define MIE_HSIE (1 &lt;&lt; IRQ_H_SOFT)\n#define MIE_MSIE (1 &lt;&lt; IRQ_M_SOFT)\n#define MIE_STIE (1 &lt;&lt; IRQ_S_TIMER)\n#define MIE_HTIE (1 &lt;&lt; IRQ_H_TIMER)\n#define MIE_MTIE (1 &lt;&lt; IRQ_M_TIMER)\n#define MIE_SEIE (1 &lt;&lt; IRQ_S_EXT)\n#define MIE_HEIE (1 &lt;&lt; IRQ_H_EXT)\n#define MIE_MEIE (1 &lt;&lt; IRQ_M_EXT)\n#define MIE_SCIE (1 &lt;&lt; IRQ_S_CLUSTER)\n#define MIE_MCIE (1 &lt;&lt; IRQ_M_CLUSTER)\n\n#define MCAUSE_INTERRUPT 0x80000000\n\n#define MIP_S_MASK (MIP_SSIP | MIP_STIP | MIP_SEIP)\n#define MIP_VS_MASK (MIP_VSSIP | MIP_VSTIP | MIP_VSEIP)\n#define MIP_HS_MASK (MIP_VS_MASK | MIP_SGEIP)\n\n#define MIDELEG_FORCED_MASK MIP_HS_MASK\n\n#define SIP_SSIP MIP_SSIP\n#define SIP_STIP MIP_STIP\n\n#define PRV_U 0\n#define PRV_S 1\n#define PRV_M 3\n\n#define PRV_HS (PRV_S + 1)\n\n#define SATP32_MODE 0x80000000\n#define SATP32_ASID 0x7FC00000\n#define SATP32_PPN 0x003FFFFF\n#define SATP64_MODE 0xF000000000000000\n#define SATP64_ASID 0x0FFFF00000000000\n#define SATP64_PPN 0x00000FFFFFFFFFFF\n\n#define SATP_MODE_OFF 0\n#define SATP_MODE_SV32 1\n#define SATP_MODE_SV39 8\n#define SATP_MODE_SV48 9\n#define SATP_MODE_SV57 10\n#define SATP_MODE_SV64 11\n\n#define HGATP32_MODE 0x80000000\n#define HGATP32_VMID 0x1FC00000\n#define HGATP32_PPN 0x003FFFFF\n\n#define HGATP64_MODE 0xF000000000000000\n#define HGATP64_VMID 0x03FFF00000000000\n#define HGATP64_PPN 0x00000FFFFFFFFFFF\n\n#define HGATP_MODE_OFF 0\n#define HGATP_MODE_SV32X4 1\n#define HGATP_MODE_SV39X4 8\n#define HGATP_MODE_SV48X4 9\n\n#define PMP_R 0x01\n#define PMP_W 0x02\n#define PMP_X 0x04\n#define PMP_A 0x18\n#define PMP_L 0x80\n#define PMP_SHIFT 2\n\n#define PMP_TOR 0x08\n#define PMP_NA4 0x10\n#define PMP_NAPOT 0x18\n\n#define IRQ_U_SOFT 0\n#define IRQ_S_SOFT 1\n#define IRQ_VS_SOFT 2\n#define IRQ_M_SOFT 3\n#define IRQ_U_TIMER 4\n#define IRQ_S_TIMER 5\n#define IRQ_VS_TIMER 6\n#define IRQ_M_TIMER 7\n#define IRQ_U_EXT 8\n#define IRQ_S_EXT 9\n#define IRQ_VS_EXT 10\n#define IRQ_M_EXT 11\n#define IRQ_S_GEXT 12\n#define IRQ_COP 12\n#define IRQ_HOST 13\n#define IRQ_M_CLUSTER 19\n#define IRQ_S_CLUSTER 17\n\n/* page table entry (PTE) fields */\n#define PTE_V 0x001                 /* Valid */\n#define PTE_R 0x002                 /* Read */\n#define PTE_W 0x004                 /* Write */\n#define PTE_X 0x008                 /* Execute */\n#define PTE_U 0x010                 /* User */\n#define PTE_G 0x020                 /* Global */\n#define PTE_A 0x040                 /* Accessed */\n#define PTE_D 0x080                 /* Dirty */\n#define PTE_SOFT 0x300              /* Reserved for Software */\n#define PTE_RSVD 0x1FC0000000000000 /* Reserved for future standard use */\n#define PTE_PBMT 0x6000000000000000 /* Svpbmt: Page-based memory types */\n#define PTE_N 0x8000000000000000    /* Svnapot: NAPOT translation contiguity */\n#define PTE_ATTR 0xFFC0000000000000 /* All attributes and reserved bits */\n\n#define PTE_PPN_SHIFT 10\n\n#define PTE_TABLE(PTE) (((PTE) &amp; (PTE_V | PTE_R | PTE_W | PTE_X)) == PTE_V)\n\n#ifdef __riscv\n\n#if __riscv_xlen == 64\n#define MSTATUS_SD MSTATUS64_SD\n#define SSTATUS_SD SSTATUS64_SD\n#define RISCV_PGLEVEL_BITS 9\n#define SATP_MODE SATP64_MODE\n#else\n#define MSTATUS_SD MSTATUS32_SD\n#define SSTATUS_SD SSTATUS32_SD\n#define RISCV_PGLEVEL_BITS 10\n#define SATP_MODE SATP32_MODE\n#endif\n#define RISCV_PGSHIFT 12\n#define RISCV_PGSIZE (1 &lt;&lt; RISCV_PGSHIFT)\n\n#ifndef __ASSEMBLER__\n\n#ifdef __GNUC__\n\n#define read_csr(reg)                                 \\\n    ({                                                \\\n        unsigned long __tmp;                          \\\n        asm volatile(\"csrr %0, \" #reg : \"=r\"(__tmp)); \\\n        __tmp;                                        \\\n    })\n\n#define write_csr(reg, val) ({ asm volatile(\"csrw \" #reg \", %0\" ::\"rK\"(val)); })\n\n#define swap_csr(reg, val)                                                \\\n    ({                                                                    \\\n        unsigned long __tmp;                                              \\\n        asm volatile(\"csrrw %0, \" #reg \", %1\" : \"=r\"(__tmp) : \"rK\"(val)); \\\n        __tmp;                                                            \\\n    })\n\n#define set_csr(reg, bit)                                                 \\\n    ({                                                                    \\\n        unsigned long __tmp;                                              \\\n        asm volatile(\"csrrs %0, \" #reg \", %1\" : \"=r\"(__tmp) : \"rK\"(bit)); \\\n        __tmp;                                                            \\\n    })\n\n#define clear_csr(reg, bit)                                               \\\n    ({                                                                    \\\n        unsigned long __tmp;                                              \\\n        asm volatile(\"csrrc %0, \" #reg \", %1\" : \"=r\"(__tmp) : \"rK\"(bit)); \\\n        __tmp;                                                            \\\n    })\n\n#define rdtime() read_csr(time)\n#define rdcycle() read_csr(cycle)\n#define rdinstret() read_csr(instret)\n\n#endif  // __GNUC__\n\n#endif  // __ASSEMBLER__\n\n#endif  // __riscv\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif  // RISCV_CSR_ENCODING_H\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/eu_8h/","title":"snRuntime/include/eu.h","text":""},{"location":"runtime/Files/eu_8h/#functions","title":"Functions","text":"Name void eu_init(void )Initialize the event unit. void eu_exit(uint32_t core_idx)send all workers in loop to exit() void eu_event_loop(uint32_t cluster_core_idx)Enter the event unit loop, never exits. int eu_dispatch_push(void()(void , uint32_t) fn, uint32_t argc, void * data, uint32_t nthreads)Set function to execute by <code>nthreads</code> number of threads. void eu_run_empty(uint32_t core_idx)wait for all workers to idle void eu_print_status()Debugging info to printf. void eu_mutex_lock()Acquires the event unit mutex, exits only on success. void eu_mutex_release()Releases the acquired mutex. uint32_t eu_get_workers_in_loop() uint32_t eu_get_workers_in_wfi()"},{"location":"runtime/Files/eu_8h/#defines","title":"Defines","text":"Name EU_PRINTF(d, ...)"},{"location":"runtime/Files/eu_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/eu_8h/#function-eu_init","title":"function eu_init","text":"<pre><code>void eu_init(\nvoid )\n</code></pre> <p>Initialize the event unit. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_exit","title":"function eu_exit","text":"<pre><code>void eu_exit(\nuint32_t core_idx\n)\n</code></pre> <p>send all workers in loop to exit() </p> <p>Parameters: </p> <ul> <li>core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_event_loop","title":"function eu_event_loop","text":"<pre><code>void eu_event_loop(\nuint32_t cluster_core_idx\n)\n</code></pre> <p>Enter the event unit loop, never exits. </p> <p>Parameters: </p> <ul> <li>cluster_core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_dispatch_push","title":"function eu_dispatch_push","text":"<pre><code>int eu_dispatch_push(\nvoid(*)(void *, uint32_t) fn,\nuint32_t argc,\nvoid * data,\nuint32_t nthreads\n)\n</code></pre> <p>Set function to execute by <code>nthreads</code> number of threads. </p> <p>Parameters: </p> <ul> <li>fn pointer to worker function to be executed </li> <li>data pointer to function arguments </li> <li>argc number of elements in data </li> <li>nthreads number of threads that have to execute this event </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_run_empty","title":"function eu_run_empty","text":"<pre><code>void eu_run_empty(\nuint32_t core_idx\n)\n</code></pre> <p>wait for all workers to idle </p> <p>Parameters: </p> <ul> <li>core_idx cluster-local core index </li> </ul>"},{"location":"runtime/Files/eu_8h/#function-eu_print_status","title":"function eu_print_status","text":"<pre><code>void eu_print_status()\n</code></pre> <p>Debugging info to printf. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_mutex_lock","title":"function eu_mutex_lock","text":"<pre><code>void eu_mutex_lock()\n</code></pre> <p>Acquires the event unit mutex, exits only on success. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_mutex_release","title":"function eu_mutex_release","text":"<pre><code>void eu_mutex_release()\n</code></pre> <p>Releases the acquired mutex. </p>"},{"location":"runtime/Files/eu_8h/#function-eu_get_workers_in_loop","title":"function eu_get_workers_in_loop","text":"<pre><code>uint32_t eu_get_workers_in_loop()\n</code></pre> <p>Getters </p>"},{"location":"runtime/Files/eu_8h/#function-eu_get_workers_in_wfi","title":"function eu_get_workers_in_wfi","text":"<pre><code>uint32_t eu_get_workers_in_wfi()\n</code></pre>"},{"location":"runtime/Files/eu_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/eu_8h/#define-eu_printf","title":"define EU_PRINTF","text":"<pre><code>#define EU_PRINTF(\nd,\n...\n)\n</code></pre>"},{"location":"runtime/Files/eu_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\n#include \"snrt.h\"\n\nvoid eu_init(void);\n\nvoid eu_exit(uint32_t core_idx);\n\nvoid eu_event_loop(uint32_t cluster_core_idx);\n\nint eu_dispatch_push(void (*fn)(void *, uint32_t), uint32_t argc, void *data,\nuint32_t nthreads);\n\nvoid eu_run_empty(uint32_t core_idx);\n\nvoid eu_print_status();\n\nvoid eu_mutex_lock();\n\nvoid eu_mutex_release();\n\nuint32_t eu_get_workers_in_loop();\nuint32_t eu_get_workers_in_wfi();\n\n//================================================================================\n// debug\n//================================================================================\n\n#ifdef EU_DEBUG_LEVEL\n#include \"printf.h\"\n#define _EU_PRINTF(...)             \\\n    if (1) {                        \\\n        printf(\"[eu] \"__VA_ARGS__); \\\n    }\n#define EU_PRINTF(d, ...)        \\\n    if (EU_DEBUG_LEVEL &gt;= d) {   \\\n        _EU_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define EU_PRINTF(d, ...)\n#endif\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/gemm_8h/","title":"applications/src/kernels/gemm.h","text":""},{"location":"runtime/Files/gemm_8h/#functions","title":"Functions","text":"Name void gemm_fp64_baseline(uint32_t M, uint32_t N, uint32_t K, double * A, uint32_t ldA, uint32_t ta, double * B, uint32_t ldB, uint32_t tb, double * C, uint32_t ldC, const double ALPHA)baseline implementation of a FP64 GEMM void gemm_fp64_opt(uint32_t M, uint32_t N, uint32_t K, double * A, uint32_t ldA, uint32_t ta, double * B, uint32_t ldB, uint32_t tb, double * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a FP64 GEMM with configured SSRs and frep loop. void gemm_fp32_opt(const uint32_t M, const uint32_t N, const uint32_t K, float * A, const uint32_t ldA, float * B, const uint32_t ldB, float * C, const uint32_t ldC, const uint32_t * ALPHA, const uint32_t setup_SSR)implementation of a FP32 SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. void gemm_fp16_opt(uint32_t M, uint32_t N, uint32_t K, __fp16 * A, uint32_t ldA, __fp16 * B, uint32_t ldB, __fp16 * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a non-expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. void gemm_fp16_ex_opt(uint32_t M, uint32_t N, uint32_t K, __fp16 * A, uint32_t ldA, __fp16 * B, uint32_t ldB, __fp16 * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a FP16 -&gt; FP32 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. void gemm_fp8_ex_opt(uint32_t M, uint32_t N, uint32_t K, char * A, uint32_t ldA, char * B, uint32_t ldB, char * C, uint32_t ldC, const uint32_t * ALPHA, uint32_t setup_SSR)implementation of a FP8-&gt;FP16 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions."},{"location":"runtime/Files/gemm_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/gemm_8h/#function-gemm_fp64_baseline","title":"function gemm_fp64_baseline","text":"<pre><code>void gemm_fp64_baseline(\nuint32_t M,\nuint32_t N,\nuint32_t K,\ndouble * A,\nuint32_t ldA,\nuint32_t ta,\ndouble * B,\nuint32_t ldB,\nuint32_t tb,\ndouble * C,\nuint32_t ldC,\nconst double ALPHA\n)\n</code></pre> <p>baseline implementation of a FP64 GEMM </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>ta transposed memory layout for matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>tb transposed memory layout for matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> </ul>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp64_opt","title":"function gemm_fp64_opt","text":"<pre><code>void gemm_fp64_opt(\nuint32_t M,\nuint32_t N,\nuint32_t K,\ndouble * A,\nuint32_t ldA,\nuint32_t ta,\ndouble * B,\nuint32_t ldB,\nuint32_t tb,\ndouble * C,\nuint32_t ldC,\nconst uint32_t * ALPHA,\nuint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP64 GEMM with configured SSRs and frep loop. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>ta transposed memory layout for matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>tb transposed memory layout for matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp32_opt","title":"function gemm_fp32_opt","text":"<pre><code>void gemm_fp32_opt(\nconst uint32_t M,\nconst uint32_t N,\nconst uint32_t K,\nfloat * A,\nconst uint32_t ldA,\nfloat * B,\nconst uint32_t ldB,\nfloat * C,\nconst uint32_t ldC,\nconst uint32_t * ALPHA,\nconst uint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP32 SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp16_opt","title":"function gemm_fp16_opt","text":"<pre><code>void gemm_fp16_opt(\nuint32_t M,\nuint32_t N,\nuint32_t K,\n__fp16 * A,\nuint32_t ldA,\n__fp16 * B,\nuint32_t ldB,\n__fp16 * C,\nuint32_t ldC,\nconst uint32_t * ALPHA,\nuint32_t setup_SSR\n)\n</code></pre> <p>implementation of a non-expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp16_ex_opt","title":"function gemm_fp16_ex_opt","text":"<pre><code>void gemm_fp16_ex_opt(\nuint32_t M,\nuint32_t N,\nuint32_t K,\n__fp16 * A,\nuint32_t ldA,\n__fp16 * B,\nuint32_t ldB,\n__fp16 * C,\nuint32_t ldC,\nconst uint32_t * ALPHA,\nuint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP16 -&gt; FP32 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#function-gemm_fp8_ex_opt","title":"function gemm_fp8_ex_opt","text":"<pre><code>void gemm_fp8_ex_opt(\nuint32_t M,\nuint32_t N,\nuint32_t K,\nchar * A,\nuint32_t ldA,\nchar * B,\nuint32_t ldB,\nchar * C,\nuint32_t ldC,\nconst uint32_t * ALPHA,\nuint32_t setup_SSR\n)\n</code></pre> <p>implementation of a FP8-&gt;FP16 expanding SIMD GEMM with configured SSRs and frep loop. Matrix B has to be stored in transposed/consecutive memory layout in order to support SIMD instructions. </p> <p>Parameters: </p> <ul> <li>M number of rows of matrix A </li> <li>N number of columns of matrix B </li> <li>K number of columns of matrix A </li> <li>A pointer to matrix A </li> <li>ldA row stride in matrix A </li> <li>B pointer to matrix B </li> <li>ldB row stride in matrix B </li> <li>C pointer to matrix C </li> <li>ldC row stride in matrix C </li> <li>ALPHA accmulate factor of C </li> <li>setup_SSR setup SSR bounds and strides </li> </ul> <p>Return: * void </p>"},{"location":"runtime/Files/gemm_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\nvoid gemm_fp64_baseline(uint32_t M, uint32_t N, uint32_t K, double* A,\nuint32_t ldA, uint32_t ta, double* B, uint32_t ldB,\nuint32_t tb, double* C, uint32_t ldC,\nconst double ALPHA);\n\nvoid gemm_fp64_opt(uint32_t M, uint32_t N, uint32_t K, double* A, uint32_t ldA,\nuint32_t ta, double* B, uint32_t ldB, uint32_t tb, double* C,\nuint32_t ldC, const uint32_t* ALPHA, uint32_t setup_SSR);\n\nvoid gemm_fp32_opt(const uint32_t M, const uint32_t N, const uint32_t K,\nfloat* A, const uint32_t ldA, float* B, const uint32_t ldB,\nfloat* C, const uint32_t ldC, const uint32_t* ALPHA,\nconst uint32_t setup_SSR);\n\nvoid gemm_fp16_opt(uint32_t M, uint32_t N, uint32_t K, __fp16* A, uint32_t ldA,\n__fp16* B, uint32_t ldB, __fp16* C, uint32_t ldC,\nconst uint32_t* ALPHA, uint32_t setup_SSR);\nvoid gemm_fp16_ex_opt(uint32_t M, uint32_t N, uint32_t K, __fp16* A,\nuint32_t ldA, __fp16* B, uint32_t ldB, __fp16* C,\nuint32_t ldC, const uint32_t* ALPHA, uint32_t setup_SSR);\n\nvoid gemm_fp8_ex_opt(uint32_t M, uint32_t N, uint32_t K, char* A, uint32_t ldA,\nchar* B, uint32_t ldB, char* C, uint32_t ldC,\nconst uint32_t* ALPHA, uint32_t setup_SSR);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/interface_8h/","title":"snRuntime/include/interface.h","text":""},{"location":"runtime/Files/interface_8h/#classes","title":"Classes","text":"Name struct ident"},{"location":"runtime/Files/interface_8h/#types","title":"Types","text":"Name enum kmp_int32 sched_type { kmp_sch_lower = 32, kmp_sch_static_chunked = 33, kmp_sch_static = 34, kmp_sch_dynamic_chunked = 35, kmp_sch_guided_chunked = 36, kmp_sch_runtime = 37, kmp_sch_auto = 38, kmp_sch_trapezoidal = 39, kmp_sch_static_greedy = 40, kmp_sch_static_balanced = 41, kmp_sch_guided_iterative_chunked = 42, kmp_sch_guided_analytical_chunked = 43, kmp_sch_static_steal = 44, kmp_sch_static_balanced_chunked = 45, kmp_sch_guided_simd = 46, kmp_sch_runtime_simd = 47, kmp_sch_upper, kmp_ord_lower = 64, kmp_ord_static_chunked = 65, kmp_ord_static = 66, kmp_ord_dynamic_chunked = 67, kmp_ord_guided_chunked = 68, kmp_ord_runtime = 69, kmp_ord_auto = 70, kmp_ord_trapezoidal = 71, kmp_ord_upper, kmp_distribute_static_chunked = 91, kmp_distribute_static = 92, kmp_nm_lower = 160, kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower), kmp_nm_static = 162, kmp_nm_dynamic_chunked = 163, kmp_nm_guided_chunked = 164, kmp_nm_runtime = 165, kmp_nm_auto = 166, kmp_nm_trapezoidal = 167, kmp_nm_static_greedy = 168, kmp_nm_static_balanced = 169, kmp_nm_guided_iterative_chunked = 170, kmp_nm_guided_analytical_chunked = 171, kmp_nm_static_steal = 172, kmp_nm_ord_static_chunked = 193, kmp_nm_ord_static = 194, kmp_nm_ord_dynamic_chunked = 195, kmp_nm_ord_guided_chunked = 196, kmp_nm_ord_runtime = 197, kmp_nm_ord_auto = 198, kmp_nm_ord_trapezoidal = 199, kmp_nm_upper, kmp_sch_modifier_monotonic = (1 &lt;&lt; 29), kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30), kmp_sch_default = kmp_sch_static} typedef int32_t kmp_int32 typedef uint32_t kmp_uint32 typedef int64_t kmp_int64 typedef uint64_t kmp_uint64 typedef kmp_uint64 _kmp_ptr64 typedef kmp_uint32 _kmp_ptr32 typedef struct ident ident_t"},{"location":"runtime/Files/interface_8h/#defines","title":"Defines","text":"Name SCHEDULE_WITHOUT_MODIFIERS(s) SCHEDULE_HAS_MONOTONIC(s) SCHEDULE_HAS_NONMONOTONIC(s) SCHEDULE_HAS_NO_MODIFIERS(s) SCHEDULE_GET_MODIFIERS(s) SCHEDULE_SET_MODIFIERS(s, m) SCHEDULE_NONMONOTONIC SCHEDULE_MONOTONIC"},{"location":"runtime/Files/interface_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/interface_8h/#enum-sched_type","title":"enum sched_type","text":"Enumerator Value Description kmp_sch_lower 32 lower bound for unordered values kmp_sch_static_chunked 33 kmp_sch_static 34 static unspecialized kmp_sch_dynamic_chunked 35 kmp_sch_guided_chunked 36 guided unspecialized kmp_sch_runtime 37 kmp_sch_auto 38 auto kmp_sch_trapezoidal 39 kmp_sch_static_greedy 40 kmp_sch_static_balanced 41 kmp_sch_guided_iterative_chunked 42 kmp_sch_guided_analytical_chunked 43 kmp_sch_static_steal 44 kmp_sch_static_balanced_chunked 45 kmp_sch_guided_simd 46 guided with chunk adjustment kmp_sch_runtime_simd 47 runtime with chunk adjustment kmp_sch_upper upper bound for unordered values kmp_ord_lower = 64 lower bound for ordered values, must be power of 2 kmp_ord_static_chunked 65 kmp_ord_static 66 ordered static unspecialized kmp_ord_dynamic_chunked 67 kmp_ord_guided_chunked 68 kmp_ord_runtime 69 kmp_ord_auto 70 ordered auto kmp_ord_trapezoidal 71 kmp_ord_upper upper bound for ordered values kmp_distribute_static_chunked 91 distribute static chunked kmp_distribute_static 92 distribute static unspecialized kmp_nm_lower 160 lower bound for nomerge values kmp_nm_static_chunked = (kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower) kmp_nm_static 162 static unspecialized kmp_nm_dynamic_chunked 163 kmp_nm_guided_chunked 164 guided unspecialized kmp_nm_runtime 165 kmp_nm_auto 166 auto kmp_nm_trapezoidal 167 kmp_nm_static_greedy 168 kmp_nm_static_balanced 169 kmp_nm_guided_iterative_chunked 170 kmp_nm_guided_analytical_chunked 171 kmp_nm_static_steal = 172 kmp_nm_ord_static_chunked 193 kmp_nm_ord_static 194 ordered static unspecialized kmp_nm_ord_dynamic_chunked 195 kmp_nm_ord_guided_chunked 196 kmp_nm_ord_runtime 197 kmp_nm_ord_auto 198 auto kmp_nm_ord_trapezoidal 199 kmp_nm_upper upper bound for nomerge values kmp_sch_modifier_monotonic = (1 &lt;&lt; 29) Set if the monotonic schedule modifier was present kmp_sch_modifier_nonmonotonic = (1 &lt;&lt; 30) Set if the nonmonotonic schedule modifier was present kmp_sch_default kmp_sch_static default scheduling algorithm <p>Describes the loop schedule to be used for a parallel for loop. </p>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_int32","title":"typedef kmp_int32","text":"<pre><code>typedef int32_t kmp_int32;\n</code></pre> <p>The ident structure that describes a source location. The struct is identical to the one in the kmp.h file. We maintain the same data structure for compatibility. </p>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_uint32","title":"typedef kmp_uint32","text":"<pre><code>typedef uint32_t kmp_uint32;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_int64","title":"typedef kmp_int64","text":"<pre><code>typedef int64_t kmp_int64;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-kmp_uint64","title":"typedef kmp_uint64","text":"<pre><code>typedef uint64_t kmp_uint64;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-_kmp_ptr64","title":"typedef _kmp_ptr64","text":"<pre><code>typedef kmp_uint64 _kmp_ptr64;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-_kmp_ptr32","title":"typedef _kmp_ptr32","text":"<pre><code>typedef kmp_uint32 _kmp_ptr32;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#typedef-ident_t","title":"typedef ident_t","text":"<pre><code>typedef struct ident ident_t;\n</code></pre>"},{"location":"runtime/Files/interface_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/interface_8h/#define-schedule_without_modifiers","title":"define SCHEDULE_WITHOUT_MODIFIERS","text":"<pre><code>#define SCHEDULE_WITHOUT_MODIFIERS(\ns\n)\n(enum sched_type)(                \\\n        (s) &amp; ~(kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic))\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_has_monotonic","title":"define SCHEDULE_HAS_MONOTONIC","text":"<pre><code>#define SCHEDULE_HAS_MONOTONIC(\ns\n)\n(((s)&amp;kmp_sch_modifier_monotonic) != 0)\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_has_nonmonotonic","title":"define SCHEDULE_HAS_NONMONOTONIC","text":"<pre><code>#define SCHEDULE_HAS_NONMONOTONIC(\ns\n)\n(((s)&amp;kmp_sch_modifier_nonmonotonic) != 0)\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_has_no_modifiers","title":"define SCHEDULE_HAS_NO_MODIFIERS","text":"<pre><code>#define SCHEDULE_HAS_NO_MODIFIERS(\ns\n)\n(((s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)) == 0)\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_get_modifiers","title":"define SCHEDULE_GET_MODIFIERS","text":"<pre><code>#define SCHEDULE_GET_MODIFIERS(\ns\n)\n((enum sched_type)(           \\\n        (s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)))\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_set_modifiers","title":"define SCHEDULE_SET_MODIFIERS","text":"<pre><code>#define SCHEDULE_SET_MODIFIERS(\ns,\nm\n)\n(s = (enum sched_type)((kmp_int32)s | (kmp_int32)m))\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_nonmonotonic","title":"define SCHEDULE_NONMONOTONIC","text":"<pre><code>#define SCHEDULE_NONMONOTONIC 0\n</code></pre>"},{"location":"runtime/Files/interface_8h/#define-schedule_monotonic","title":"define SCHEDULE_MONOTONIC","text":"<pre><code>#define SCHEDULE_MONOTONIC 1\n</code></pre>"},{"location":"runtime/Files/interface_8h/#source-code","title":"Source code","text":"<pre><code>// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.\n// See https://llvm.org/LICENSE.txt for license information.\n// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n\n#ifndef INTERFACE_H\n#define INTERFACE_H\n\n#include &lt;stdint.h&gt;\n\n// kmp specific types\n// Code taken from\n//     https://github.com/llvm/llvm-project/blob/main/openmp/runtime/src/kmp.h\n\ntypedef int32_t kmp_int32;\ntypedef uint32_t kmp_uint32;\ntypedef int64_t kmp_int64;\ntypedef uint64_t kmp_uint64;\ntypedef kmp_uint64 _kmp_ptr64;\ntypedef kmp_uint32 _kmp_ptr32;\n\ntypedef struct ident {\nkmp_int32 reserved_1; kmp_int32 flags; kmp_int32\nreserved_2; kmp_int32 reserved_3; char const *psource;  } ident_t;\n\nenum sched_type : kmp_int32 {\nkmp_sch_lower = 32, kmp_sch_static_chunked = 33,\nkmp_sch_static = 34, kmp_sch_dynamic_chunked = 35,\nkmp_sch_guided_chunked = 36, kmp_sch_runtime = 37,\nkmp_sch_auto = 38, kmp_sch_trapezoidal = 39,\n\n/* accessible only through KMP_SCHEDULE environment variable */\nkmp_sch_static_greedy = 40,\nkmp_sch_static_balanced = 41,\n/* accessible only through KMP_SCHEDULE environment variable */\nkmp_sch_guided_iterative_chunked = 42,\nkmp_sch_guided_analytical_chunked = 43,\n/* accessible only through KMP_SCHEDULE environment variable */\nkmp_sch_static_steal = 44,\n\n/* static with chunk adjustment (e.g., simd) */\nkmp_sch_static_balanced_chunked = 45,\nkmp_sch_guided_simd = 46,  kmp_sch_runtime_simd = 47, /* accessible only through KMP_SCHEDULE environment variable */\nkmp_sch_upper, kmp_ord_lower =\n64, kmp_ord_static_chunked = 65,\nkmp_ord_static = 66, kmp_ord_dynamic_chunked = 67,\nkmp_ord_guided_chunked = 68,\nkmp_ord_runtime = 69,\nkmp_ord_auto = 70, kmp_ord_trapezoidal = 71,\nkmp_ord_upper, /* Schedules for Distribute construct */\nkmp_distribute_static_chunked = 91, kmp_distribute_static = 92,         /* For the \"nomerge\" versions, kmp_dispatch_next*() will always return a\n       single iteration/chunk, even if the loop is serialized. For the schedule\n       types listed above, the entire iteration vector is returned if the loop\n       is serialized. This doesn't work for gcc/gcomp sections. */\nkmp_nm_lower = 160, kmp_nm_static_chunked =\n(kmp_sch_static_chunked - kmp_sch_lower + kmp_nm_lower),\nkmp_nm_static = 162, kmp_nm_dynamic_chunked = 163,\nkmp_nm_guided_chunked = 164, kmp_nm_runtime = 165,\nkmp_nm_auto = 166, kmp_nm_trapezoidal = 167,\n\n/* accessible only through KMP_SCHEDULE environment variable */\nkmp_nm_static_greedy = 168,\nkmp_nm_static_balanced = 169,\n/* accessible only through KMP_SCHEDULE environment variable */\nkmp_nm_guided_iterative_chunked = 170,\nkmp_nm_guided_analytical_chunked = 171,\nkmp_nm_static_steal =\n172, /* accessible only through OMP_SCHEDULE environment variable */\n\nkmp_nm_ord_static_chunked = 193,\nkmp_nm_ord_static = 194, kmp_nm_ord_dynamic_chunked = 195,\nkmp_nm_ord_guided_chunked = 196,\nkmp_nm_ord_runtime = 197,\nkmp_nm_ord_auto = 198, kmp_nm_ord_trapezoidal = 199,\nkmp_nm_upper, /* Support for OpenMP 4.5 monotonic and nonmonotonic schedule modifiers.\n       Since we need to distinguish the three possible cases (no modifier,\n       monotonic modifier, nonmonotonic modifier), we need separate bits for\n       each modifier. The absence of monotonic does not imply nonmonotonic,\n       especially since 4.5 says that the behaviour of the \"no modifier\" case is\n       implementation defined in 4.5, but will become \"nonmonotonic\" in 5.0.\n\n       Since we're passing a full 32 bit value, we can use a couple of high bits\n       for these flags; out of paranoia we avoid the sign bit.\n\n       These modifiers can be or-ed into non-static schedules by the compiler to\n       pass the additional information. They will be stripped early in the\n       processing in __kmp_dispatch_init when setting up schedules, so most of\n       the code won't ever see schedules with these bits set.  */\nkmp_sch_modifier_monotonic =\n(1 &lt;&lt; 29), kmp_sch_modifier_nonmonotonic =\n(1 &lt;&lt; 30), #define SCHEDULE_WITHOUT_MODIFIERS(s) \\\n    (enum sched_type)(                \\\n        (s) &amp; ~(kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic))\n#define SCHEDULE_HAS_MONOTONIC(s) (((s)&amp;kmp_sch_modifier_monotonic) != 0)\n#define SCHEDULE_HAS_NONMONOTONIC(s) (((s)&amp;kmp_sch_modifier_nonmonotonic) != 0)\n#define SCHEDULE_HAS_NO_MODIFIERS(s) \\\n    (((s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)) == 0)\n#define SCHEDULE_GET_MODIFIERS(s) \\\n    ((enum sched_type)(           \\\n        (s) &amp; (kmp_sch_modifier_nonmonotonic | kmp_sch_modifier_monotonic)))\n#define SCHEDULE_SET_MODIFIERS(s, m) \\\n    (s = (enum sched_type)((kmp_int32)s | (kmp_int32)m))\n#define SCHEDULE_NONMONOTONIC 0\n#define SCHEDULE_MONOTONIC 1\n\nkmp_sch_default = kmp_sch_static };\n\n#endif\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/kmp_8h/","title":"snRuntime/include/kmp.h","text":""},{"location":"runtime/Files/kmp_8h/#types","title":"Types","text":"Name typedef void()(kmp_int32 global_tid, kmp_int32 *bound_tid,...) kmpc_micro"},{"location":"runtime/Files/kmp_8h/#attributes","title":"Attributes","text":"Name _kmp_ptr32 * kmpc_args"},{"location":"runtime/Files/kmp_8h/#defines","title":"Defines","text":"Name KMP_PRINTF(d, ...)"},{"location":"runtime/Files/kmp_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/kmp_8h/#typedef-kmpc_micro","title":"typedef kmpc_micro","text":"<pre><code>typedef void(* kmpc_micro) (kmp_int32 *global_tid, kmp_int32 *bound_tid,...);\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/kmp_8h/#variable-kmpc_args","title":"variable kmpc_args","text":"<pre><code>_kmp_ptr32 * kmpc_args;\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/kmp_8h/#define-kmp_printf","title":"define KMP_PRINTF","text":"<pre><code>#define KMP_PRINTF(\nd,\n...\n)\n</code></pre>"},{"location":"runtime/Files/kmp_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include \"interface.h\"\n#include \"snrt.h\"\n\ntypedef void (*kmpc_micro)(kmp_int32 *global_tid, kmp_int32 *bound_tid, ...);\n\nextern _kmp_ptr32 *kmpc_args;\n\n// debug\n\n#ifdef KMP_DEBUG_LEVEL\n#include \"encoding.h\"\n#include \"printf.h\"\n#define _KMP_PRINTF(...)             \\\n    if (1) {                         \\\n        printf(\"[kmc] \"__VA_ARGS__); \\\n    }\n#define KMP_PRINTF(d, ...)        \\\n    if (KMP_DEBUG_LEVEL &gt;= d) {   \\\n        _KMP_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define KMP_PRINTF(d, ...)\n#endif\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/layer_8h/","title":"applications/include/layer.h","text":""},{"location":"runtime/Files/layer_8h/#classes","title":"Classes","text":"Name struct gemm_layer_struct This structure contains all parameters necessary for GEMM. struct conv_layer_struct This structure contains all parameters necessary for Convolutional layers."},{"location":"runtime/Files/layer_8h/#types","title":"Types","text":"Name enum precision_t { FP64 = 8, FP32 = 4, FP16 = 2, FP8 = 1} typedef struct gemm_layer_struct gemm_layer typedef struct conv_layer_struct conv_layer"},{"location":"runtime/Files/layer_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/layer_8h/#enum-precision_t","title":"enum precision_t","text":"Enumerator Value Description FP64 8 FP32 4 FP16 2 FP8 1"},{"location":"runtime/Files/layer_8h/#typedef-gemm_layer","title":"typedef gemm_layer","text":"<pre><code>typedef struct gemm_layer_struct gemm_layer;\n</code></pre>"},{"location":"runtime/Files/layer_8h/#typedef-conv_layer","title":"typedef conv_layer","text":"<pre><code>typedef struct conv_layer_struct conv_layer;\n</code></pre>"},{"location":"runtime/Files/layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\ntypedef enum { FP64 = 8, FP32 = 4, FP16 = 2, FP8 = 1 } precision_t;\n\ntypedef struct gemm_layer_struct {\nuint32_t M;\nuint32_t M_p;\nuint32_t N;\nuint32_t K;\n\nuint32_t TA;\nuint32_t TB;\n\nuint32_t TILE_M;\nuint32_t TILE_N;\nuint32_t TILE_K;\n\ndouble *A;\ndouble *B;\ndouble *C;\n\nuint32_t ALPHA;\n\nprecision_t dtype;\nuint32_t expand;\n} gemm_layer;\n\ntypedef struct conv_layer_struct {\n// CONV2D\nuint32_t CO;\nuint32_t CI;\nuint32_t IH;\nuint32_t IW;\nuint32_t OH;\nuint32_t OW;\nuint32_t FH;\nuint32_t FW;\nuint32_t pad;\n\ndouble *ifmap;\ndouble *weights;\ndouble *ofmap;\n\nuint32_t TILE_CI;\nuint32_t cluster2cluster;\nuint32_t im2col;\n\n// BATCHNORM\ndouble *gamma;\ndouble *beta;\n\nprecision_t dtype;\n} conv_layer;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/lto__a_8h/","title":"snRuntime/tests/lto_a.h","text":""},{"location":"runtime/Files/lto__a_8h/#functions","title":"Functions","text":"Name int foo1(void ) void foo2(void ) void foo4(void )"},{"location":"runtime/Files/lto__a_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/lto__a_8h/#function-foo1","title":"function foo1","text":"<pre><code>int foo1(\nvoid )\n</code></pre>"},{"location":"runtime/Files/lto__a_8h/#function-foo2","title":"function foo2","text":"<pre><code>void foo2(\nvoid )\n</code></pre>"},{"location":"runtime/Files/lto__a_8h/#function-foo4","title":"function foo4","text":"<pre><code>void foo4(\nvoid )\n</code></pre>"},{"location":"runtime/Files/lto__a_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\nextern int foo1(void);\nextern void foo2(void);\nextern void foo4(void);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/matmul_8h/","title":"benchmark/src/matmul/matmul.h","text":""},{"location":"runtime/Files/matmul_8h/#classes","title":"Classes","text":"Name struct gemm_result_t"},{"location":"runtime/Files/matmul_8h/#types","title":"Types","text":"Name typedef void()(uint32_t N, uint32_t M, uint32_t K, double A, uint32_t ldA, double B, uint32_t ldB, double C, uint32_t ldC) gemm_impl_t"},{"location":"runtime/Files/matmul_8h/#functions","title":"Functions","text":"Name gemm_result_t gemm_bench(gemm_impl_t gemm_impl) void gemm_seq_baseline(uint32_t N, uint32_t M, uint32_t K, double restrict A, uint32_t ldA, double restrict B, uint32_t ldB, double *restrict C, uint32_t ldC) void gemm_seq_ssr(uint32_t N, uint32_t M, uint32_t K, double restrict A, uint32_t ldA, double restrict B, uint32_t ldB, double *restrict C, uint32_t ldC) void gemm_seq_ssr_frep(uint32_t N, uint32_t M, uint32_t K, double restrict A, uint32_t ldA, double restrict B, uint32_t ldB, double *restrict C, uint32_t ldC)"},{"location":"runtime/Files/matmul_8h/#attributes","title":"Attributes","text":"Name uint32_t input_size double output_checksum"},{"location":"runtime/Files/matmul_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/matmul_8h/#typedef-gemm_impl_t","title":"typedef gemm_impl_t","text":"<pre><code>typedef void(* gemm_impl_t) (uint32_t N, uint32_t M, uint32_t K, double *A, uint32_t ldA, double *B, uint32_t ldB, double *C, uint32_t ldC);\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/matmul_8h/#function-gemm_bench","title":"function gemm_bench","text":"<pre><code>gemm_result_t gemm_bench(\ngemm_impl_t gemm_impl\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#function-gemm_seq_baseline","title":"function gemm_seq_baseline","text":"<pre><code>void gemm_seq_baseline(\nuint32_t N,\nuint32_t M,\nuint32_t K,\ndouble *restrict A,\nuint32_t ldA,\ndouble *restrict B,\nuint32_t ldB,\ndouble *restrict C,\nuint32_t ldC\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#function-gemm_seq_ssr","title":"function gemm_seq_ssr","text":"<pre><code>void gemm_seq_ssr(\nuint32_t N,\nuint32_t M,\nuint32_t K,\ndouble *restrict A,\nuint32_t ldA,\ndouble *restrict B,\nuint32_t ldB,\ndouble *restrict C,\nuint32_t ldC\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#function-gemm_seq_ssr_frep","title":"function gemm_seq_ssr_frep","text":"<pre><code>void gemm_seq_ssr_frep(\nuint32_t N,\nuint32_t M,\nuint32_t K,\ndouble *restrict A,\nuint32_t ldA,\ndouble *restrict B,\nuint32_t ldB,\ndouble *restrict C,\nuint32_t ldC\n)\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/matmul_8h/#variable-input_size","title":"variable input_size","text":"<pre><code>uint32_t input_size;\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#variable-output_checksum","title":"variable output_checksum","text":"<pre><code>double output_checksum;\n</code></pre>"},{"location":"runtime/Files/matmul_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n#include \"benchmark.h\"\n\nextern uint32_t input_size;\nextern double output_checksum[];\n\ntypedef struct {\nsize_t errors;\nsize_t cycles_core;\nsize_t cycles_total;\n} gemm_result_t;\n\ntypedef void (*gemm_impl_t)(uint32_t N, uint32_t M, uint32_t K, double *A,\nuint32_t ldA, double *B, uint32_t ldB, double *C,\nuint32_t ldC);\n\ngemm_result_t gemm_bench(gemm_impl_t gemm_impl);\n\nvoid gemm_seq_baseline(uint32_t N, uint32_t M, uint32_t K, double *restrict A,\nuint32_t ldA, double *restrict B, uint32_t ldB,\ndouble *restrict C, uint32_t ldC);\n\nvoid gemm_seq_ssr(uint32_t N, uint32_t M, uint32_t K, double *restrict A,\nuint32_t ldA, double *restrict B, uint32_t ldB,\ndouble *restrict C, uint32_t ldC);\n\nvoid gemm_seq_ssr_frep(uint32_t N, uint32_t M, uint32_t K, double *restrict A,\nuint32_t ldA, double *restrict B, uint32_t ldB,\ndouble *restrict C, uint32_t ldC);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/maxpool_8h/","title":"applications/src/kernels/maxpool.h","text":""},{"location":"runtime/Files/maxpool_8h/#functions","title":"Functions","text":"Name void maxpool_fp64(double * ifmap, double * ofmap, uint32_t CI, uint32_t FH, uint32_t FW, uint32_t compute_num)implementation of FP64 maxpooling"},{"location":"runtime/Files/maxpool_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/maxpool_8h/#function-maxpool_fp64","title":"function maxpool_fp64","text":"<pre><code>void maxpool_fp64(\ndouble * ifmap,\ndouble * ofmap,\nuint32_t CI,\nuint32_t FH,\nuint32_t FW,\nuint32_t compute_num\n)\n</code></pre> <p>implementation of FP64 maxpooling </p> <p>Parameters: </p> <ul> <li>ifmap pointer to input feature map </li> <li>ofmap pointer to output feature map </li> <li>CI number of input channels </li> <li>FH height of filter </li> <li>FW width of filter </li> <li>compute_num number of compute units </li> </ul>"},{"location":"runtime/Files/maxpool_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"snrt.h\"\n\nvoid maxpool_fp64(double *ifmap, double *ofmap, uint32_t CI, uint32_t FH,\nuint32_t FW, uint32_t compute_num);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/maxpool__layer_8h/","title":"applications/src/layers/maxpool_layer.h","text":""},{"location":"runtime/Files/maxpool__layer_8h/#functions","title":"Functions","text":"Name void maxpool_layer(const conv_layer * l)maxpool layer that handles data transfers in a double buffered fashion"},{"location":"runtime/Files/maxpool__layer_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/maxpool__layer_8h/#function-maxpool_layer","title":"function maxpool_layer","text":"<pre><code>void maxpool_layer(\nconst conv_layer * l\n)\n</code></pre> <p>maxpool layer that handles data transfers in a double buffered fashion </p> <p>Parameters: </p> <ul> <li>l conv_layer struct that holds addresses and parameters </li> </ul>"},{"location":"runtime/Files/maxpool__layer_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n\nvoid maxpool_layer(const conv_layer *l);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/network_8h/","title":"applications/include/network.h","text":""},{"location":"runtime/Files/network_8h/#classes","title":"Classes","text":"Name struct network_t_ This structure contains all parameters necessary for building a simple neural netowork. struct network_fp64_t_ struct network_fp32_t_ struct network_fp16_t_ struct network_fp8_t_ struct cnn_t_ struct network_benchmark_t_ struct network_single_cluster_t_"},{"location":"runtime/Files/network_8h/#types","title":"Types","text":"Name typedef struct network_t_ network_t typedef struct network_fp64_t_ network_fp64_t typedef struct network_fp32_t_ network_fp32_t typedef struct network_fp16_t_ network_fp16_t typedef struct network_fp8_t_ network_fp8_t typedef struct cnn_t_ cnn_t typedef struct network_benchmark_t_ network_benchmark_t typedef struct network_single_cluster_t_ network_single_cluster_t"},{"location":"runtime/Files/network_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/network_8h/#typedef-network_t","title":"typedef network_t","text":"<pre><code>typedef struct network_t_ network_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp64_t","title":"typedef network_fp64_t","text":"<pre><code>typedef struct network_fp64_t_ network_fp64_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp32_t","title":"typedef network_fp32_t","text":"<pre><code>typedef struct network_fp32_t_ network_fp32_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp16_t","title":"typedef network_fp16_t","text":"<pre><code>typedef struct network_fp16_t_ network_fp16_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_fp8_t","title":"typedef network_fp8_t","text":"<pre><code>typedef struct network_fp8_t_ network_fp8_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-cnn_t","title":"typedef cnn_t","text":"<pre><code>typedef struct cnn_t_ cnn_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_benchmark_t","title":"typedef network_benchmark_t","text":"<pre><code>typedef struct network_benchmark_t_ network_benchmark_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#typedef-network_single_cluster_t","title":"typedef network_single_cluster_t","text":"<pre><code>typedef struct network_single_cluster_t_ network_single_cluster_t;\n</code></pre>"},{"location":"runtime/Files/network_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\n#include \"layer.h\"\n\ntypedef struct network_t_ {\nuint32_t IN_CH1;\nuint32_t IN_CH2;\nuint32_t OUT_CH;\n\nfloat *b;\nfloat *W;\nfloat *b_grad;\nfloat *W_grad;\nfloat *images;\nuint32_t *targets;\n\nprecision_t dtype;\n\n} network_t;\n\ntypedef struct network_fp64_t_ {\nuint32_t IN_CH1;\nuint32_t IN_CH2;\nuint32_t OUT_CH;\n\ndouble *b;\ndouble *W;\ndouble *b_grad;\ndouble *W_grad;\n\ndouble *images;\nuint32_t *targets;\nfloat learning_rate;\n\nprecision_t dtype;\n\n} network_fp64_t;\n\ntypedef struct network_fp32_t_ {\nuint32_t IN_CH1;\nuint32_t IN_CH2;\nuint32_t OUT_CH;\n\nfloat *b;\nfloat *W;\nfloat *b_grad;\nfloat *W_grad;\n\nfloat *images;\nuint32_t *targets;\nfloat learning_rate;\n\nprecision_t dtype;\n\n} network_fp32_t;\n\ntypedef struct network_fp16_t_ {\nuint32_t IN_CH1;\nuint32_t IN_CH2;\nuint32_t OUT_CH;\n\n__fp16 *b;\n__fp16 *W;\n__fp16 *b_grad;\n__fp16 *W_grad;\n\n__fp16 *images;\nuint32_t *targets;\nfloat learning_rate;\n\nprecision_t dtype;\n\n} network_fp16_t;\n\ntypedef struct network_fp8_t_ {\nuint32_t IN_CH1;\nuint32_t IN_CH2;\nuint32_t OUT_CH;\n\nchar *b;\nchar *W;\nchar *b_grad;\nchar *W_grad;\n\nchar *images;\nuint32_t *targets;\nfloat learning_rate;\n\nprecision_t dtype;\n\n} network_fp8_t;\n\n// TODO: add description for MNIST CNN network struct\ntypedef struct cnn_t_ {\nuint16_t CO;\nuint16_t CI;\nuint16_t H;\nuint16_t W;\nuint16_t K;\nuint16_t M;\n\nuint16_t padding;\nuint16_t stride;\n\ndouble *image;\ndouble *conv1_weights;\ndouble *conv1_biases;\n\nprecision_t dtype;\n\n} cnn_t;\n\ntypedef struct network_benchmark_t_ {\nuint32_t IN_CH;\nuint32_t OUT_CH;\n\nvoid *b;\nvoid *W;\n\nvoid *images;\nuint32_t *targets;\n\nprecision_t dtype;\n\n} network_benchmark_t;\n\ntypedef struct network_single_cluster_t_ {\nuint32_t IN_CH;\nuint32_t OUT_CH;\n\nvoid *b;\nvoid *W;\n\nvoid *b_grads;\nvoid *W_grads;\n\nvoid *images;\nuint32_t *targets;\n\nprecision_t dtype;\n\n} network_single_cluster_t;\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/nnlinear__backend__baseline_8h/","title":"applications/src/layers/nnlinear_backend_baseline.h","text":""},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#functions","title":"Functions","text":"Name void nnlinear_backend_baseline(const network_fp32_t * n)MNIST baseline network handling data transfers &amp; function calls for a single core execution and no fancy optimizations like SSRs or FREP."},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#function-nnlinear_backend_baseline","title":"function nnlinear_backend_baseline","text":"<pre><code>void nnlinear_backend_baseline(\nconst network_fp32_t * n\n)\n</code></pre> <p>MNIST baseline network handling data transfers &amp; function calls for a single core execution and no fancy optimizations like SSRs or FREP. </p> <p>Parameters: </p> <ul> <li>n network_t struct holding all addresses and parameters which are in FP32 format </li> </ul>"},{"location":"runtime/Files/nnlinear__backend__baseline_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"network.h\"\n\nvoid nnlinear_backend_baseline(const network_fp32_t *n);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/nnlinear__baseline_8h/","title":"applications/src/kernels/nnlinear_baseline.h","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#classes","title":"Classes","text":"Name union v2s union v4s union v8s"},{"location":"runtime/Files/nnlinear__baseline_8h/#types","title":"Types","text":"Name typedef float v2f32((vector_size(8))) attribute"},{"location":"runtime/Files/nnlinear__baseline_8h/#functions","title":"Functions","text":"Name void SoftMax_baseline(float * activations, int length) void FeedForward_baseline(float * image, float * activations, float * biases, float * weights) void GradientUpdate_baseline(float * image, float * activations, float * biases, float * weights, float * W_gradients, float * b_gradients, uint32_t label, float * loss) void TrainingStep_baseline(float * biases, float * weights, float * W_gradients, float * b_gradients, float learning_rate)"},{"location":"runtime/Files/nnlinear__baseline_8h/#defines","title":"Defines","text":"Name NUM_CLASSES IN_CH BATCH_SIZE"},{"location":"runtime/Files/nnlinear__baseline_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#typedef-attribute","title":"typedef attribute","text":"<pre><code>typedef char v8f8 __attribute__((vector_size(8)));\n</code></pre>"},{"location":"runtime/Files/nnlinear__baseline_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#function-softmax_baseline","title":"function SoftMax_baseline","text":"<pre><code>static inline void SoftMax_baseline(\nfloat * activations,\nint length\n)\n</code></pre> <p>SoftMax calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#function-feedforward_baseline","title":"function FeedForward_baseline","text":"<pre><code>static inline void FeedForward_baseline(\nfloat * image,\nfloat * activations,\nfloat * biases,\nfloat * weights\n)\n</code></pre> <p>FeedForward calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#function-gradientupdate_baseline","title":"function GradientUpdate_baseline","text":"<pre><code>static inline void GradientUpdate_baseline(\nfloat * image,\nfloat * activations,\nfloat * biases,\nfloat * weights,\nfloat * W_gradients,\nfloat * b_gradients,\nuint32_t label,\nfloat * loss\n)\n</code></pre> <p>Gradient update calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#function-trainingstep_baseline","title":"function TrainingStep_baseline","text":"<pre><code>static inline void TrainingStep_baseline(\nfloat * biases,\nfloat * weights,\nfloat * W_gradients,\nfloat * b_gradients,\nfloat learning_rate\n)\n</code></pre> <p>Training step calculation </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/nnlinear__baseline_8h/#define-num_classes","title":"define NUM_CLASSES","text":"<pre><code>#define NUM_CLASSES 10\n</code></pre> <p>Baseline kernels for a single core execution </p>"},{"location":"runtime/Files/nnlinear__baseline_8h/#define-in_ch","title":"define IN_CH","text":"<pre><code>#define IN_CH 784\n</code></pre>"},{"location":"runtime/Files/nnlinear__baseline_8h/#define-batch_size","title":"define BATCH_SIZE","text":"<pre><code>#define BATCH_SIZE 256\n</code></pre>"},{"location":"runtime/Files/nnlinear__baseline_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include \"math.h\"\n#include \"printf.h\"\n#include \"snrt.h\"\n#include \"utils.h\"\n\ntypedef float v2f32 __attribute__((vector_size(8)));\ntypedef __fp16 v4f16 __attribute__((vector_size(8)));\ntypedef char v8f8 __attribute__((vector_size(8)));\n\ntypedef union {\ndouble f64;\nv2f32 vec;\n} v2s;\ntypedef union {\ndouble f64;\nv4f16 vec;\n} v4s;\ntypedef union {\ndouble f64;\nv8f8 vec;\n} v8s;\n\n#define NUM_CLASSES 10\n#define IN_CH 784\n#define BATCH_SIZE 256\n\nstatic inline void SoftMax_baseline(float *activations, int length) {\n// printf(\"============= SoftMax feedforward start =============\\n\");\nfloat sum = 0;\nfloat max = activations[0];\nint correct, predict = 0;\n\n// Get the maximum value of all activations\nfor (int i = 1; i &lt; length; i++) {\nif (activations[i] &gt; max) {\nmax = activations[i];\n}\n}\n\n// normalize\nfor (int i = 0; i &lt; length; i++) {\nactivations[i] = exp(activations[i] - max);\nsum += activations[i];\n}\n\n// compute softmax activations\nfor (int i = 0; i &lt; length; i++) {\nactivations[i] /= sum;\n// printf(\"activations[%d] = %f\\n\", i, activations[i]);\n}\n\n// printf(\"============= SoftMax feedforward end =============\\n\");\n\n// snrt_cluster_hw_barrier();\n}\n\nstatic inline void FeedForward_baseline(float *image, float *activations,\nfloat *biases, float *weights) {\n// printf(\"============= Feedforward pass start =============\\n\");\n\n// float checksum = 0;\n// float img_checksum = 0;\n// float weight_checksum = 0;\nfor (int i = 0; i &lt; NUM_CLASSES; i++) {\nactivations[i] = biases[i];\nfor (int j = 0; j &lt; IN_CH; j++) {\n// img_checksum += image[j];\n// weight_checksum += weights[i * IN_CH + j];\nactivations[i] += weights[i * IN_CH + j] * image[j];\n}\n\n// checksum += activations[i];\n\n// printf(\"activations[%d] = %f\\n\", i, activations[i]);\n}\n\n// printf(\"Activation checksum = %f\\n\", checksum);\n// printf(\"Image FeedForward checksum = %f\\n\", img_checksum);\n// printf(\"Weight FeedForward checksum = %f\\n\", weight_checksum);\n\n// printf(\"============= Feedforward pass end =============\\n\");\n\n// snrt_cluster_hw_barrier();\n\nSoftMax_baseline(activations, NUM_CLASSES);\n}\n\nstatic inline void GradientUpdate_baseline(float *image, float *activations,\nfloat *biases, float *weights,\nfloat *W_gradients,\nfloat *b_gradients, uint32_t label,\nfloat *loss) {\nFeedForward_baseline(image, activations, biases, weights);\n\nloss[0] = 0.0f - log(activations[label]);\n// printf(\"loss = %f, label = %u, activation = %f\\n\", loss[0], label,\n// activations[label]);\n\nsnrt_cluster_hw_barrier();\n\nfloat b_grad, W_grad;\nfor (int i = 0; i &lt; NUM_CLASSES; i++) {\nb_grad = (i == label) ? (activations[i] - 1) : activations[i];\nfor (int j = 0; j &lt; IN_CH; j++) {\nW_grad = b_grad * image[j];\nW_gradients[i * IN_CH + j] += W_grad;\n}\n\nb_gradients[i] += b_grad;\n}\n\n// return loss;\nsnrt_cluster_hw_barrier();\n}\n\nstatic inline void TrainingStep_baseline(float *biases, float *weights,\nfloat *W_gradients, float *b_gradients,\nfloat learning_rate) {\n// float b_checksum = 0;\n// float W_checksum = 0;\n// float b_grad_checksum = 0;\n// float W_grad_checksum = 0;\nfor (int i = 0; i &lt; NUM_CLASSES; i++) {\nbiases[i] -= learning_rate * b_gradients[i] / BATCH_SIZE;\n// b_grad_checksum += b_gradients[i];\n// b_checksum += biases[i];\nfor (int j = 0; j &lt; IN_CH; j++) {\nweights[i * IN_CH + j] -=\nlearning_rate * W_gradients[i * IN_CH + j] / BATCH_SIZE;\n// W_checksum += weights[i * IN_CH + j];\n// W_grad_checksum += W_gradients[i * IN_CH + j];\n}\n}\n\n// printf(\"b_checksum = %f\\n\", b_checksum);\n// printf(\"W_checksum = %f\\n\", W_checksum);\n// printf(\"b_grad_checksum = %f\\n\", b_grad_checksum);\n// printf(\"W_grad_checksum = %f\\n\", W_grad_checksum);\n\nsnrt_cluster_hw_barrier();\n}\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/occamy__base__addr_8h/","title":"snRuntime/include/occamy_base_addr.h","text":""},{"location":"runtime/Files/occamy__base__addr_8h/#defines","title":"Defines","text":"Name DEBUG_BASE_ADDR SOC_CTRL_BASE_ADDR FLL_SYSTEM_BASE_ADDR FLL_PERIPH_BASE_ADDR FLL_HBM2E_BASE_ADDR UART_BASE_ADDR GPIO_BASE_ADDR I2C_BASE_ADDR CHIP_CTRL_BASE_ADDR TIMER_BASE_ADDR HBM_XBAR_CFG_BASE_ADDR SPIM_BASE_ADDR PCIE_CFG_BASE_ADDR HBI_WIDE_CFG_BASE_ADDR HBI_NARROW_CFG_BASE_ADDR PLIC_BASE_ADDR BOOTROM_BASE_ADDR CLINT_BASE_ADDR PCIE0_BASE_ADDR PCIE1_BASE_ADDR SPM_NARROW_BASE_ADDR SPM_WIDE_BASE_ADDR WIDE_ZERO_MEM_BASE_ADDR SYS_IDMA_CFG_BASE_ADDR HBI_BASE_ADDR HBM_00_BASE_ADDR HBM_01_BASE_ADDR HBM_10_BASE_ADDR HBM_11_BASE_ADDR HBM_2_BASE_ADDR HBM_3_BASE_ADDR HBM_4_BASE_ADDR HBM_5_BASE_ADDR HBM_6_BASE_ADDR HBM_7_BASE_ADDR QUADRANT_0_CLUSTER_0_TCDM_BASE_ADDR QUADRANT_0_CLUSTER_0_PERIPH_BASE_ADDR QUADRANT_0_CLUSTER_0_ZERO_MEM_BASE_ADDR QUADRANT_0_CLUSTER_1_TCDM_BASE_ADDR QUADRANT_0_CLUSTER_1_PERIPH_BASE_ADDR QUADRANT_0_CLUSTER_1_ZERO_MEM_BASE_ADDR QUADRANT_0_CLUSTER_2_TCDM_BASE_ADDR QUADRANT_0_CLUSTER_2_PERIPH_BASE_ADDR QUADRANT_0_CLUSTER_2_ZERO_MEM_BASE_ADDR QUADRANT_0_CLUSTER_3_TCDM_BASE_ADDR QUADRANT_0_CLUSTER_3_PERIPH_BASE_ADDR QUADRANT_0_CLUSTER_3_ZERO_MEM_BASE_ADDR QUAD_0_CFG_BASE_ADDR QUADRANT_1_CLUSTER_0_TCDM_BASE_ADDR QUADRANT_1_CLUSTER_0_PERIPH_BASE_ADDR QUADRANT_1_CLUSTER_0_ZERO_MEM_BASE_ADDR QUADRANT_1_CLUSTER_1_TCDM_BASE_ADDR QUADRANT_1_CLUSTER_1_PERIPH_BASE_ADDR QUADRANT_1_CLUSTER_1_ZERO_MEM_BASE_ADDR QUADRANT_1_CLUSTER_2_TCDM_BASE_ADDR QUADRANT_1_CLUSTER_2_PERIPH_BASE_ADDR QUADRANT_1_CLUSTER_2_ZERO_MEM_BASE_ADDR QUADRANT_1_CLUSTER_3_TCDM_BASE_ADDR QUADRANT_1_CLUSTER_3_PERIPH_BASE_ADDR QUADRANT_1_CLUSTER_3_ZERO_MEM_BASE_ADDR QUAD_1_CFG_BASE_ADDR QUADRANT_2_CLUSTER_0_TCDM_BASE_ADDR QUADRANT_2_CLUSTER_0_PERIPH_BASE_ADDR QUADRANT_2_CLUSTER_0_ZERO_MEM_BASE_ADDR QUADRANT_2_CLUSTER_1_TCDM_BASE_ADDR QUADRANT_2_CLUSTER_1_PERIPH_BASE_ADDR QUADRANT_2_CLUSTER_1_ZERO_MEM_BASE_ADDR QUADRANT_2_CLUSTER_2_TCDM_BASE_ADDR QUADRANT_2_CLUSTER_2_PERIPH_BASE_ADDR QUADRANT_2_CLUSTER_2_ZERO_MEM_BASE_ADDR QUADRANT_2_CLUSTER_3_TCDM_BASE_ADDR QUADRANT_2_CLUSTER_3_PERIPH_BASE_ADDR QUADRANT_2_CLUSTER_3_ZERO_MEM_BASE_ADDR QUAD_2_CFG_BASE_ADDR QUADRANT_3_CLUSTER_0_TCDM_BASE_ADDR QUADRANT_3_CLUSTER_0_PERIPH_BASE_ADDR QUADRANT_3_CLUSTER_0_ZERO_MEM_BASE_ADDR QUADRANT_3_CLUSTER_1_TCDM_BASE_ADDR QUADRANT_3_CLUSTER_1_PERIPH_BASE_ADDR QUADRANT_3_CLUSTER_1_ZERO_MEM_BASE_ADDR QUADRANT_3_CLUSTER_2_TCDM_BASE_ADDR QUADRANT_3_CLUSTER_2_PERIPH_BASE_ADDR QUADRANT_3_CLUSTER_2_ZERO_MEM_BASE_ADDR QUADRANT_3_CLUSTER_3_TCDM_BASE_ADDR QUADRANT_3_CLUSTER_3_PERIPH_BASE_ADDR QUADRANT_3_CLUSTER_3_ZERO_MEM_BASE_ADDR QUAD_3_CFG_BASE_ADDR QUADRANT_4_CLUSTER_0_TCDM_BASE_ADDR QUADRANT_4_CLUSTER_0_PERIPH_BASE_ADDR QUADRANT_4_CLUSTER_0_ZERO_MEM_BASE_ADDR QUADRANT_4_CLUSTER_1_TCDM_BASE_ADDR QUADRANT_4_CLUSTER_1_PERIPH_BASE_ADDR QUADRANT_4_CLUSTER_1_ZERO_MEM_BASE_ADDR QUADRANT_4_CLUSTER_2_TCDM_BASE_ADDR QUADRANT_4_CLUSTER_2_PERIPH_BASE_ADDR QUADRANT_4_CLUSTER_2_ZERO_MEM_BASE_ADDR QUADRANT_4_CLUSTER_3_TCDM_BASE_ADDR QUADRANT_4_CLUSTER_3_PERIPH_BASE_ADDR QUADRANT_4_CLUSTER_3_ZERO_MEM_BASE_ADDR QUAD_4_CFG_BASE_ADDR QUADRANT_5_CLUSTER_0_TCDM_BASE_ADDR QUADRANT_5_CLUSTER_0_PERIPH_BASE_ADDR QUADRANT_5_CLUSTER_0_ZERO_MEM_BASE_ADDR QUADRANT_5_CLUSTER_1_TCDM_BASE_ADDR QUADRANT_5_CLUSTER_1_PERIPH_BASE_ADDR QUADRANT_5_CLUSTER_1_ZERO_MEM_BASE_ADDR QUADRANT_5_CLUSTER_2_TCDM_BASE_ADDR QUADRANT_5_CLUSTER_2_PERIPH_BASE_ADDR QUADRANT_5_CLUSTER_2_ZERO_MEM_BASE_ADDR QUADRANT_5_CLUSTER_3_TCDM_BASE_ADDR QUADRANT_5_CLUSTER_3_PERIPH_BASE_ADDR QUADRANT_5_CLUSTER_3_ZERO_MEM_BASE_ADDR QUAD_5_CFG_BASE_ADDR HBM_CFG_TOP_BASE_ADDR HBM_CFG_PHY_BASE_ADDR HBM_CFG_SEQ_BASE_ADDR HBM_CFG_CTRL_BASE_ADDR"},{"location":"runtime/Files/occamy__base__addr_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/occamy__base__addr_8h/#define-debug_base_addr","title":"define DEBUG_BASE_ADDR","text":"<pre><code>#define DEBUG_BASE_ADDR 0x00000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-soc_ctrl_base_addr","title":"define SOC_CTRL_BASE_ADDR","text":"<pre><code>#define SOC_CTRL_BASE_ADDR 0x02000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-fll_system_base_addr","title":"define FLL_SYSTEM_BASE_ADDR","text":"<pre><code>#define FLL_SYSTEM_BASE_ADDR 0x02001000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-fll_periph_base_addr","title":"define FLL_PERIPH_BASE_ADDR","text":"<pre><code>#define FLL_PERIPH_BASE_ADDR 0x02001400\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-fll_hbm2e_base_addr","title":"define FLL_HBM2E_BASE_ADDR","text":"<pre><code>#define FLL_HBM2E_BASE_ADDR 0x02001800\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-uart_base_addr","title":"define UART_BASE_ADDR","text":"<pre><code>#define UART_BASE_ADDR 0x02002000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-gpio_base_addr","title":"define GPIO_BASE_ADDR","text":"<pre><code>#define GPIO_BASE_ADDR 0x02003000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-i2c_base_addr","title":"define I2C_BASE_ADDR","text":"<pre><code>#define I2C_BASE_ADDR 0x02004000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-chip_ctrl_base_addr","title":"define CHIP_CTRL_BASE_ADDR","text":"<pre><code>#define CHIP_CTRL_BASE_ADDR 0x02005000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-timer_base_addr","title":"define TIMER_BASE_ADDR","text":"<pre><code>#define TIMER_BASE_ADDR 0x02006000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_xbar_cfg_base_addr","title":"define HBM_XBAR_CFG_BASE_ADDR","text":"<pre><code>#define HBM_XBAR_CFG_BASE_ADDR 0x02007000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-spim_base_addr","title":"define SPIM_BASE_ADDR","text":"<pre><code>#define SPIM_BASE_ADDR 0x03000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-pcie_cfg_base_addr","title":"define PCIE_CFG_BASE_ADDR","text":"<pre><code>#define PCIE_CFG_BASE_ADDR 0x05000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbi_wide_cfg_base_addr","title":"define HBI_WIDE_CFG_BASE_ADDR","text":"<pre><code>#define HBI_WIDE_CFG_BASE_ADDR 0x06000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbi_narrow_cfg_base_addr","title":"define HBI_NARROW_CFG_BASE_ADDR","text":"<pre><code>#define HBI_NARROW_CFG_BASE_ADDR 0x07000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-plic_base_addr","title":"define PLIC_BASE_ADDR","text":"<pre><code>#define PLIC_BASE_ADDR 0x0C000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-bootrom_base_addr","title":"define BOOTROM_BASE_ADDR","text":"<pre><code>#define BOOTROM_BASE_ADDR 0x01000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-clint_base_addr","title":"define CLINT_BASE_ADDR","text":"<pre><code>#define CLINT_BASE_ADDR 0x04000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-pcie0_base_addr","title":"define PCIE0_BASE_ADDR","text":"<pre><code>#define PCIE0_BASE_ADDR 0x20000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-pcie1_base_addr","title":"define PCIE1_BASE_ADDR","text":"<pre><code>#define PCIE1_BASE_ADDR 0x48000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-spm_narrow_base_addr","title":"define SPM_NARROW_BASE_ADDR","text":"<pre><code>#define SPM_NARROW_BASE_ADDR 0x70000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-spm_wide_base_addr","title":"define SPM_WIDE_BASE_ADDR","text":"<pre><code>#define SPM_WIDE_BASE_ADDR 0x71000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-wide_zero_mem_base_addr","title":"define WIDE_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define WIDE_ZERO_MEM_BASE_ADDR 0x100000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-sys_idma_cfg_base_addr","title":"define SYS_IDMA_CFG_BASE_ADDR","text":"<pre><code>#define SYS_IDMA_CFG_BASE_ADDR 0x11000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbi_base_addr","title":"define HBI_BASE_ADDR","text":"<pre><code>#define HBI_BASE_ADDR 0x10000000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_00_base_addr","title":"define HBM_00_BASE_ADDR","text":"<pre><code>#define HBM_00_BASE_ADDR 0x80000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_01_base_addr","title":"define HBM_01_BASE_ADDR","text":"<pre><code>#define HBM_01_BASE_ADDR 0x1000000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_10_base_addr","title":"define HBM_10_BASE_ADDR","text":"<pre><code>#define HBM_10_BASE_ADDR 0xC0000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_11_base_addr","title":"define HBM_11_BASE_ADDR","text":"<pre><code>#define HBM_11_BASE_ADDR 0x1040000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_2_base_addr","title":"define HBM_2_BASE_ADDR","text":"<pre><code>#define HBM_2_BASE_ADDR 0x1080000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_3_base_addr","title":"define HBM_3_BASE_ADDR","text":"<pre><code>#define HBM_3_BASE_ADDR 0x10C0000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_4_base_addr","title":"define HBM_4_BASE_ADDR","text":"<pre><code>#define HBM_4_BASE_ADDR 0x1100000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_5_base_addr","title":"define HBM_5_BASE_ADDR","text":"<pre><code>#define HBM_5_BASE_ADDR 0x1140000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_6_base_addr","title":"define HBM_6_BASE_ADDR","text":"<pre><code>#define HBM_6_BASE_ADDR 0x1180000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_7_base_addr","title":"define HBM_7_BASE_ADDR","text":"<pre><code>#define HBM_7_BASE_ADDR 0x11C0000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_0_tcdm_base_addr","title":"define QUADRANT_0_CLUSTER_0_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_0_TCDM_BASE_ADDR 0x10000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_0_periph_base_addr","title":"define QUADRANT_0_CLUSTER_0_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_0_PERIPH_BASE_ADDR 0x10020000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_0_zero_mem_base_addr","title":"define QUADRANT_0_CLUSTER_0_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10030000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_1_tcdm_base_addr","title":"define QUADRANT_0_CLUSTER_1_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_1_TCDM_BASE_ADDR 0x10040000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_1_periph_base_addr","title":"define QUADRANT_0_CLUSTER_1_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_1_PERIPH_BASE_ADDR 0x10060000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_1_zero_mem_base_addr","title":"define QUADRANT_0_CLUSTER_1_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10070000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_2_tcdm_base_addr","title":"define QUADRANT_0_CLUSTER_2_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_2_TCDM_BASE_ADDR 0x10080000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_2_periph_base_addr","title":"define QUADRANT_0_CLUSTER_2_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_2_PERIPH_BASE_ADDR 0x100A0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_2_zero_mem_base_addr","title":"define QUADRANT_0_CLUSTER_2_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x100B0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_3_tcdm_base_addr","title":"define QUADRANT_0_CLUSTER_3_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_3_TCDM_BASE_ADDR 0x100C0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_3_periph_base_addr","title":"define QUADRANT_0_CLUSTER_3_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_3_PERIPH_BASE_ADDR 0x100E0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_0_cluster_3_zero_mem_base_addr","title":"define QUADRANT_0_CLUSTER_3_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_0_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x100F0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quad_0_cfg_base_addr","title":"define QUAD_0_CFG_BASE_ADDR","text":"<pre><code>#define QUAD_0_CFG_BASE_ADDR 0x0B000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_0_tcdm_base_addr","title":"define QUADRANT_1_CLUSTER_0_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_0_TCDM_BASE_ADDR 0x10100000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_0_periph_base_addr","title":"define QUADRANT_1_CLUSTER_0_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_0_PERIPH_BASE_ADDR 0x10120000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_0_zero_mem_base_addr","title":"define QUADRANT_1_CLUSTER_0_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10130000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_1_tcdm_base_addr","title":"define QUADRANT_1_CLUSTER_1_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_1_TCDM_BASE_ADDR 0x10140000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_1_periph_base_addr","title":"define QUADRANT_1_CLUSTER_1_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_1_PERIPH_BASE_ADDR 0x10160000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_1_zero_mem_base_addr","title":"define QUADRANT_1_CLUSTER_1_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10170000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_2_tcdm_base_addr","title":"define QUADRANT_1_CLUSTER_2_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_2_TCDM_BASE_ADDR 0x10180000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_2_periph_base_addr","title":"define QUADRANT_1_CLUSTER_2_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_2_PERIPH_BASE_ADDR 0x101A0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_2_zero_mem_base_addr","title":"define QUADRANT_1_CLUSTER_2_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x101B0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_3_tcdm_base_addr","title":"define QUADRANT_1_CLUSTER_3_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_3_TCDM_BASE_ADDR 0x101C0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_3_periph_base_addr","title":"define QUADRANT_1_CLUSTER_3_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_3_PERIPH_BASE_ADDR 0x101E0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_1_cluster_3_zero_mem_base_addr","title":"define QUADRANT_1_CLUSTER_3_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_1_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x101F0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quad_1_cfg_base_addr","title":"define QUAD_1_CFG_BASE_ADDR","text":"<pre><code>#define QUAD_1_CFG_BASE_ADDR 0x0B010000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_0_tcdm_base_addr","title":"define QUADRANT_2_CLUSTER_0_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_0_TCDM_BASE_ADDR 0x10200000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_0_periph_base_addr","title":"define QUADRANT_2_CLUSTER_0_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_0_PERIPH_BASE_ADDR 0x10220000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_0_zero_mem_base_addr","title":"define QUADRANT_2_CLUSTER_0_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10230000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_1_tcdm_base_addr","title":"define QUADRANT_2_CLUSTER_1_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_1_TCDM_BASE_ADDR 0x10240000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_1_periph_base_addr","title":"define QUADRANT_2_CLUSTER_1_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_1_PERIPH_BASE_ADDR 0x10260000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_1_zero_mem_base_addr","title":"define QUADRANT_2_CLUSTER_1_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10270000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_2_tcdm_base_addr","title":"define QUADRANT_2_CLUSTER_2_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_2_TCDM_BASE_ADDR 0x10280000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_2_periph_base_addr","title":"define QUADRANT_2_CLUSTER_2_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_2_PERIPH_BASE_ADDR 0x102A0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_2_zero_mem_base_addr","title":"define QUADRANT_2_CLUSTER_2_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x102B0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_3_tcdm_base_addr","title":"define QUADRANT_2_CLUSTER_3_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_3_TCDM_BASE_ADDR 0x102C0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_3_periph_base_addr","title":"define QUADRANT_2_CLUSTER_3_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_3_PERIPH_BASE_ADDR 0x102E0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_2_cluster_3_zero_mem_base_addr","title":"define QUADRANT_2_CLUSTER_3_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_2_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x102F0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quad_2_cfg_base_addr","title":"define QUAD_2_CFG_BASE_ADDR","text":"<pre><code>#define QUAD_2_CFG_BASE_ADDR 0x0B020000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_0_tcdm_base_addr","title":"define QUADRANT_3_CLUSTER_0_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_0_TCDM_BASE_ADDR 0x10300000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_0_periph_base_addr","title":"define QUADRANT_3_CLUSTER_0_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_0_PERIPH_BASE_ADDR 0x10320000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_0_zero_mem_base_addr","title":"define QUADRANT_3_CLUSTER_0_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10330000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_1_tcdm_base_addr","title":"define QUADRANT_3_CLUSTER_1_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_1_TCDM_BASE_ADDR 0x10340000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_1_periph_base_addr","title":"define QUADRANT_3_CLUSTER_1_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_1_PERIPH_BASE_ADDR 0x10360000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_1_zero_mem_base_addr","title":"define QUADRANT_3_CLUSTER_1_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10370000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_2_tcdm_base_addr","title":"define QUADRANT_3_CLUSTER_2_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_2_TCDM_BASE_ADDR 0x10380000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_2_periph_base_addr","title":"define QUADRANT_3_CLUSTER_2_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_2_PERIPH_BASE_ADDR 0x103A0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_2_zero_mem_base_addr","title":"define QUADRANT_3_CLUSTER_2_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x103B0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_3_tcdm_base_addr","title":"define QUADRANT_3_CLUSTER_3_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_3_TCDM_BASE_ADDR 0x103C0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_3_periph_base_addr","title":"define QUADRANT_3_CLUSTER_3_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_3_PERIPH_BASE_ADDR 0x103E0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_3_cluster_3_zero_mem_base_addr","title":"define QUADRANT_3_CLUSTER_3_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_3_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x103F0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quad_3_cfg_base_addr","title":"define QUAD_3_CFG_BASE_ADDR","text":"<pre><code>#define QUAD_3_CFG_BASE_ADDR 0x0B030000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_0_tcdm_base_addr","title":"define QUADRANT_4_CLUSTER_0_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_0_TCDM_BASE_ADDR 0x10400000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_0_periph_base_addr","title":"define QUADRANT_4_CLUSTER_0_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_0_PERIPH_BASE_ADDR 0x10420000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_0_zero_mem_base_addr","title":"define QUADRANT_4_CLUSTER_0_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10430000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_1_tcdm_base_addr","title":"define QUADRANT_4_CLUSTER_1_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_1_TCDM_BASE_ADDR 0x10440000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_1_periph_base_addr","title":"define QUADRANT_4_CLUSTER_1_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_1_PERIPH_BASE_ADDR 0x10460000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_1_zero_mem_base_addr","title":"define QUADRANT_4_CLUSTER_1_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10470000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_2_tcdm_base_addr","title":"define QUADRANT_4_CLUSTER_2_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_2_TCDM_BASE_ADDR 0x10480000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_2_periph_base_addr","title":"define QUADRANT_4_CLUSTER_2_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_2_PERIPH_BASE_ADDR 0x104A0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_2_zero_mem_base_addr","title":"define QUADRANT_4_CLUSTER_2_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x104B0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_3_tcdm_base_addr","title":"define QUADRANT_4_CLUSTER_3_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_3_TCDM_BASE_ADDR 0x104C0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_3_periph_base_addr","title":"define QUADRANT_4_CLUSTER_3_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_3_PERIPH_BASE_ADDR 0x104E0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_4_cluster_3_zero_mem_base_addr","title":"define QUADRANT_4_CLUSTER_3_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_4_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x104F0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quad_4_cfg_base_addr","title":"define QUAD_4_CFG_BASE_ADDR","text":"<pre><code>#define QUAD_4_CFG_BASE_ADDR 0x0B040000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_0_tcdm_base_addr","title":"define QUADRANT_5_CLUSTER_0_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_0_TCDM_BASE_ADDR 0x10500000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_0_periph_base_addr","title":"define QUADRANT_5_CLUSTER_0_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_0_PERIPH_BASE_ADDR 0x10520000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_0_zero_mem_base_addr","title":"define QUADRANT_5_CLUSTER_0_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10530000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_1_tcdm_base_addr","title":"define QUADRANT_5_CLUSTER_1_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_1_TCDM_BASE_ADDR 0x10540000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_1_periph_base_addr","title":"define QUADRANT_5_CLUSTER_1_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_1_PERIPH_BASE_ADDR 0x10560000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_1_zero_mem_base_addr","title":"define QUADRANT_5_CLUSTER_1_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10570000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_2_tcdm_base_addr","title":"define QUADRANT_5_CLUSTER_2_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_2_TCDM_BASE_ADDR 0x10580000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_2_periph_base_addr","title":"define QUADRANT_5_CLUSTER_2_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_2_PERIPH_BASE_ADDR 0x105A0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_2_zero_mem_base_addr","title":"define QUADRANT_5_CLUSTER_2_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x105B0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_3_tcdm_base_addr","title":"define QUADRANT_5_CLUSTER_3_TCDM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_3_TCDM_BASE_ADDR 0x105C0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_3_periph_base_addr","title":"define QUADRANT_5_CLUSTER_3_PERIPH_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_3_PERIPH_BASE_ADDR 0x105E0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quadrant_5_cluster_3_zero_mem_base_addr","title":"define QUADRANT_5_CLUSTER_3_ZERO_MEM_BASE_ADDR","text":"<pre><code>#define QUADRANT_5_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x105F0000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-quad_5_cfg_base_addr","title":"define QUAD_5_CFG_BASE_ADDR","text":"<pre><code>#define QUAD_5_CFG_BASE_ADDR 0x0B050000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_cfg_top_base_addr","title":"define HBM_CFG_TOP_BASE_ADDR","text":"<pre><code>#define HBM_CFG_TOP_BASE_ADDR 0x08000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_cfg_phy_base_addr","title":"define HBM_CFG_PHY_BASE_ADDR","text":"<pre><code>#define HBM_CFG_PHY_BASE_ADDR 0x09000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_cfg_seq_base_addr","title":"define HBM_CFG_SEQ_BASE_ADDR","text":"<pre><code>#define HBM_CFG_SEQ_BASE_ADDR 0x0A000000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#define-hbm_cfg_ctrl_base_addr","title":"define HBM_CFG_CTRL_BASE_ADDR","text":"<pre><code>#define HBM_CFG_CTRL_BASE_ADDR 0x0A800000\n</code></pre>"},{"location":"runtime/Files/occamy__base__addr_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n// Generated by occamygen.py\n\n#pragma once\n\n#define DEBUG_BASE_ADDR 0x00000000\n#define SOC_CTRL_BASE_ADDR 0x02000000\n#define FLL_SYSTEM_BASE_ADDR 0x02001000\n#define FLL_PERIPH_BASE_ADDR 0x02001400\n#define FLL_HBM2E_BASE_ADDR 0x02001800\n#define UART_BASE_ADDR 0x02002000\n#define GPIO_BASE_ADDR 0x02003000\n#define I2C_BASE_ADDR 0x02004000\n#define CHIP_CTRL_BASE_ADDR 0x02005000\n#define TIMER_BASE_ADDR 0x02006000\n#define HBM_XBAR_CFG_BASE_ADDR 0x02007000\n#define SPIM_BASE_ADDR 0x03000000\n#define PCIE_CFG_BASE_ADDR 0x05000000\n#define HBI_WIDE_CFG_BASE_ADDR 0x06000000\n#define HBI_NARROW_CFG_BASE_ADDR 0x07000000\n#define PLIC_BASE_ADDR 0x0C000000\n#define BOOTROM_BASE_ADDR 0x01000000\n#define CLINT_BASE_ADDR 0x04000000\n#define PCIE0_BASE_ADDR 0x20000000\n#define PCIE1_BASE_ADDR 0x48000000\n#define SPM_NARROW_BASE_ADDR 0x70000000\n#define SPM_WIDE_BASE_ADDR 0x71000000\n#define WIDE_ZERO_MEM_BASE_ADDR 0x100000000\n#define SYS_IDMA_CFG_BASE_ADDR 0x11000000\n#define HBI_BASE_ADDR 0x10000000000\n#define HBM_00_BASE_ADDR 0x80000000\n#define HBM_01_BASE_ADDR 0x1000000000\n#define HBM_10_BASE_ADDR 0xC0000000\n#define HBM_11_BASE_ADDR 0x1040000000\n#define HBM_2_BASE_ADDR 0x1080000000\n#define HBM_3_BASE_ADDR 0x10C0000000\n#define HBM_4_BASE_ADDR 0x1100000000\n#define HBM_5_BASE_ADDR 0x1140000000\n#define HBM_6_BASE_ADDR 0x1180000000\n#define HBM_7_BASE_ADDR 0x11C0000000\n#define QUADRANT_0_CLUSTER_0_TCDM_BASE_ADDR 0x10000000\n#define QUADRANT_0_CLUSTER_0_PERIPH_BASE_ADDR 0x10020000\n#define QUADRANT_0_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10030000\n#define QUADRANT_0_CLUSTER_1_TCDM_BASE_ADDR 0x10040000\n#define QUADRANT_0_CLUSTER_1_PERIPH_BASE_ADDR 0x10060000\n#define QUADRANT_0_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10070000\n#define QUADRANT_0_CLUSTER_2_TCDM_BASE_ADDR 0x10080000\n#define QUADRANT_0_CLUSTER_2_PERIPH_BASE_ADDR 0x100A0000\n#define QUADRANT_0_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x100B0000\n#define QUADRANT_0_CLUSTER_3_TCDM_BASE_ADDR 0x100C0000\n#define QUADRANT_0_CLUSTER_3_PERIPH_BASE_ADDR 0x100E0000\n#define QUADRANT_0_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x100F0000\n#define QUAD_0_CFG_BASE_ADDR 0x0B000000\n#define QUADRANT_1_CLUSTER_0_TCDM_BASE_ADDR 0x10100000\n#define QUADRANT_1_CLUSTER_0_PERIPH_BASE_ADDR 0x10120000\n#define QUADRANT_1_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10130000\n#define QUADRANT_1_CLUSTER_1_TCDM_BASE_ADDR 0x10140000\n#define QUADRANT_1_CLUSTER_1_PERIPH_BASE_ADDR 0x10160000\n#define QUADRANT_1_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10170000\n#define QUADRANT_1_CLUSTER_2_TCDM_BASE_ADDR 0x10180000\n#define QUADRANT_1_CLUSTER_2_PERIPH_BASE_ADDR 0x101A0000\n#define QUADRANT_1_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x101B0000\n#define QUADRANT_1_CLUSTER_3_TCDM_BASE_ADDR 0x101C0000\n#define QUADRANT_1_CLUSTER_3_PERIPH_BASE_ADDR 0x101E0000\n#define QUADRANT_1_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x101F0000\n#define QUAD_1_CFG_BASE_ADDR 0x0B010000\n#define QUADRANT_2_CLUSTER_0_TCDM_BASE_ADDR 0x10200000\n#define QUADRANT_2_CLUSTER_0_PERIPH_BASE_ADDR 0x10220000\n#define QUADRANT_2_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10230000\n#define QUADRANT_2_CLUSTER_1_TCDM_BASE_ADDR 0x10240000\n#define QUADRANT_2_CLUSTER_1_PERIPH_BASE_ADDR 0x10260000\n#define QUADRANT_2_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10270000\n#define QUADRANT_2_CLUSTER_2_TCDM_BASE_ADDR 0x10280000\n#define QUADRANT_2_CLUSTER_2_PERIPH_BASE_ADDR 0x102A0000\n#define QUADRANT_2_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x102B0000\n#define QUADRANT_2_CLUSTER_3_TCDM_BASE_ADDR 0x102C0000\n#define QUADRANT_2_CLUSTER_3_PERIPH_BASE_ADDR 0x102E0000\n#define QUADRANT_2_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x102F0000\n#define QUAD_2_CFG_BASE_ADDR 0x0B020000\n#define QUADRANT_3_CLUSTER_0_TCDM_BASE_ADDR 0x10300000\n#define QUADRANT_3_CLUSTER_0_PERIPH_BASE_ADDR 0x10320000\n#define QUADRANT_3_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10330000\n#define QUADRANT_3_CLUSTER_1_TCDM_BASE_ADDR 0x10340000\n#define QUADRANT_3_CLUSTER_1_PERIPH_BASE_ADDR 0x10360000\n#define QUADRANT_3_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10370000\n#define QUADRANT_3_CLUSTER_2_TCDM_BASE_ADDR 0x10380000\n#define QUADRANT_3_CLUSTER_2_PERIPH_BASE_ADDR 0x103A0000\n#define QUADRANT_3_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x103B0000\n#define QUADRANT_3_CLUSTER_3_TCDM_BASE_ADDR 0x103C0000\n#define QUADRANT_3_CLUSTER_3_PERIPH_BASE_ADDR 0x103E0000\n#define QUADRANT_3_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x103F0000\n#define QUAD_3_CFG_BASE_ADDR 0x0B030000\n#define QUADRANT_4_CLUSTER_0_TCDM_BASE_ADDR 0x10400000\n#define QUADRANT_4_CLUSTER_0_PERIPH_BASE_ADDR 0x10420000\n#define QUADRANT_4_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10430000\n#define QUADRANT_4_CLUSTER_1_TCDM_BASE_ADDR 0x10440000\n#define QUADRANT_4_CLUSTER_1_PERIPH_BASE_ADDR 0x10460000\n#define QUADRANT_4_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10470000\n#define QUADRANT_4_CLUSTER_2_TCDM_BASE_ADDR 0x10480000\n#define QUADRANT_4_CLUSTER_2_PERIPH_BASE_ADDR 0x104A0000\n#define QUADRANT_4_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x104B0000\n#define QUADRANT_4_CLUSTER_3_TCDM_BASE_ADDR 0x104C0000\n#define QUADRANT_4_CLUSTER_3_PERIPH_BASE_ADDR 0x104E0000\n#define QUADRANT_4_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x104F0000\n#define QUAD_4_CFG_BASE_ADDR 0x0B040000\n#define QUADRANT_5_CLUSTER_0_TCDM_BASE_ADDR 0x10500000\n#define QUADRANT_5_CLUSTER_0_PERIPH_BASE_ADDR 0x10520000\n#define QUADRANT_5_CLUSTER_0_ZERO_MEM_BASE_ADDR 0x10530000\n#define QUADRANT_5_CLUSTER_1_TCDM_BASE_ADDR 0x10540000\n#define QUADRANT_5_CLUSTER_1_PERIPH_BASE_ADDR 0x10560000\n#define QUADRANT_5_CLUSTER_1_ZERO_MEM_BASE_ADDR 0x10570000\n#define QUADRANT_5_CLUSTER_2_TCDM_BASE_ADDR 0x10580000\n#define QUADRANT_5_CLUSTER_2_PERIPH_BASE_ADDR 0x105A0000\n#define QUADRANT_5_CLUSTER_2_ZERO_MEM_BASE_ADDR 0x105B0000\n#define QUADRANT_5_CLUSTER_3_TCDM_BASE_ADDR 0x105C0000\n#define QUADRANT_5_CLUSTER_3_PERIPH_BASE_ADDR 0x105E0000\n#define QUADRANT_5_CLUSTER_3_ZERO_MEM_BASE_ADDR 0x105F0000\n#define QUAD_5_CFG_BASE_ADDR 0x0B050000\n#define HBM_CFG_TOP_BASE_ADDR 0x08000000\n#define HBM_CFG_PHY_BASE_ADDR 0x09000000\n#define HBM_CFG_SEQ_BASE_ADDR 0x0A000000\n#define HBM_CFG_CTRL_BASE_ADDR 0x0A800000\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/","title":"snRuntime/include/occamy_hbm_xbar_peripheral.h","text":""},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/#defines","title":"Defines","text":"Name OCCAMY_HBM_XBAR_PARAM_REG_WIDTH OCCAMY_HBM_XBAR_INTERLEAVED_ENA_REG_OFFSET OCCAMY_HBM_XBAR_INTERLEAVED_ENA_INTERLEAVED_ENA_BIT"},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/#define-occamy_hbm_xbar_param_reg_width","title":"define OCCAMY_HBM_XBAR_PARAM_REG_WIDTH","text":"<pre><code>#define OCCAMY_HBM_XBAR_PARAM_REG_WIDTH 32\n</code></pre>"},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/#define-occamy_hbm_xbar_interleaved_ena_reg_offset","title":"define OCCAMY_HBM_XBAR_INTERLEAVED_ENA_REG_OFFSET","text":"<pre><code>#define OCCAMY_HBM_XBAR_INTERLEAVED_ENA_REG_OFFSET 0x0\n</code></pre>"},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/#define-occamy_hbm_xbar_interleaved_ena_interleaved_ena_bit","title":"define OCCAMY_HBM_XBAR_INTERLEAVED_ENA_INTERLEAVED_ENA_BIT","text":"<pre><code>#define OCCAMY_HBM_XBAR_INTERLEAVED_ENA_INTERLEAVED_ENA_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__hbm__xbar__peripheral_8h/#source-code","title":"Source code","text":"<pre><code>// Generated register defines for occamy_HBM_xbar\n\n// Copyright information found in source file:\n// Copyright 2020 ETH Zurich and University of Bologna.\n\n// Licensing information found in source file:\n// Licensed under Solderpad Hardware License, Version 0.51, see LICENSE for\n// details. SPDX-License-Identifier: SHL-0.51\n\n#ifndef _OCCAMY_HBM_XBAR_REG_DEFS_\n#define _OCCAMY_HBM_XBAR_REG_DEFS_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n// Register width\n#define OCCAMY_HBM_XBAR_PARAM_REG_WIDTH 32\n\n// Interleaved mode of the x-bar is enabled.\n#define OCCAMY_HBM_XBAR_INTERLEAVED_ENA_REG_OFFSET 0x0\n#define OCCAMY_HBM_XBAR_INTERLEAVED_ENA_INTERLEAVED_ENA_BIT 0\n\n#ifdef __cplusplus\n}  // extern \"C\"\n#endif\n#endif  // _OCCAMY_HBM_XBAR_REG_DEFS_\n// End generated register defines for occamy_HBM_xbar\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/","title":"snRuntime/include/occamy_quad_peripheral.h","text":""},{"location":"runtime/Files/occamy__quad__peripheral_8h/#defines","title":"Defines","text":"Name OCCAMY_QUADRANT_S1_PARAM_REG_WIDTH OCCAMY_QUADRANT_S1_CLK_ENA_REG_OFFSET OCCAMY_QUADRANT_S1_CLK_ENA_CLK_ENA_BIT OCCAMY_QUADRANT_S1_RESET_N_REG_OFFSET OCCAMY_QUADRANT_S1_RESET_N_RESET_N_BIT OCCAMY_QUADRANT_S1_ISOLATE_REG_OFFSET OCCAMY_QUADRANT_S1_ISOLATE_NARROW_IN_BIT OCCAMY_QUADRANT_S1_ISOLATE_NARROW_OUT_BIT OCCAMY_QUADRANT_S1_ISOLATE_WIDE_IN_BIT OCCAMY_QUADRANT_S1_ISOLATE_WIDE_OUT_BIT OCCAMY_QUADRANT_S1_ISOLATED_REG_OFFSET OCCAMY_QUADRANT_S1_ISOLATED_NARROW_IN_BIT OCCAMY_QUADRANT_S1_ISOLATED_NARROW_OUT_BIT OCCAMY_QUADRANT_S1_ISOLATED_WIDE_IN_BIT OCCAMY_QUADRANT_S1_ISOLATED_WIDE_OUT_BIT OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_REG_OFFSET OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_ENABLE_BIT OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_REG_OFFSET OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_FLUSH_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_ENABLE_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_ENABLE_BIT OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_0_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_0_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_1_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_1_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_2_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_2_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_3_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_REG_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_3_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_REG_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_MASK OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_OFFSET OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_READ_ONLY_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_LOW_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_REG_OFFSET OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_VALID_BIT OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_READ_ONLY_BIT"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_param_reg_width","title":"define OCCAMY_QUADRANT_S1_PARAM_REG_WIDTH","text":"<pre><code>#define OCCAMY_QUADRANT_S1_PARAM_REG_WIDTH 32\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_clk_ena_reg_offset","title":"define OCCAMY_QUADRANT_S1_CLK_ENA_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_CLK_ENA_REG_OFFSET 0x0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_clk_ena_clk_ena_bit","title":"define OCCAMY_QUADRANT_S1_CLK_ENA_CLK_ENA_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_CLK_ENA_CLK_ENA_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_reset_n_reg_offset","title":"define OCCAMY_QUADRANT_S1_RESET_N_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RESET_N_REG_OFFSET 0x4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_reset_n_reset_n_bit","title":"define OCCAMY_QUADRANT_S1_RESET_N_RESET_N_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RESET_N_RESET_N_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolate_reg_offset","title":"define OCCAMY_QUADRANT_S1_ISOLATE_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATE_REG_OFFSET 0x8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolate_narrow_in_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATE_NARROW_IN_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATE_NARROW_IN_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolate_narrow_out_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATE_NARROW_OUT_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATE_NARROW_OUT_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolate_wide_in_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATE_WIDE_IN_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATE_WIDE_IN_BIT 2\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolate_wide_out_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATE_WIDE_OUT_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATE_WIDE_OUT_BIT 3\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolated_reg_offset","title":"define OCCAMY_QUADRANT_S1_ISOLATED_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATED_REG_OFFSET 0xc\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolated_narrow_in_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATED_NARROW_IN_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATED_NARROW_IN_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolated_narrow_out_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATED_NARROW_OUT_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATED_NARROW_OUT_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolated_wide_in_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATED_WIDE_IN_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATED_WIDE_IN_BIT 2\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_isolated_wide_out_bit","title":"define OCCAMY_QUADRANT_S1_ISOLATED_WIDE_OUT_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_ISOLATED_WIDE_OUT_BIT 3\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_cache_enable_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_REG_OFFSET 0x10\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_cache_enable_enable_bit","title":"define OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_ENABLE_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_ENABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_cache_flush_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_REG_OFFSET 0x14\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_cache_flush_flush_bit","title":"define OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_FLUSH_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_FLUSH_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_enable_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_REG_OFFSET 0x18\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_enable_enable_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_ENABLE_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_ENABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_enable_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_REG_OFFSET 0x1c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_enable_enable_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_ENABLE_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_ENABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_low_0_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_0_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_0_REG_OFFSET 0x100\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_0_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_REG_OFFSET 0x104\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_0_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_0_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_0_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_low_0_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_0_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_0_REG_OFFSET 0x108\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_0_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_REG_OFFSET 0x10c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_0_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_0_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_0_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_low_1_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_1_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_1_REG_OFFSET 0x110\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_1_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_REG_OFFSET 0x114\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_1_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_1_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_1_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_low_1_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_1_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_1_REG_OFFSET 0x118\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_1_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_REG_OFFSET 0x11c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_1_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_1_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_1_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_low_2_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_2_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_2_REG_OFFSET 0x120\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_2_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_REG_OFFSET 0x124\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_2_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_2_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_2_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_low_2_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_2_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_2_REG_OFFSET 0x128\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_2_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_REG_OFFSET 0x12c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_2_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_2_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_2_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_low_3_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_3_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_3_REG_OFFSET 0x130\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_3_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_REG_OFFSET 0x134\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_3_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_3_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_start_addr_high_3_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_low_3_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_3_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_3_REG_OFFSET 0x138\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_3_reg_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_REG_OFFSET 0x13c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_3_addr_high_mask","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_3_addr_high_offset","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_ro_end_addr_high_3_addr_high_field","title":"define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_FIELD     ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET 0x800\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET 0x804\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET 0x808\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET 0x80c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_LOW_REG_OFFSET 0x810\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET 0x814\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_REG_OFFSET 0x818\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_0_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET 0x820\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET 0x824\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET 0x828\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET 0x82c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_LOW_REG_OFFSET 0x830\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET 0x834\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_REG_OFFSET 0x838\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_1_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET 0x840\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET 0x844\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET 0x848\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET 0x84c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_LOW_REG_OFFSET 0x850\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET 0x854\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_REG_OFFSET 0x858\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_2_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET 0x860\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET 0x864\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET 0x868\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET 0x86c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_LOW_REG_OFFSET 0x870\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET 0x874\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_REG_OFFSET 0x878\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_3_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET 0x880\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET 0x884\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET 0x888\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET 0x88c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_LOW_REG_OFFSET 0x890\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET 0x894\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_REG_OFFSET 0x898\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_4_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET 0x8a0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET 0x8a4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET 0x8a8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET 0x8ac\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_LOW_REG_OFFSET 0x8b0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET 0x8b4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_REG_OFFSET 0x8b8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_5_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET 0x8c0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET 0x8c4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET 0x8c8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET 0x8cc\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_LOW_REG_OFFSET 0x8d0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET 0x8d4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_REG_OFFSET 0x8d8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_6_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET 0x8e0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET 0x8e4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET 0x8e8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET 0x8ec\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_LOW_REG_OFFSET 0x8f0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET 0x8f4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_REG_OFFSET 0x8f8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_narrow_entry_7_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET 0x1000\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1004\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET 0x1008\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET 0x100c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_LOW_REG_OFFSET 0x1010\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET 0x1014\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_REG_OFFSET 0x1018\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_0_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET 0x1020\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1024\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET 0x1028\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET 0x102c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_LOW_REG_OFFSET 0x1030\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET 0x1034\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_REG_OFFSET 0x1038\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_1_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET 0x1040\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1044\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET 0x1048\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET 0x104c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_LOW_REG_OFFSET 0x1050\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET 0x1054\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_REG_OFFSET 0x1058\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_2_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET 0x1060\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1064\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET 0x1068\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET 0x106c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_LOW_REG_OFFSET 0x1070\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET 0x1074\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_REG_OFFSET 0x1078\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_3_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET 0x1080\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1084\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET 0x1088\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET 0x108c\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_LOW_REG_OFFSET 0x1090\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET 0x1094\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_REG_OFFSET 0x1098\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_4_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET 0x10a0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET 0x10a4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET 0x10a8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET 0x10ac\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_LOW_REG_OFFSET 0x10b0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET 0x10b4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_REG_OFFSET 0x10b8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_5_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET 0x10c0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET 0x10c4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET 0x10c8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET 0x10cc\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_LOW_REG_OFFSET 0x10d0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET 0x10d4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_REG_OFFSET 0x10d8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_6_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_first_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET 0x10e0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_first_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET 0x10e4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_first_high_pagein_first_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_first_high_pagein_first_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_first_high_pagein_first_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_last_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET 0x10e8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_last_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET 0x10ec\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_last_high_pagein_last_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK     0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_last_high_pagein_last_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET     0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pagein_last_high_pagein_last_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pageout_low_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_LOW_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_LOW_REG_OFFSET 0x10f0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pageout_high_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET 0x10f4\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pageout_high_pageout_high_mask","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pageout_high_pageout_high_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_pageout_high_pageout_high_field","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_flags_reg_offset","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_REG_OFFSET","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_REG_OFFSET 0x10f8\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_flags_valid_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_VALID_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_VALID_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#define-occamy_quadrant_s1_tlb_wide_entry_7_flags_read_only_bit","title":"define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_READ_ONLY_BIT","text":"<pre><code>#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_READ_ONLY_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__quad__peripheral_8h/#source-code","title":"Source code","text":"<pre><code>// Generated register defines for occamy_quadrant_s1\n\n// Copyright information found in source file:\n// Copyright 2020 ETH Zurich and University of Bologna.\n\n// Licensing information found in source file:\n// Licensed under Solderpad Hardware License, Version 0.51, see LICENSE for\n// details. SPDX-License-Identifier: SHL-0.51\n\n#ifndef _OCCAMY_QUADRANT_S1_REG_DEFS_\n#define _OCCAMY_QUADRANT_S1_REG_DEFS_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n// Register width\n#define OCCAMY_QUADRANT_S1_PARAM_REG_WIDTH 32\n\n// Quadrant-internal clock gate enable\n#define OCCAMY_QUADRANT_S1_CLK_ENA_REG_OFFSET 0x0\n#define OCCAMY_QUADRANT_S1_CLK_ENA_CLK_ENA_BIT 0\n\n// Quadrant-internal asynchronous active-low reset\n#define OCCAMY_QUADRANT_S1_RESET_N_REG_OFFSET 0x4\n#define OCCAMY_QUADRANT_S1_RESET_N_RESET_N_BIT 0\n\n// Isolate ports of given quadrant.\n#define OCCAMY_QUADRANT_S1_ISOLATE_REG_OFFSET 0x8\n#define OCCAMY_QUADRANT_S1_ISOLATE_NARROW_IN_BIT 0\n#define OCCAMY_QUADRANT_S1_ISOLATE_NARROW_OUT_BIT 1\n#define OCCAMY_QUADRANT_S1_ISOLATE_WIDE_IN_BIT 2\n#define OCCAMY_QUADRANT_S1_ISOLATE_WIDE_OUT_BIT 3\n\n// Isolation status of S1 quadrant and port\n#define OCCAMY_QUADRANT_S1_ISOLATED_REG_OFFSET 0xc\n#define OCCAMY_QUADRANT_S1_ISOLATED_NARROW_IN_BIT 0\n#define OCCAMY_QUADRANT_S1_ISOLATED_NARROW_OUT_BIT 1\n#define OCCAMY_QUADRANT_S1_ISOLATED_WIDE_IN_BIT 2\n#define OCCAMY_QUADRANT_S1_ISOLATED_WIDE_OUT_BIT 3\n\n// Enable read-only cache of quadrant.\n#define OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_REG_OFFSET 0x10\n#define OCCAMY_QUADRANT_S1_RO_CACHE_ENABLE_ENABLE_BIT 0\n\n// Flush read-only cache.\n#define OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_REG_OFFSET 0x14\n#define OCCAMY_QUADRANT_S1_RO_CACHE_FLUSH_FLUSH_BIT 0\n\n// Enable TLB on wide interface of quadrant.\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_REG_OFFSET 0x18\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENABLE_ENABLE_BIT 0\n\n// Enable TLB on narrow interface of quadrant.\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_REG_OFFSET 0x1c\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENABLE_ENABLE_BIT 0\n\n// Read-only cache start address low\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_0_REG_OFFSET 0x100\n\n// Read-only cache start address high\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_REG_OFFSET 0x104\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_0_ADDR_HIGH_OFFSET})\n\n// Read-only cache end address low\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_0_REG_OFFSET 0x108\n\n// Read-only cache end address high\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_REG_OFFSET 0x10c\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_0_ADDR_HIGH_OFFSET})\n\n// Read-only cache start address low\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_1_REG_OFFSET 0x110\n\n// Read-only cache start address high\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_REG_OFFSET 0x114\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_1_ADDR_HIGH_OFFSET})\n\n// Read-only cache end address low\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_1_REG_OFFSET 0x118\n\n// Read-only cache end address high\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_REG_OFFSET 0x11c\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_1_ADDR_HIGH_OFFSET})\n\n// Read-only cache start address low\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_2_REG_OFFSET 0x120\n\n// Read-only cache start address high\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_REG_OFFSET 0x124\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_2_ADDR_HIGH_OFFSET})\n\n// Read-only cache end address low\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_2_REG_OFFSET 0x128\n\n// Read-only cache end address high\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_REG_OFFSET 0x12c\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_2_ADDR_HIGH_OFFSET})\n\n// Read-only cache start address low\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_LOW_3_REG_OFFSET 0x130\n\n// Read-only cache start address high\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_REG_OFFSET 0x134\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                              \\\n        .mask = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_START_ADDR_HIGH_3_ADDR_HIGH_OFFSET})\n\n// Read-only cache end address low\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_LOW_3_REG_OFFSET 0x138\n\n// Read-only cache end address high\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_REG_OFFSET 0x13c\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_MASK 0xffff\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_FIELD         \\\n    ((bitfield_field32_t){                                            \\\n        .mask = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_MASK, \\\n        .index = OCCAMY_QUADRANT_S1_RO_END_ADDR_HIGH_3_ADDR_HIGH_OFFSET})\n\n// narrow TLB entry 0: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET 0x800\n\n// narrow TLB entry 0: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET 0x804\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 0: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET 0x808\n\n// narrow TLB entry 0: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET 0x80c\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 0: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_LOW_REG_OFFSET 0x810\n\n// narrow TLB entry 0: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET 0x814\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 0: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_REG_OFFSET 0x818\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_0_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 1: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET 0x820\n\n// narrow TLB entry 1: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET 0x824\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 1: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET 0x828\n\n// narrow TLB entry 1: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET 0x82c\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 1: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_LOW_REG_OFFSET 0x830\n\n// narrow TLB entry 1: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET 0x834\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 1: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_REG_OFFSET 0x838\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_1_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 2: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET 0x840\n\n// narrow TLB entry 2: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET 0x844\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 2: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET 0x848\n\n// narrow TLB entry 2: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET 0x84c\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 2: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_LOW_REG_OFFSET 0x850\n\n// narrow TLB entry 2: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET 0x854\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 2: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_REG_OFFSET 0x858\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_2_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 3: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET 0x860\n\n// narrow TLB entry 3: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET 0x864\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 3: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET 0x868\n\n// narrow TLB entry 3: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET 0x86c\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 3: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_LOW_REG_OFFSET 0x870\n\n// narrow TLB entry 3: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET 0x874\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 3: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_REG_OFFSET 0x878\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_3_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 4: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET 0x880\n\n// narrow TLB entry 4: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET 0x884\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 4: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET 0x888\n\n// narrow TLB entry 4: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET 0x88c\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 4: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_LOW_REG_OFFSET 0x890\n\n// narrow TLB entry 4: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET 0x894\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 4: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_REG_OFFSET 0x898\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_4_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 5: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET 0x8a0\n\n// narrow TLB entry 5: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET 0x8a4\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 5: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET 0x8a8\n\n// narrow TLB entry 5: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET 0x8ac\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 5: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_LOW_REG_OFFSET 0x8b0\n\n// narrow TLB entry 5: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET 0x8b4\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 5: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_REG_OFFSET 0x8b8\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_5_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 6: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET 0x8c0\n\n// narrow TLB entry 6: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET 0x8c4\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 6: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET 0x8c8\n\n// narrow TLB entry 6: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET 0x8cc\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 6: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_LOW_REG_OFFSET 0x8d0\n\n// narrow TLB entry 6: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET 0x8d4\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 6: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_REG_OFFSET 0x8d8\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_6_FLAGS_READ_ONLY_BIT 1\n\n// narrow TLB entry 7: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET 0x8e0\n\n// narrow TLB entry 7: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET 0x8e4\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                  \\\n        .mask =                                                                             \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                            \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// narrow TLB entry 7: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET 0x8e8\n\n// narrow TLB entry 7: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET 0x8ec\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// narrow TLB entry 7: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_LOW_REG_OFFSET 0x8f0\n\n// narrow TLB entry 7: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET 0x8f4\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                        \\\n        .mask =                                                                   \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                  \\\n            OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// narrow TLB entry 7: Flags\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_REG_OFFSET 0x8f8\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_NARROW_ENTRY_7_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 0: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_LOW_REG_OFFSET 0x1000\n\n// wide TLB entry 0: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1004\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 0: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_LOW_REG_OFFSET 0x1008\n\n// wide TLB entry 0: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_REG_OFFSET 0x100c\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 0: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_LOW_REG_OFFSET 0x1010\n\n// wide TLB entry 0: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_REG_OFFSET 0x1014\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 0: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_REG_OFFSET 0x1018\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_0_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 1: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_LOW_REG_OFFSET 0x1020\n\n// wide TLB entry 1: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1024\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 1: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_LOW_REG_OFFSET 0x1028\n\n// wide TLB entry 1: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_REG_OFFSET 0x102c\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 1: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_LOW_REG_OFFSET 0x1030\n\n// wide TLB entry 1: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_REG_OFFSET 0x1034\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 1: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_REG_OFFSET 0x1038\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_1_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 2: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_LOW_REG_OFFSET 0x1040\n\n// wide TLB entry 2: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1044\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 2: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_LOW_REG_OFFSET 0x1048\n\n// wide TLB entry 2: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_REG_OFFSET 0x104c\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 2: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_LOW_REG_OFFSET 0x1050\n\n// wide TLB entry 2: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_REG_OFFSET 0x1054\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 2: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_REG_OFFSET 0x1058\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_2_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 3: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_LOW_REG_OFFSET 0x1060\n\n// wide TLB entry 3: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1064\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 3: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_LOW_REG_OFFSET 0x1068\n\n// wide TLB entry 3: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_REG_OFFSET 0x106c\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 3: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_LOW_REG_OFFSET 0x1070\n\n// wide TLB entry 3: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_REG_OFFSET 0x1074\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 3: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_REG_OFFSET 0x1078\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_3_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 4: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_LOW_REG_OFFSET 0x1080\n\n// wide TLB entry 4: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_REG_OFFSET 0x1084\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 4: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_LOW_REG_OFFSET 0x1088\n\n// wide TLB entry 4: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_REG_OFFSET 0x108c\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 4: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_LOW_REG_OFFSET 0x1090\n\n// wide TLB entry 4: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_REG_OFFSET 0x1094\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 4: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_REG_OFFSET 0x1098\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_4_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 5: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_LOW_REG_OFFSET 0x10a0\n\n// wide TLB entry 5: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_REG_OFFSET 0x10a4\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 5: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_LOW_REG_OFFSET 0x10a8\n\n// wide TLB entry 5: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_REG_OFFSET 0x10ac\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 5: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_LOW_REG_OFFSET 0x10b0\n\n// wide TLB entry 5: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_REG_OFFSET 0x10b4\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 5: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_REG_OFFSET 0x10b8\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_5_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 6: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_LOW_REG_OFFSET 0x10c0\n\n// wide TLB entry 6: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_REG_OFFSET 0x10c4\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 6: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_LOW_REG_OFFSET 0x10c8\n\n// wide TLB entry 6: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_REG_OFFSET 0x10cc\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 6: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_LOW_REG_OFFSET 0x10d0\n\n// wide TLB entry 6: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_REG_OFFSET 0x10d4\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 6: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_REG_OFFSET 0x10d8\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_6_FLAGS_READ_ONLY_BIT 1\n\n// wide TLB entry 7: Lower 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_LOW_REG_OFFSET 0x10e0\n\n// wide TLB entry 7: Upper 32-bit of first page number of input range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_REG_OFFSET 0x10e4\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                                \\\n        .mask =                                                                           \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_MASK, \\\n        .index =                                                                          \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_FIRST_HIGH_PAGEIN_FIRST_HIGH_OFFSET})\n\n// wide TLB entry 7: Lower 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_LOW_REG_OFFSET 0x10e8\n\n// wide TLB entry 7: Upper 32-bit of last page (inclusive) number of input\n// range\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_REG_OFFSET 0x10ec\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK \\\n    0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET \\\n    0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                              \\\n        .mask =                                                                         \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_MASK, \\\n        .index =                                                                        \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEIN_LAST_HIGH_PAGEIN_LAST_HIGH_OFFSET})\n\n// wide TLB entry 7: Lower 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_LOW_REG_OFFSET 0x10f0\n\n// wide TLB entry 7: Upper 32-bit of output base page\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_REG_OFFSET 0x10f4\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK 0xf\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_FIELD     \\\n    ((bitfield_field32_t){                                                      \\\n        .mask =                                                                 \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_MASK, \\\n        .index =                                                                \\\n            OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_PAGEOUT_HIGH_PAGEOUT_HIGH_OFFSET})\n\n// wide TLB entry 7: Flags\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_REG_OFFSET 0x10f8\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_VALID_BIT 0\n#define OCCAMY_QUADRANT_S1_TLB_WIDE_ENTRY_7_FLAGS_READ_ONLY_BIT 1\n\n#ifdef __cplusplus\n}  // extern \"C\"\n#endif\n#endif  // _OCCAMY_QUADRANT_S1_REG_DEFS_\n// End generated register defines for occamy_quadrant_s1\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/","title":"snRuntime/include/occamy_soc_peripheral.h","text":""},{"location":"runtime/Files/occamy__soc__peripheral_8h/#defines","title":"Defines","text":"Name OCCAMY_SOC_PARAM_NUM_SCRATCH_REGS OCCAMY_SOC_PARAM_NUM_PADS OCCAMY_SOC_PARAM_REG_WIDTH OCCAMY_SOC_INTR_COMMON_ECC_NARROW_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_COMMON_ECC_NARROW_CORRECTABLE_BIT OCCAMY_SOC_INTR_COMMON_ECC_WIDE_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_COMMON_ECC_WIDE_CORRECTABLE_BIT OCCAMY_SOC_INTR_STATE_REG_OFFSET OCCAMY_SOC_INTR_STATE_ECC_NARROW_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_STATE_ECC_NARROW_CORRECTABLE_BIT OCCAMY_SOC_INTR_STATE_ECC_WIDE_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_STATE_ECC_WIDE_CORRECTABLE_BIT OCCAMY_SOC_INTR_ENABLE_REG_OFFSET OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_CORRECTABLE_BIT OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_CORRECTABLE_BIT OCCAMY_SOC_INTR_TEST_REG_OFFSET OCCAMY_SOC_INTR_TEST_ECC_NARROW_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_TEST_ECC_NARROW_CORRECTABLE_BIT OCCAMY_SOC_INTR_TEST_ECC_WIDE_UNCORRECTABLE_BIT OCCAMY_SOC_INTR_TEST_ECC_WIDE_CORRECTABLE_BIT OCCAMY_SOC_VERSION_REG_OFFSET OCCAMY_SOC_VERSION_VERSION_MASK OCCAMY_SOC_VERSION_VERSION_OFFSET OCCAMY_SOC_VERSION_VERSION_FIELD OCCAMY_SOC_CHIP_ID_REG_OFFSET OCCAMY_SOC_CHIP_ID_CHIP_ID_MASK OCCAMY_SOC_CHIP_ID_CHIP_ID_OFFSET OCCAMY_SOC_CHIP_ID_CHIP_ID_FIELD OCCAMY_SOC_SCRATCH_SCRATCH_FIELD_WIDTH OCCAMY_SOC_SCRATCH_SCRATCH_FIELDS_PER_REG OCCAMY_SOC_SCRATCH_MULTIREG_COUNT OCCAMY_SOC_SCRATCH_0_REG_OFFSET OCCAMY_SOC_SCRATCH_1_REG_OFFSET OCCAMY_SOC_SCRATCH_2_REG_OFFSET OCCAMY_SOC_SCRATCH_3_REG_OFFSET OCCAMY_SOC_BOOT_MODE_REG_OFFSET OCCAMY_SOC_BOOT_MODE_MODE_MASK OCCAMY_SOC_BOOT_MODE_MODE_OFFSET OCCAMY_SOC_BOOT_MODE_MODE_FIELD OCCAMY_SOC_BOOT_MODE_MODE_VALUE_IDLE OCCAMY_SOC_BOOT_MODE_MODE_VALUE_SERIAL OCCAMY_SOC_BOOT_MODE_MODE_VALUE_I2C OCCAMY_SOC_NUM_QUADRANTS_REG_OFFSET OCCAMY_SOC_PAD_0_REG_OFFSET OCCAMY_SOC_PAD_0_SLW_0_BIT OCCAMY_SOC_PAD_0_SMT_0_BIT OCCAMY_SOC_PAD_0_DRV_0_MASK OCCAMY_SOC_PAD_0_DRV_0_OFFSET OCCAMY_SOC_PAD_0_DRV_0_FIELD OCCAMY_SOC_PAD_1_REG_OFFSET OCCAMY_SOC_PAD_1_SLW_1_BIT OCCAMY_SOC_PAD_1_SMT_1_BIT OCCAMY_SOC_PAD_1_DRV_1_MASK OCCAMY_SOC_PAD_1_DRV_1_OFFSET OCCAMY_SOC_PAD_1_DRV_1_FIELD OCCAMY_SOC_PAD_2_REG_OFFSET OCCAMY_SOC_PAD_2_SLW_2_BIT OCCAMY_SOC_PAD_2_SMT_2_BIT OCCAMY_SOC_PAD_2_DRV_2_MASK OCCAMY_SOC_PAD_2_DRV_2_OFFSET OCCAMY_SOC_PAD_2_DRV_2_FIELD OCCAMY_SOC_PAD_3_REG_OFFSET OCCAMY_SOC_PAD_3_SLW_3_BIT OCCAMY_SOC_PAD_3_SMT_3_BIT OCCAMY_SOC_PAD_3_DRV_3_MASK OCCAMY_SOC_PAD_3_DRV_3_OFFSET OCCAMY_SOC_PAD_3_DRV_3_FIELD OCCAMY_SOC_PAD_4_REG_OFFSET OCCAMY_SOC_PAD_4_SLW_4_BIT OCCAMY_SOC_PAD_4_SMT_4_BIT OCCAMY_SOC_PAD_4_DRV_4_MASK OCCAMY_SOC_PAD_4_DRV_4_OFFSET OCCAMY_SOC_PAD_4_DRV_4_FIELD OCCAMY_SOC_PAD_5_REG_OFFSET OCCAMY_SOC_PAD_5_SLW_5_BIT OCCAMY_SOC_PAD_5_SMT_5_BIT OCCAMY_SOC_PAD_5_DRV_5_MASK OCCAMY_SOC_PAD_5_DRV_5_OFFSET OCCAMY_SOC_PAD_5_DRV_5_FIELD OCCAMY_SOC_PAD_6_REG_OFFSET OCCAMY_SOC_PAD_6_SLW_6_BIT OCCAMY_SOC_PAD_6_SMT_6_BIT OCCAMY_SOC_PAD_6_DRV_6_MASK OCCAMY_SOC_PAD_6_DRV_6_OFFSET OCCAMY_SOC_PAD_6_DRV_6_FIELD OCCAMY_SOC_PAD_7_REG_OFFSET OCCAMY_SOC_PAD_7_SLW_7_BIT OCCAMY_SOC_PAD_7_SMT_7_BIT OCCAMY_SOC_PAD_7_DRV_7_MASK OCCAMY_SOC_PAD_7_DRV_7_OFFSET OCCAMY_SOC_PAD_7_DRV_7_FIELD OCCAMY_SOC_PAD_8_REG_OFFSET OCCAMY_SOC_PAD_8_SLW_8_BIT OCCAMY_SOC_PAD_8_SMT_8_BIT OCCAMY_SOC_PAD_8_DRV_8_MASK OCCAMY_SOC_PAD_8_DRV_8_OFFSET OCCAMY_SOC_PAD_8_DRV_8_FIELD OCCAMY_SOC_PAD_9_REG_OFFSET OCCAMY_SOC_PAD_9_SLW_9_BIT OCCAMY_SOC_PAD_9_SMT_9_BIT OCCAMY_SOC_PAD_9_DRV_9_MASK OCCAMY_SOC_PAD_9_DRV_9_OFFSET OCCAMY_SOC_PAD_9_DRV_9_FIELD OCCAMY_SOC_PAD_10_REG_OFFSET OCCAMY_SOC_PAD_10_SLW_10_BIT OCCAMY_SOC_PAD_10_SMT_10_BIT OCCAMY_SOC_PAD_10_DRV_10_MASK OCCAMY_SOC_PAD_10_DRV_10_OFFSET OCCAMY_SOC_PAD_10_DRV_10_FIELD OCCAMY_SOC_PAD_11_REG_OFFSET OCCAMY_SOC_PAD_11_SLW_11_BIT OCCAMY_SOC_PAD_11_SMT_11_BIT OCCAMY_SOC_PAD_11_DRV_11_MASK OCCAMY_SOC_PAD_11_DRV_11_OFFSET OCCAMY_SOC_PAD_11_DRV_11_FIELD OCCAMY_SOC_PAD_12_REG_OFFSET OCCAMY_SOC_PAD_12_SLW_12_BIT OCCAMY_SOC_PAD_12_SMT_12_BIT OCCAMY_SOC_PAD_12_DRV_12_MASK OCCAMY_SOC_PAD_12_DRV_12_OFFSET OCCAMY_SOC_PAD_12_DRV_12_FIELD OCCAMY_SOC_PAD_13_REG_OFFSET OCCAMY_SOC_PAD_13_SLW_13_BIT OCCAMY_SOC_PAD_13_SMT_13_BIT OCCAMY_SOC_PAD_13_DRV_13_MASK OCCAMY_SOC_PAD_13_DRV_13_OFFSET OCCAMY_SOC_PAD_13_DRV_13_FIELD OCCAMY_SOC_PAD_14_REG_OFFSET OCCAMY_SOC_PAD_14_SLW_14_BIT OCCAMY_SOC_PAD_14_SMT_14_BIT OCCAMY_SOC_PAD_14_DRV_14_MASK OCCAMY_SOC_PAD_14_DRV_14_OFFSET OCCAMY_SOC_PAD_14_DRV_14_FIELD OCCAMY_SOC_PAD_15_REG_OFFSET OCCAMY_SOC_PAD_15_SLW_15_BIT OCCAMY_SOC_PAD_15_SMT_15_BIT OCCAMY_SOC_PAD_15_DRV_15_MASK OCCAMY_SOC_PAD_15_DRV_15_OFFSET OCCAMY_SOC_PAD_15_DRV_15_FIELD OCCAMY_SOC_PAD_16_REG_OFFSET OCCAMY_SOC_PAD_16_SLW_16_BIT OCCAMY_SOC_PAD_16_SMT_16_BIT OCCAMY_SOC_PAD_16_DRV_16_MASK OCCAMY_SOC_PAD_16_DRV_16_OFFSET OCCAMY_SOC_PAD_16_DRV_16_FIELD OCCAMY_SOC_PAD_17_REG_OFFSET OCCAMY_SOC_PAD_17_SLW_17_BIT OCCAMY_SOC_PAD_17_SMT_17_BIT OCCAMY_SOC_PAD_17_DRV_17_MASK OCCAMY_SOC_PAD_17_DRV_17_OFFSET OCCAMY_SOC_PAD_17_DRV_17_FIELD OCCAMY_SOC_PAD_18_REG_OFFSET OCCAMY_SOC_PAD_18_SLW_18_BIT OCCAMY_SOC_PAD_18_SMT_18_BIT OCCAMY_SOC_PAD_18_DRV_18_MASK OCCAMY_SOC_PAD_18_DRV_18_OFFSET OCCAMY_SOC_PAD_18_DRV_18_FIELD OCCAMY_SOC_PAD_19_REG_OFFSET OCCAMY_SOC_PAD_19_SLW_19_BIT OCCAMY_SOC_PAD_19_SMT_19_BIT OCCAMY_SOC_PAD_19_DRV_19_MASK OCCAMY_SOC_PAD_19_DRV_19_OFFSET OCCAMY_SOC_PAD_19_DRV_19_FIELD OCCAMY_SOC_PAD_20_REG_OFFSET OCCAMY_SOC_PAD_20_SLW_20_BIT OCCAMY_SOC_PAD_20_SMT_20_BIT OCCAMY_SOC_PAD_20_DRV_20_MASK OCCAMY_SOC_PAD_20_DRV_20_OFFSET OCCAMY_SOC_PAD_20_DRV_20_FIELD OCCAMY_SOC_PAD_21_REG_OFFSET OCCAMY_SOC_PAD_21_SLW_21_BIT OCCAMY_SOC_PAD_21_SMT_21_BIT OCCAMY_SOC_PAD_21_DRV_21_MASK OCCAMY_SOC_PAD_21_DRV_21_OFFSET OCCAMY_SOC_PAD_21_DRV_21_FIELD OCCAMY_SOC_PAD_22_REG_OFFSET OCCAMY_SOC_PAD_22_SLW_22_BIT OCCAMY_SOC_PAD_22_SMT_22_BIT OCCAMY_SOC_PAD_22_DRV_22_MASK OCCAMY_SOC_PAD_22_DRV_22_OFFSET OCCAMY_SOC_PAD_22_DRV_22_FIELD OCCAMY_SOC_PAD_23_REG_OFFSET OCCAMY_SOC_PAD_23_SLW_23_BIT OCCAMY_SOC_PAD_23_SMT_23_BIT OCCAMY_SOC_PAD_23_DRV_23_MASK OCCAMY_SOC_PAD_23_DRV_23_OFFSET OCCAMY_SOC_PAD_23_DRV_23_FIELD OCCAMY_SOC_PAD_24_REG_OFFSET OCCAMY_SOC_PAD_24_SLW_24_BIT OCCAMY_SOC_PAD_24_SMT_24_BIT OCCAMY_SOC_PAD_24_DRV_24_MASK OCCAMY_SOC_PAD_24_DRV_24_OFFSET OCCAMY_SOC_PAD_24_DRV_24_FIELD OCCAMY_SOC_PAD_25_REG_OFFSET OCCAMY_SOC_PAD_25_SLW_25_BIT OCCAMY_SOC_PAD_25_SMT_25_BIT OCCAMY_SOC_PAD_25_DRV_25_MASK OCCAMY_SOC_PAD_25_DRV_25_OFFSET OCCAMY_SOC_PAD_25_DRV_25_FIELD OCCAMY_SOC_PAD_26_REG_OFFSET OCCAMY_SOC_PAD_26_SLW_26_BIT OCCAMY_SOC_PAD_26_SMT_26_BIT OCCAMY_SOC_PAD_26_DRV_26_MASK OCCAMY_SOC_PAD_26_DRV_26_OFFSET OCCAMY_SOC_PAD_26_DRV_26_FIELD OCCAMY_SOC_PAD_27_REG_OFFSET OCCAMY_SOC_PAD_27_SLW_27_BIT OCCAMY_SOC_PAD_27_SMT_27_BIT OCCAMY_SOC_PAD_27_DRV_27_MASK OCCAMY_SOC_PAD_27_DRV_27_OFFSET OCCAMY_SOC_PAD_27_DRV_27_FIELD OCCAMY_SOC_PAD_28_REG_OFFSET OCCAMY_SOC_PAD_28_SLW_28_BIT OCCAMY_SOC_PAD_28_SMT_28_BIT OCCAMY_SOC_PAD_28_DRV_28_MASK OCCAMY_SOC_PAD_28_DRV_28_OFFSET OCCAMY_SOC_PAD_28_DRV_28_FIELD OCCAMY_SOC_PAD_29_REG_OFFSET OCCAMY_SOC_PAD_29_SLW_29_BIT OCCAMY_SOC_PAD_29_SMT_29_BIT OCCAMY_SOC_PAD_29_DRV_29_MASK OCCAMY_SOC_PAD_29_DRV_29_OFFSET OCCAMY_SOC_PAD_29_DRV_29_FIELD OCCAMY_SOC_PAD_30_REG_OFFSET OCCAMY_SOC_PAD_30_SLW_30_BIT OCCAMY_SOC_PAD_30_SMT_30_BIT OCCAMY_SOC_PAD_30_DRV_30_MASK OCCAMY_SOC_PAD_30_DRV_30_OFFSET OCCAMY_SOC_PAD_30_DRV_30_FIELD"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_param_num_scratch_regs","title":"define OCCAMY_SOC_PARAM_NUM_SCRATCH_REGS","text":"<pre><code>#define OCCAMY_SOC_PARAM_NUM_SCRATCH_REGS 4\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_param_num_pads","title":"define OCCAMY_SOC_PARAM_NUM_PADS","text":"<pre><code>#define OCCAMY_SOC_PARAM_NUM_PADS 31\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_param_reg_width","title":"define OCCAMY_SOC_PARAM_REG_WIDTH","text":"<pre><code>#define OCCAMY_SOC_PARAM_REG_WIDTH 32\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_common_ecc_narrow_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_COMMON_ECC_NARROW_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_COMMON_ECC_NARROW_UNCORRECTABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_common_ecc_narrow_correctable_bit","title":"define OCCAMY_SOC_INTR_COMMON_ECC_NARROW_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_COMMON_ECC_NARROW_CORRECTABLE_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_common_ecc_wide_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_COMMON_ECC_WIDE_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_COMMON_ECC_WIDE_UNCORRECTABLE_BIT 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_common_ecc_wide_correctable_bit","title":"define OCCAMY_SOC_INTR_COMMON_ECC_WIDE_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_COMMON_ECC_WIDE_CORRECTABLE_BIT 3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_state_reg_offset","title":"define OCCAMY_SOC_INTR_STATE_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_INTR_STATE_REG_OFFSET 0x0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_state_ecc_narrow_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_STATE_ECC_NARROW_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_STATE_ECC_NARROW_UNCORRECTABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_state_ecc_narrow_correctable_bit","title":"define OCCAMY_SOC_INTR_STATE_ECC_NARROW_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_STATE_ECC_NARROW_CORRECTABLE_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_state_ecc_wide_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_STATE_ECC_WIDE_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_STATE_ECC_WIDE_UNCORRECTABLE_BIT 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_state_ecc_wide_correctable_bit","title":"define OCCAMY_SOC_INTR_STATE_ECC_WIDE_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_STATE_ECC_WIDE_CORRECTABLE_BIT 3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_enable_reg_offset","title":"define OCCAMY_SOC_INTR_ENABLE_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_INTR_ENABLE_REG_OFFSET 0x4\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_enable_ecc_narrow_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_UNCORRECTABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_enable_ecc_narrow_correctable_bit","title":"define OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_CORRECTABLE_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_enable_ecc_wide_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_UNCORRECTABLE_BIT 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_enable_ecc_wide_correctable_bit","title":"define OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_CORRECTABLE_BIT 3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_test_reg_offset","title":"define OCCAMY_SOC_INTR_TEST_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_INTR_TEST_REG_OFFSET 0x8\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_test_ecc_narrow_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_TEST_ECC_NARROW_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_TEST_ECC_NARROW_UNCORRECTABLE_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_test_ecc_narrow_correctable_bit","title":"define OCCAMY_SOC_INTR_TEST_ECC_NARROW_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_TEST_ECC_NARROW_CORRECTABLE_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_test_ecc_wide_uncorrectable_bit","title":"define OCCAMY_SOC_INTR_TEST_ECC_WIDE_UNCORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_TEST_ECC_WIDE_UNCORRECTABLE_BIT 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_intr_test_ecc_wide_correctable_bit","title":"define OCCAMY_SOC_INTR_TEST_ECC_WIDE_CORRECTABLE_BIT","text":"<pre><code>#define OCCAMY_SOC_INTR_TEST_ECC_WIDE_CORRECTABLE_BIT 3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_version_reg_offset","title":"define OCCAMY_SOC_VERSION_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_VERSION_REG_OFFSET 0xc\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_version_version_mask","title":"define OCCAMY_SOC_VERSION_VERSION_MASK","text":"<pre><code>#define OCCAMY_SOC_VERSION_VERSION_MASK 0xffff\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_version_version_offset","title":"define OCCAMY_SOC_VERSION_VERSION_OFFSET","text":"<pre><code>#define OCCAMY_SOC_VERSION_VERSION_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_version_version_field","title":"define OCCAMY_SOC_VERSION_VERSION_FIELD","text":"<pre><code>#define OCCAMY_SOC_VERSION_VERSION_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_VERSION_VERSION_MASK, \\\n                          .index = OCCAMY_SOC_VERSION_VERSION_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_chip_id_reg_offset","title":"define OCCAMY_SOC_CHIP_ID_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_CHIP_ID_REG_OFFSET 0x10\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_chip_id_chip_id_mask","title":"define OCCAMY_SOC_CHIP_ID_CHIP_ID_MASK","text":"<pre><code>#define OCCAMY_SOC_CHIP_ID_CHIP_ID_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_chip_id_chip_id_offset","title":"define OCCAMY_SOC_CHIP_ID_CHIP_ID_OFFSET","text":"<pre><code>#define OCCAMY_SOC_CHIP_ID_CHIP_ID_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_chip_id_chip_id_field","title":"define OCCAMY_SOC_CHIP_ID_CHIP_ID_FIELD","text":"<pre><code>#define OCCAMY_SOC_CHIP_ID_CHIP_ID_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_CHIP_ID_CHIP_ID_MASK, \\\n                          .index = OCCAMY_SOC_CHIP_ID_CHIP_ID_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_scratch_field_width","title":"define OCCAMY_SOC_SCRATCH_SCRATCH_FIELD_WIDTH","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_SCRATCH_FIELD_WIDTH 32\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_scratch_fields_per_reg","title":"define OCCAMY_SOC_SCRATCH_SCRATCH_FIELDS_PER_REG","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_SCRATCH_FIELDS_PER_REG 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_multireg_count","title":"define OCCAMY_SOC_SCRATCH_MULTIREG_COUNT","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_MULTIREG_COUNT 4\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_0_reg_offset","title":"define OCCAMY_SOC_SCRATCH_0_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_0_REG_OFFSET 0x14\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_1_reg_offset","title":"define OCCAMY_SOC_SCRATCH_1_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_1_REG_OFFSET 0x18\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_2_reg_offset","title":"define OCCAMY_SOC_SCRATCH_2_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_2_REG_OFFSET 0x1c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_scratch_3_reg_offset","title":"define OCCAMY_SOC_SCRATCH_3_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_SCRATCH_3_REG_OFFSET 0x20\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_reg_offset","title":"define OCCAMY_SOC_BOOT_MODE_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_REG_OFFSET 0x24\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_mode_mask","title":"define OCCAMY_SOC_BOOT_MODE_MODE_MASK","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_MODE_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_mode_offset","title":"define OCCAMY_SOC_BOOT_MODE_MODE_OFFSET","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_MODE_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_mode_field","title":"define OCCAMY_SOC_BOOT_MODE_MODE_FIELD","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_MODE_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_BOOT_MODE_MODE_MASK, \\\n                          .index = OCCAMY_SOC_BOOT_MODE_MODE_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_mode_value_idle","title":"define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_IDLE","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_IDLE 0x0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_mode_value_serial","title":"define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_SERIAL","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_SERIAL 0x1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_boot_mode_mode_value_i2c","title":"define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_I2C","text":"<pre><code>#define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_I2C 0x2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_num_quadrants_reg_offset","title":"define OCCAMY_SOC_NUM_QUADRANTS_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_NUM_QUADRANTS_REG_OFFSET 0x28\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_0_reg_offset","title":"define OCCAMY_SOC_PAD_0_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_0_REG_OFFSET 0x2c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_0_slw_0_bit","title":"define OCCAMY_SOC_PAD_0_SLW_0_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_0_SLW_0_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_0_smt_0_bit","title":"define OCCAMY_SOC_PAD_0_SMT_0_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_0_SMT_0_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_0_drv_0_mask","title":"define OCCAMY_SOC_PAD_0_DRV_0_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_0_DRV_0_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_0_drv_0_offset","title":"define OCCAMY_SOC_PAD_0_DRV_0_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_0_DRV_0_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_0_drv_0_field","title":"define OCCAMY_SOC_PAD_0_DRV_0_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_0_DRV_0_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_0_DRV_0_MASK, \\\n                          .index = OCCAMY_SOC_PAD_0_DRV_0_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_1_reg_offset","title":"define OCCAMY_SOC_PAD_1_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_1_REG_OFFSET 0x30\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_1_slw_1_bit","title":"define OCCAMY_SOC_PAD_1_SLW_1_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_1_SLW_1_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_1_smt_1_bit","title":"define OCCAMY_SOC_PAD_1_SMT_1_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_1_SMT_1_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_1_drv_1_mask","title":"define OCCAMY_SOC_PAD_1_DRV_1_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_1_DRV_1_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_1_drv_1_offset","title":"define OCCAMY_SOC_PAD_1_DRV_1_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_1_DRV_1_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_1_drv_1_field","title":"define OCCAMY_SOC_PAD_1_DRV_1_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_1_DRV_1_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_1_DRV_1_MASK, \\\n                          .index = OCCAMY_SOC_PAD_1_DRV_1_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_2_reg_offset","title":"define OCCAMY_SOC_PAD_2_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_2_REG_OFFSET 0x34\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_2_slw_2_bit","title":"define OCCAMY_SOC_PAD_2_SLW_2_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_2_SLW_2_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_2_smt_2_bit","title":"define OCCAMY_SOC_PAD_2_SMT_2_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_2_SMT_2_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_2_drv_2_mask","title":"define OCCAMY_SOC_PAD_2_DRV_2_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_2_DRV_2_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_2_drv_2_offset","title":"define OCCAMY_SOC_PAD_2_DRV_2_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_2_DRV_2_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_2_drv_2_field","title":"define OCCAMY_SOC_PAD_2_DRV_2_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_2_DRV_2_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_2_DRV_2_MASK, \\\n                          .index = OCCAMY_SOC_PAD_2_DRV_2_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_3_reg_offset","title":"define OCCAMY_SOC_PAD_3_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_3_REG_OFFSET 0x38\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_3_slw_3_bit","title":"define OCCAMY_SOC_PAD_3_SLW_3_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_3_SLW_3_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_3_smt_3_bit","title":"define OCCAMY_SOC_PAD_3_SMT_3_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_3_SMT_3_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_3_drv_3_mask","title":"define OCCAMY_SOC_PAD_3_DRV_3_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_3_DRV_3_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_3_drv_3_offset","title":"define OCCAMY_SOC_PAD_3_DRV_3_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_3_DRV_3_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_3_drv_3_field","title":"define OCCAMY_SOC_PAD_3_DRV_3_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_3_DRV_3_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_3_DRV_3_MASK, \\\n                          .index = OCCAMY_SOC_PAD_3_DRV_3_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_4_reg_offset","title":"define OCCAMY_SOC_PAD_4_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_4_REG_OFFSET 0x3c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_4_slw_4_bit","title":"define OCCAMY_SOC_PAD_4_SLW_4_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_4_SLW_4_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_4_smt_4_bit","title":"define OCCAMY_SOC_PAD_4_SMT_4_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_4_SMT_4_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_4_drv_4_mask","title":"define OCCAMY_SOC_PAD_4_DRV_4_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_4_DRV_4_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_4_drv_4_offset","title":"define OCCAMY_SOC_PAD_4_DRV_4_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_4_DRV_4_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_4_drv_4_field","title":"define OCCAMY_SOC_PAD_4_DRV_4_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_4_DRV_4_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_4_DRV_4_MASK, \\\n                          .index = OCCAMY_SOC_PAD_4_DRV_4_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_5_reg_offset","title":"define OCCAMY_SOC_PAD_5_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_5_REG_OFFSET 0x40\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_5_slw_5_bit","title":"define OCCAMY_SOC_PAD_5_SLW_5_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_5_SLW_5_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_5_smt_5_bit","title":"define OCCAMY_SOC_PAD_5_SMT_5_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_5_SMT_5_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_5_drv_5_mask","title":"define OCCAMY_SOC_PAD_5_DRV_5_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_5_DRV_5_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_5_drv_5_offset","title":"define OCCAMY_SOC_PAD_5_DRV_5_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_5_DRV_5_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_5_drv_5_field","title":"define OCCAMY_SOC_PAD_5_DRV_5_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_5_DRV_5_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_5_DRV_5_MASK, \\\n                          .index = OCCAMY_SOC_PAD_5_DRV_5_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_6_reg_offset","title":"define OCCAMY_SOC_PAD_6_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_6_REG_OFFSET 0x44\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_6_slw_6_bit","title":"define OCCAMY_SOC_PAD_6_SLW_6_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_6_SLW_6_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_6_smt_6_bit","title":"define OCCAMY_SOC_PAD_6_SMT_6_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_6_SMT_6_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_6_drv_6_mask","title":"define OCCAMY_SOC_PAD_6_DRV_6_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_6_DRV_6_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_6_drv_6_offset","title":"define OCCAMY_SOC_PAD_6_DRV_6_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_6_DRV_6_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_6_drv_6_field","title":"define OCCAMY_SOC_PAD_6_DRV_6_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_6_DRV_6_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_6_DRV_6_MASK, \\\n                          .index = OCCAMY_SOC_PAD_6_DRV_6_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_7_reg_offset","title":"define OCCAMY_SOC_PAD_7_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_7_REG_OFFSET 0x48\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_7_slw_7_bit","title":"define OCCAMY_SOC_PAD_7_SLW_7_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_7_SLW_7_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_7_smt_7_bit","title":"define OCCAMY_SOC_PAD_7_SMT_7_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_7_SMT_7_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_7_drv_7_mask","title":"define OCCAMY_SOC_PAD_7_DRV_7_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_7_DRV_7_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_7_drv_7_offset","title":"define OCCAMY_SOC_PAD_7_DRV_7_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_7_DRV_7_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_7_drv_7_field","title":"define OCCAMY_SOC_PAD_7_DRV_7_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_7_DRV_7_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_7_DRV_7_MASK, \\\n                          .index = OCCAMY_SOC_PAD_7_DRV_7_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_8_reg_offset","title":"define OCCAMY_SOC_PAD_8_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_8_REG_OFFSET 0x4c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_8_slw_8_bit","title":"define OCCAMY_SOC_PAD_8_SLW_8_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_8_SLW_8_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_8_smt_8_bit","title":"define OCCAMY_SOC_PAD_8_SMT_8_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_8_SMT_8_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_8_drv_8_mask","title":"define OCCAMY_SOC_PAD_8_DRV_8_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_8_DRV_8_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_8_drv_8_offset","title":"define OCCAMY_SOC_PAD_8_DRV_8_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_8_DRV_8_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_8_drv_8_field","title":"define OCCAMY_SOC_PAD_8_DRV_8_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_8_DRV_8_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_8_DRV_8_MASK, \\\n                          .index = OCCAMY_SOC_PAD_8_DRV_8_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_9_reg_offset","title":"define OCCAMY_SOC_PAD_9_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_9_REG_OFFSET 0x50\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_9_slw_9_bit","title":"define OCCAMY_SOC_PAD_9_SLW_9_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_9_SLW_9_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_9_smt_9_bit","title":"define OCCAMY_SOC_PAD_9_SMT_9_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_9_SMT_9_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_9_drv_9_mask","title":"define OCCAMY_SOC_PAD_9_DRV_9_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_9_DRV_9_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_9_drv_9_offset","title":"define OCCAMY_SOC_PAD_9_DRV_9_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_9_DRV_9_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_9_drv_9_field","title":"define OCCAMY_SOC_PAD_9_DRV_9_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_9_DRV_9_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_9_DRV_9_MASK, \\\n                          .index = OCCAMY_SOC_PAD_9_DRV_9_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_10_reg_offset","title":"define OCCAMY_SOC_PAD_10_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_10_REG_OFFSET 0x54\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_10_slw_10_bit","title":"define OCCAMY_SOC_PAD_10_SLW_10_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_10_SLW_10_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_10_smt_10_bit","title":"define OCCAMY_SOC_PAD_10_SMT_10_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_10_SMT_10_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_10_drv_10_mask","title":"define OCCAMY_SOC_PAD_10_DRV_10_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_10_DRV_10_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_10_drv_10_offset","title":"define OCCAMY_SOC_PAD_10_DRV_10_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_10_DRV_10_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_10_drv_10_field","title":"define OCCAMY_SOC_PAD_10_DRV_10_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_10_DRV_10_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_10_DRV_10_MASK, \\\n                          .index = OCCAMY_SOC_PAD_10_DRV_10_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_11_reg_offset","title":"define OCCAMY_SOC_PAD_11_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_11_REG_OFFSET 0x58\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_11_slw_11_bit","title":"define OCCAMY_SOC_PAD_11_SLW_11_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_11_SLW_11_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_11_smt_11_bit","title":"define OCCAMY_SOC_PAD_11_SMT_11_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_11_SMT_11_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_11_drv_11_mask","title":"define OCCAMY_SOC_PAD_11_DRV_11_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_11_DRV_11_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_11_drv_11_offset","title":"define OCCAMY_SOC_PAD_11_DRV_11_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_11_DRV_11_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_11_drv_11_field","title":"define OCCAMY_SOC_PAD_11_DRV_11_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_11_DRV_11_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_11_DRV_11_MASK, \\\n                          .index = OCCAMY_SOC_PAD_11_DRV_11_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_12_reg_offset","title":"define OCCAMY_SOC_PAD_12_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_12_REG_OFFSET 0x5c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_12_slw_12_bit","title":"define OCCAMY_SOC_PAD_12_SLW_12_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_12_SLW_12_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_12_smt_12_bit","title":"define OCCAMY_SOC_PAD_12_SMT_12_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_12_SMT_12_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_12_drv_12_mask","title":"define OCCAMY_SOC_PAD_12_DRV_12_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_12_DRV_12_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_12_drv_12_offset","title":"define OCCAMY_SOC_PAD_12_DRV_12_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_12_DRV_12_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_12_drv_12_field","title":"define OCCAMY_SOC_PAD_12_DRV_12_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_12_DRV_12_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_12_DRV_12_MASK, \\\n                          .index = OCCAMY_SOC_PAD_12_DRV_12_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_13_reg_offset","title":"define OCCAMY_SOC_PAD_13_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_13_REG_OFFSET 0x60\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_13_slw_13_bit","title":"define OCCAMY_SOC_PAD_13_SLW_13_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_13_SLW_13_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_13_smt_13_bit","title":"define OCCAMY_SOC_PAD_13_SMT_13_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_13_SMT_13_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_13_drv_13_mask","title":"define OCCAMY_SOC_PAD_13_DRV_13_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_13_DRV_13_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_13_drv_13_offset","title":"define OCCAMY_SOC_PAD_13_DRV_13_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_13_DRV_13_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_13_drv_13_field","title":"define OCCAMY_SOC_PAD_13_DRV_13_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_13_DRV_13_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_13_DRV_13_MASK, \\\n                          .index = OCCAMY_SOC_PAD_13_DRV_13_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_14_reg_offset","title":"define OCCAMY_SOC_PAD_14_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_14_REG_OFFSET 0x64\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_14_slw_14_bit","title":"define OCCAMY_SOC_PAD_14_SLW_14_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_14_SLW_14_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_14_smt_14_bit","title":"define OCCAMY_SOC_PAD_14_SMT_14_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_14_SMT_14_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_14_drv_14_mask","title":"define OCCAMY_SOC_PAD_14_DRV_14_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_14_DRV_14_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_14_drv_14_offset","title":"define OCCAMY_SOC_PAD_14_DRV_14_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_14_DRV_14_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_14_drv_14_field","title":"define OCCAMY_SOC_PAD_14_DRV_14_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_14_DRV_14_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_14_DRV_14_MASK, \\\n                          .index = OCCAMY_SOC_PAD_14_DRV_14_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_15_reg_offset","title":"define OCCAMY_SOC_PAD_15_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_15_REG_OFFSET 0x68\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_15_slw_15_bit","title":"define OCCAMY_SOC_PAD_15_SLW_15_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_15_SLW_15_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_15_smt_15_bit","title":"define OCCAMY_SOC_PAD_15_SMT_15_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_15_SMT_15_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_15_drv_15_mask","title":"define OCCAMY_SOC_PAD_15_DRV_15_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_15_DRV_15_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_15_drv_15_offset","title":"define OCCAMY_SOC_PAD_15_DRV_15_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_15_DRV_15_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_15_drv_15_field","title":"define OCCAMY_SOC_PAD_15_DRV_15_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_15_DRV_15_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_15_DRV_15_MASK, \\\n                          .index = OCCAMY_SOC_PAD_15_DRV_15_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_16_reg_offset","title":"define OCCAMY_SOC_PAD_16_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_16_REG_OFFSET 0x6c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_16_slw_16_bit","title":"define OCCAMY_SOC_PAD_16_SLW_16_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_16_SLW_16_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_16_smt_16_bit","title":"define OCCAMY_SOC_PAD_16_SMT_16_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_16_SMT_16_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_16_drv_16_mask","title":"define OCCAMY_SOC_PAD_16_DRV_16_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_16_DRV_16_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_16_drv_16_offset","title":"define OCCAMY_SOC_PAD_16_DRV_16_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_16_DRV_16_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_16_drv_16_field","title":"define OCCAMY_SOC_PAD_16_DRV_16_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_16_DRV_16_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_16_DRV_16_MASK, \\\n                          .index = OCCAMY_SOC_PAD_16_DRV_16_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_17_reg_offset","title":"define OCCAMY_SOC_PAD_17_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_17_REG_OFFSET 0x70\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_17_slw_17_bit","title":"define OCCAMY_SOC_PAD_17_SLW_17_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_17_SLW_17_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_17_smt_17_bit","title":"define OCCAMY_SOC_PAD_17_SMT_17_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_17_SMT_17_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_17_drv_17_mask","title":"define OCCAMY_SOC_PAD_17_DRV_17_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_17_DRV_17_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_17_drv_17_offset","title":"define OCCAMY_SOC_PAD_17_DRV_17_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_17_DRV_17_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_17_drv_17_field","title":"define OCCAMY_SOC_PAD_17_DRV_17_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_17_DRV_17_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_17_DRV_17_MASK, \\\n                          .index = OCCAMY_SOC_PAD_17_DRV_17_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_18_reg_offset","title":"define OCCAMY_SOC_PAD_18_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_18_REG_OFFSET 0x74\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_18_slw_18_bit","title":"define OCCAMY_SOC_PAD_18_SLW_18_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_18_SLW_18_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_18_smt_18_bit","title":"define OCCAMY_SOC_PAD_18_SMT_18_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_18_SMT_18_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_18_drv_18_mask","title":"define OCCAMY_SOC_PAD_18_DRV_18_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_18_DRV_18_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_18_drv_18_offset","title":"define OCCAMY_SOC_PAD_18_DRV_18_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_18_DRV_18_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_18_drv_18_field","title":"define OCCAMY_SOC_PAD_18_DRV_18_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_18_DRV_18_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_18_DRV_18_MASK, \\\n                          .index = OCCAMY_SOC_PAD_18_DRV_18_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_19_reg_offset","title":"define OCCAMY_SOC_PAD_19_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_19_REG_OFFSET 0x78\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_19_slw_19_bit","title":"define OCCAMY_SOC_PAD_19_SLW_19_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_19_SLW_19_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_19_smt_19_bit","title":"define OCCAMY_SOC_PAD_19_SMT_19_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_19_SMT_19_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_19_drv_19_mask","title":"define OCCAMY_SOC_PAD_19_DRV_19_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_19_DRV_19_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_19_drv_19_offset","title":"define OCCAMY_SOC_PAD_19_DRV_19_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_19_DRV_19_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_19_drv_19_field","title":"define OCCAMY_SOC_PAD_19_DRV_19_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_19_DRV_19_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_19_DRV_19_MASK, \\\n                          .index = OCCAMY_SOC_PAD_19_DRV_19_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_20_reg_offset","title":"define OCCAMY_SOC_PAD_20_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_20_REG_OFFSET 0x7c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_20_slw_20_bit","title":"define OCCAMY_SOC_PAD_20_SLW_20_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_20_SLW_20_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_20_smt_20_bit","title":"define OCCAMY_SOC_PAD_20_SMT_20_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_20_SMT_20_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_20_drv_20_mask","title":"define OCCAMY_SOC_PAD_20_DRV_20_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_20_DRV_20_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_20_drv_20_offset","title":"define OCCAMY_SOC_PAD_20_DRV_20_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_20_DRV_20_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_20_drv_20_field","title":"define OCCAMY_SOC_PAD_20_DRV_20_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_20_DRV_20_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_20_DRV_20_MASK, \\\n                          .index = OCCAMY_SOC_PAD_20_DRV_20_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_21_reg_offset","title":"define OCCAMY_SOC_PAD_21_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_21_REG_OFFSET 0x80\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_21_slw_21_bit","title":"define OCCAMY_SOC_PAD_21_SLW_21_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_21_SLW_21_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_21_smt_21_bit","title":"define OCCAMY_SOC_PAD_21_SMT_21_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_21_SMT_21_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_21_drv_21_mask","title":"define OCCAMY_SOC_PAD_21_DRV_21_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_21_DRV_21_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_21_drv_21_offset","title":"define OCCAMY_SOC_PAD_21_DRV_21_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_21_DRV_21_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_21_drv_21_field","title":"define OCCAMY_SOC_PAD_21_DRV_21_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_21_DRV_21_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_21_DRV_21_MASK, \\\n                          .index = OCCAMY_SOC_PAD_21_DRV_21_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_22_reg_offset","title":"define OCCAMY_SOC_PAD_22_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_22_REG_OFFSET 0x84\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_22_slw_22_bit","title":"define OCCAMY_SOC_PAD_22_SLW_22_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_22_SLW_22_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_22_smt_22_bit","title":"define OCCAMY_SOC_PAD_22_SMT_22_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_22_SMT_22_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_22_drv_22_mask","title":"define OCCAMY_SOC_PAD_22_DRV_22_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_22_DRV_22_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_22_drv_22_offset","title":"define OCCAMY_SOC_PAD_22_DRV_22_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_22_DRV_22_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_22_drv_22_field","title":"define OCCAMY_SOC_PAD_22_DRV_22_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_22_DRV_22_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_22_DRV_22_MASK, \\\n                          .index = OCCAMY_SOC_PAD_22_DRV_22_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_23_reg_offset","title":"define OCCAMY_SOC_PAD_23_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_23_REG_OFFSET 0x88\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_23_slw_23_bit","title":"define OCCAMY_SOC_PAD_23_SLW_23_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_23_SLW_23_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_23_smt_23_bit","title":"define OCCAMY_SOC_PAD_23_SMT_23_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_23_SMT_23_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_23_drv_23_mask","title":"define OCCAMY_SOC_PAD_23_DRV_23_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_23_DRV_23_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_23_drv_23_offset","title":"define OCCAMY_SOC_PAD_23_DRV_23_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_23_DRV_23_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_23_drv_23_field","title":"define OCCAMY_SOC_PAD_23_DRV_23_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_23_DRV_23_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_23_DRV_23_MASK, \\\n                          .index = OCCAMY_SOC_PAD_23_DRV_23_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_24_reg_offset","title":"define OCCAMY_SOC_PAD_24_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_24_REG_OFFSET 0x8c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_24_slw_24_bit","title":"define OCCAMY_SOC_PAD_24_SLW_24_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_24_SLW_24_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_24_smt_24_bit","title":"define OCCAMY_SOC_PAD_24_SMT_24_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_24_SMT_24_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_24_drv_24_mask","title":"define OCCAMY_SOC_PAD_24_DRV_24_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_24_DRV_24_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_24_drv_24_offset","title":"define OCCAMY_SOC_PAD_24_DRV_24_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_24_DRV_24_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_24_drv_24_field","title":"define OCCAMY_SOC_PAD_24_DRV_24_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_24_DRV_24_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_24_DRV_24_MASK, \\\n                          .index = OCCAMY_SOC_PAD_24_DRV_24_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_25_reg_offset","title":"define OCCAMY_SOC_PAD_25_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_25_REG_OFFSET 0x90\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_25_slw_25_bit","title":"define OCCAMY_SOC_PAD_25_SLW_25_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_25_SLW_25_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_25_smt_25_bit","title":"define OCCAMY_SOC_PAD_25_SMT_25_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_25_SMT_25_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_25_drv_25_mask","title":"define OCCAMY_SOC_PAD_25_DRV_25_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_25_DRV_25_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_25_drv_25_offset","title":"define OCCAMY_SOC_PAD_25_DRV_25_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_25_DRV_25_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_25_drv_25_field","title":"define OCCAMY_SOC_PAD_25_DRV_25_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_25_DRV_25_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_25_DRV_25_MASK, \\\n                          .index = OCCAMY_SOC_PAD_25_DRV_25_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_26_reg_offset","title":"define OCCAMY_SOC_PAD_26_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_26_REG_OFFSET 0x94\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_26_slw_26_bit","title":"define OCCAMY_SOC_PAD_26_SLW_26_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_26_SLW_26_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_26_smt_26_bit","title":"define OCCAMY_SOC_PAD_26_SMT_26_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_26_SMT_26_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_26_drv_26_mask","title":"define OCCAMY_SOC_PAD_26_DRV_26_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_26_DRV_26_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_26_drv_26_offset","title":"define OCCAMY_SOC_PAD_26_DRV_26_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_26_DRV_26_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_26_drv_26_field","title":"define OCCAMY_SOC_PAD_26_DRV_26_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_26_DRV_26_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_26_DRV_26_MASK, \\\n                          .index = OCCAMY_SOC_PAD_26_DRV_26_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_27_reg_offset","title":"define OCCAMY_SOC_PAD_27_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_27_REG_OFFSET 0x98\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_27_slw_27_bit","title":"define OCCAMY_SOC_PAD_27_SLW_27_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_27_SLW_27_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_27_smt_27_bit","title":"define OCCAMY_SOC_PAD_27_SMT_27_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_27_SMT_27_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_27_drv_27_mask","title":"define OCCAMY_SOC_PAD_27_DRV_27_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_27_DRV_27_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_27_drv_27_offset","title":"define OCCAMY_SOC_PAD_27_DRV_27_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_27_DRV_27_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_27_drv_27_field","title":"define OCCAMY_SOC_PAD_27_DRV_27_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_27_DRV_27_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_27_DRV_27_MASK, \\\n                          .index = OCCAMY_SOC_PAD_27_DRV_27_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_28_reg_offset","title":"define OCCAMY_SOC_PAD_28_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_28_REG_OFFSET 0x9c\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_28_slw_28_bit","title":"define OCCAMY_SOC_PAD_28_SLW_28_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_28_SLW_28_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_28_smt_28_bit","title":"define OCCAMY_SOC_PAD_28_SMT_28_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_28_SMT_28_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_28_drv_28_mask","title":"define OCCAMY_SOC_PAD_28_DRV_28_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_28_DRV_28_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_28_drv_28_offset","title":"define OCCAMY_SOC_PAD_28_DRV_28_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_28_DRV_28_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_28_drv_28_field","title":"define OCCAMY_SOC_PAD_28_DRV_28_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_28_DRV_28_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_28_DRV_28_MASK, \\\n                          .index = OCCAMY_SOC_PAD_28_DRV_28_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_29_reg_offset","title":"define OCCAMY_SOC_PAD_29_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_29_REG_OFFSET 0xa0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_29_slw_29_bit","title":"define OCCAMY_SOC_PAD_29_SLW_29_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_29_SLW_29_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_29_smt_29_bit","title":"define OCCAMY_SOC_PAD_29_SMT_29_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_29_SMT_29_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_29_drv_29_mask","title":"define OCCAMY_SOC_PAD_29_DRV_29_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_29_DRV_29_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_29_drv_29_offset","title":"define OCCAMY_SOC_PAD_29_DRV_29_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_29_DRV_29_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_29_drv_29_field","title":"define OCCAMY_SOC_PAD_29_DRV_29_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_29_DRV_29_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_29_DRV_29_MASK, \\\n                          .index = OCCAMY_SOC_PAD_29_DRV_29_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_30_reg_offset","title":"define OCCAMY_SOC_PAD_30_REG_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_30_REG_OFFSET 0xa4\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_30_slw_30_bit","title":"define OCCAMY_SOC_PAD_30_SLW_30_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_30_SLW_30_BIT 0\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_30_smt_30_bit","title":"define OCCAMY_SOC_PAD_30_SMT_30_BIT","text":"<pre><code>#define OCCAMY_SOC_PAD_30_SMT_30_BIT 1\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_30_drv_30_mask","title":"define OCCAMY_SOC_PAD_30_DRV_30_MASK","text":"<pre><code>#define OCCAMY_SOC_PAD_30_DRV_30_MASK 0x3\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_30_drv_30_offset","title":"define OCCAMY_SOC_PAD_30_DRV_30_OFFSET","text":"<pre><code>#define OCCAMY_SOC_PAD_30_DRV_30_OFFSET 2\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#define-occamy_soc_pad_30_drv_30_field","title":"define OCCAMY_SOC_PAD_30_DRV_30_FIELD","text":"<pre><code>#define OCCAMY_SOC_PAD_30_DRV_30_FIELD     ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_30_DRV_30_MASK, \\\n                          .index = OCCAMY_SOC_PAD_30_DRV_30_OFFSET})\n</code></pre>"},{"location":"runtime/Files/occamy__soc__peripheral_8h/#source-code","title":"Source code","text":"<pre><code>// Generated register defines for occamy_SoC\n\n// Copyright information found in source file:\n// Copyright 2020 ETH Zurich and University of Bologna.\n\n// Licensing information found in source file:\n// Licensed under Solderpad Hardware License, Version 0.51, see LICENSE for\n// details. SPDX-License-Identifier: SHL-0.51\n\n#ifndef _OCCAMY_SOC_REG_DEFS_\n#define _OCCAMY_SOC_REG_DEFS_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n// Number of scratch registers\n#define OCCAMY_SOC_PARAM_NUM_SCRATCH_REGS 4\n\n// Number of GPIO pads in the chip.\n#define OCCAMY_SOC_PARAM_NUM_PADS 31\n\n// Register width\n#define OCCAMY_SOC_PARAM_REG_WIDTH 32\n\n// Common Interrupt Offsets\n#define OCCAMY_SOC_INTR_COMMON_ECC_NARROW_UNCORRECTABLE_BIT 0\n#define OCCAMY_SOC_INTR_COMMON_ECC_NARROW_CORRECTABLE_BIT 1\n#define OCCAMY_SOC_INTR_COMMON_ECC_WIDE_UNCORRECTABLE_BIT 2\n#define OCCAMY_SOC_INTR_COMMON_ECC_WIDE_CORRECTABLE_BIT 3\n\n// Interrupt State Register\n#define OCCAMY_SOC_INTR_STATE_REG_OFFSET 0x0\n#define OCCAMY_SOC_INTR_STATE_ECC_NARROW_UNCORRECTABLE_BIT 0\n#define OCCAMY_SOC_INTR_STATE_ECC_NARROW_CORRECTABLE_BIT 1\n#define OCCAMY_SOC_INTR_STATE_ECC_WIDE_UNCORRECTABLE_BIT 2\n#define OCCAMY_SOC_INTR_STATE_ECC_WIDE_CORRECTABLE_BIT 3\n\n// Interrupt Enable Register\n#define OCCAMY_SOC_INTR_ENABLE_REG_OFFSET 0x4\n#define OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_UNCORRECTABLE_BIT 0\n#define OCCAMY_SOC_INTR_ENABLE_ECC_NARROW_CORRECTABLE_BIT 1\n#define OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_UNCORRECTABLE_BIT 2\n#define OCCAMY_SOC_INTR_ENABLE_ECC_WIDE_CORRECTABLE_BIT 3\n\n// Interrupt Test Register\n#define OCCAMY_SOC_INTR_TEST_REG_OFFSET 0x8\n#define OCCAMY_SOC_INTR_TEST_ECC_NARROW_UNCORRECTABLE_BIT 0\n#define OCCAMY_SOC_INTR_TEST_ECC_NARROW_CORRECTABLE_BIT 1\n#define OCCAMY_SOC_INTR_TEST_ECC_WIDE_UNCORRECTABLE_BIT 2\n#define OCCAMY_SOC_INTR_TEST_ECC_WIDE_CORRECTABLE_BIT 3\n\n// Version register, should read 1.\n#define OCCAMY_SOC_VERSION_REG_OFFSET 0xc\n#define OCCAMY_SOC_VERSION_VERSION_MASK 0xffff\n#define OCCAMY_SOC_VERSION_VERSION_OFFSET 0\n#define OCCAMY_SOC_VERSION_VERSION_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_VERSION_VERSION_MASK, \\\n                          .index = OCCAMY_SOC_VERSION_VERSION_OFFSET})\n\n// Id of chip for multi-chip systems.\n#define OCCAMY_SOC_CHIP_ID_REG_OFFSET 0x10\n#define OCCAMY_SOC_CHIP_ID_CHIP_ID_MASK 0x3\n#define OCCAMY_SOC_CHIP_ID_CHIP_ID_OFFSET 0\n#define OCCAMY_SOC_CHIP_ID_CHIP_ID_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_CHIP_ID_CHIP_ID_MASK, \\\n                          .index = OCCAMY_SOC_CHIP_ID_CHIP_ID_OFFSET})\n\n// Scratch register for SW to write to. (common parameters)\n#define OCCAMY_SOC_SCRATCH_SCRATCH_FIELD_WIDTH 32\n#define OCCAMY_SOC_SCRATCH_SCRATCH_FIELDS_PER_REG 1\n#define OCCAMY_SOC_SCRATCH_MULTIREG_COUNT 4\n\n// Scratch register for SW to write to.\n#define OCCAMY_SOC_SCRATCH_0_REG_OFFSET 0x14\n\n// Scratch register for SW to write to.\n#define OCCAMY_SOC_SCRATCH_1_REG_OFFSET 0x18\n\n// Scratch register for SW to write to.\n#define OCCAMY_SOC_SCRATCH_2_REG_OFFSET 0x1c\n\n// Scratch register for SW to write to.\n#define OCCAMY_SOC_SCRATCH_3_REG_OFFSET 0x20\n\n// Selected boot mode exposed a register.\n#define OCCAMY_SOC_BOOT_MODE_REG_OFFSET 0x24\n#define OCCAMY_SOC_BOOT_MODE_MODE_MASK 0x3\n#define OCCAMY_SOC_BOOT_MODE_MODE_OFFSET 0\n#define OCCAMY_SOC_BOOT_MODE_MODE_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_BOOT_MODE_MODE_MASK, \\\n                          .index = OCCAMY_SOC_BOOT_MODE_MODE_OFFSET})\n#define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_IDLE 0x0\n#define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_SERIAL 0x1\n#define OCCAMY_SOC_BOOT_MODE_MODE_VALUE_I2C 0x2\n\n// Number of quadrants per chip.\n#define OCCAMY_SOC_NUM_QUADRANTS_REG_OFFSET 0x28\n\n// GPIO pad configuration. (common parameters)\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_0_REG_OFFSET 0x2c\n#define OCCAMY_SOC_PAD_0_SLW_0_BIT 0\n#define OCCAMY_SOC_PAD_0_SMT_0_BIT 1\n#define OCCAMY_SOC_PAD_0_DRV_0_MASK 0x3\n#define OCCAMY_SOC_PAD_0_DRV_0_OFFSET 2\n#define OCCAMY_SOC_PAD_0_DRV_0_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_0_DRV_0_MASK, \\\n                          .index = OCCAMY_SOC_PAD_0_DRV_0_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_1_REG_OFFSET 0x30\n#define OCCAMY_SOC_PAD_1_SLW_1_BIT 0\n#define OCCAMY_SOC_PAD_1_SMT_1_BIT 1\n#define OCCAMY_SOC_PAD_1_DRV_1_MASK 0x3\n#define OCCAMY_SOC_PAD_1_DRV_1_OFFSET 2\n#define OCCAMY_SOC_PAD_1_DRV_1_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_1_DRV_1_MASK, \\\n                          .index = OCCAMY_SOC_PAD_1_DRV_1_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_2_REG_OFFSET 0x34\n#define OCCAMY_SOC_PAD_2_SLW_2_BIT 0\n#define OCCAMY_SOC_PAD_2_SMT_2_BIT 1\n#define OCCAMY_SOC_PAD_2_DRV_2_MASK 0x3\n#define OCCAMY_SOC_PAD_2_DRV_2_OFFSET 2\n#define OCCAMY_SOC_PAD_2_DRV_2_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_2_DRV_2_MASK, \\\n                          .index = OCCAMY_SOC_PAD_2_DRV_2_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_3_REG_OFFSET 0x38\n#define OCCAMY_SOC_PAD_3_SLW_3_BIT 0\n#define OCCAMY_SOC_PAD_3_SMT_3_BIT 1\n#define OCCAMY_SOC_PAD_3_DRV_3_MASK 0x3\n#define OCCAMY_SOC_PAD_3_DRV_3_OFFSET 2\n#define OCCAMY_SOC_PAD_3_DRV_3_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_3_DRV_3_MASK, \\\n                          .index = OCCAMY_SOC_PAD_3_DRV_3_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_4_REG_OFFSET 0x3c\n#define OCCAMY_SOC_PAD_4_SLW_4_BIT 0\n#define OCCAMY_SOC_PAD_4_SMT_4_BIT 1\n#define OCCAMY_SOC_PAD_4_DRV_4_MASK 0x3\n#define OCCAMY_SOC_PAD_4_DRV_4_OFFSET 2\n#define OCCAMY_SOC_PAD_4_DRV_4_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_4_DRV_4_MASK, \\\n                          .index = OCCAMY_SOC_PAD_4_DRV_4_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_5_REG_OFFSET 0x40\n#define OCCAMY_SOC_PAD_5_SLW_5_BIT 0\n#define OCCAMY_SOC_PAD_5_SMT_5_BIT 1\n#define OCCAMY_SOC_PAD_5_DRV_5_MASK 0x3\n#define OCCAMY_SOC_PAD_5_DRV_5_OFFSET 2\n#define OCCAMY_SOC_PAD_5_DRV_5_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_5_DRV_5_MASK, \\\n                          .index = OCCAMY_SOC_PAD_5_DRV_5_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_6_REG_OFFSET 0x44\n#define OCCAMY_SOC_PAD_6_SLW_6_BIT 0\n#define OCCAMY_SOC_PAD_6_SMT_6_BIT 1\n#define OCCAMY_SOC_PAD_6_DRV_6_MASK 0x3\n#define OCCAMY_SOC_PAD_6_DRV_6_OFFSET 2\n#define OCCAMY_SOC_PAD_6_DRV_6_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_6_DRV_6_MASK, \\\n                          .index = OCCAMY_SOC_PAD_6_DRV_6_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_7_REG_OFFSET 0x48\n#define OCCAMY_SOC_PAD_7_SLW_7_BIT 0\n#define OCCAMY_SOC_PAD_7_SMT_7_BIT 1\n#define OCCAMY_SOC_PAD_7_DRV_7_MASK 0x3\n#define OCCAMY_SOC_PAD_7_DRV_7_OFFSET 2\n#define OCCAMY_SOC_PAD_7_DRV_7_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_7_DRV_7_MASK, \\\n                          .index = OCCAMY_SOC_PAD_7_DRV_7_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_8_REG_OFFSET 0x4c\n#define OCCAMY_SOC_PAD_8_SLW_8_BIT 0\n#define OCCAMY_SOC_PAD_8_SMT_8_BIT 1\n#define OCCAMY_SOC_PAD_8_DRV_8_MASK 0x3\n#define OCCAMY_SOC_PAD_8_DRV_8_OFFSET 2\n#define OCCAMY_SOC_PAD_8_DRV_8_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_8_DRV_8_MASK, \\\n                          .index = OCCAMY_SOC_PAD_8_DRV_8_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_9_REG_OFFSET 0x50\n#define OCCAMY_SOC_PAD_9_SLW_9_BIT 0\n#define OCCAMY_SOC_PAD_9_SMT_9_BIT 1\n#define OCCAMY_SOC_PAD_9_DRV_9_MASK 0x3\n#define OCCAMY_SOC_PAD_9_DRV_9_OFFSET 2\n#define OCCAMY_SOC_PAD_9_DRV_9_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_9_DRV_9_MASK, \\\n                          .index = OCCAMY_SOC_PAD_9_DRV_9_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_10_REG_OFFSET 0x54\n#define OCCAMY_SOC_PAD_10_SLW_10_BIT 0\n#define OCCAMY_SOC_PAD_10_SMT_10_BIT 1\n#define OCCAMY_SOC_PAD_10_DRV_10_MASK 0x3\n#define OCCAMY_SOC_PAD_10_DRV_10_OFFSET 2\n#define OCCAMY_SOC_PAD_10_DRV_10_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_10_DRV_10_MASK, \\\n                          .index = OCCAMY_SOC_PAD_10_DRV_10_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_11_REG_OFFSET 0x58\n#define OCCAMY_SOC_PAD_11_SLW_11_BIT 0\n#define OCCAMY_SOC_PAD_11_SMT_11_BIT 1\n#define OCCAMY_SOC_PAD_11_DRV_11_MASK 0x3\n#define OCCAMY_SOC_PAD_11_DRV_11_OFFSET 2\n#define OCCAMY_SOC_PAD_11_DRV_11_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_11_DRV_11_MASK, \\\n                          .index = OCCAMY_SOC_PAD_11_DRV_11_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_12_REG_OFFSET 0x5c\n#define OCCAMY_SOC_PAD_12_SLW_12_BIT 0\n#define OCCAMY_SOC_PAD_12_SMT_12_BIT 1\n#define OCCAMY_SOC_PAD_12_DRV_12_MASK 0x3\n#define OCCAMY_SOC_PAD_12_DRV_12_OFFSET 2\n#define OCCAMY_SOC_PAD_12_DRV_12_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_12_DRV_12_MASK, \\\n                          .index = OCCAMY_SOC_PAD_12_DRV_12_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_13_REG_OFFSET 0x60\n#define OCCAMY_SOC_PAD_13_SLW_13_BIT 0\n#define OCCAMY_SOC_PAD_13_SMT_13_BIT 1\n#define OCCAMY_SOC_PAD_13_DRV_13_MASK 0x3\n#define OCCAMY_SOC_PAD_13_DRV_13_OFFSET 2\n#define OCCAMY_SOC_PAD_13_DRV_13_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_13_DRV_13_MASK, \\\n                          .index = OCCAMY_SOC_PAD_13_DRV_13_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_14_REG_OFFSET 0x64\n#define OCCAMY_SOC_PAD_14_SLW_14_BIT 0\n#define OCCAMY_SOC_PAD_14_SMT_14_BIT 1\n#define OCCAMY_SOC_PAD_14_DRV_14_MASK 0x3\n#define OCCAMY_SOC_PAD_14_DRV_14_OFFSET 2\n#define OCCAMY_SOC_PAD_14_DRV_14_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_14_DRV_14_MASK, \\\n                          .index = OCCAMY_SOC_PAD_14_DRV_14_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_15_REG_OFFSET 0x68\n#define OCCAMY_SOC_PAD_15_SLW_15_BIT 0\n#define OCCAMY_SOC_PAD_15_SMT_15_BIT 1\n#define OCCAMY_SOC_PAD_15_DRV_15_MASK 0x3\n#define OCCAMY_SOC_PAD_15_DRV_15_OFFSET 2\n#define OCCAMY_SOC_PAD_15_DRV_15_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_15_DRV_15_MASK, \\\n                          .index = OCCAMY_SOC_PAD_15_DRV_15_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_16_REG_OFFSET 0x6c\n#define OCCAMY_SOC_PAD_16_SLW_16_BIT 0\n#define OCCAMY_SOC_PAD_16_SMT_16_BIT 1\n#define OCCAMY_SOC_PAD_16_DRV_16_MASK 0x3\n#define OCCAMY_SOC_PAD_16_DRV_16_OFFSET 2\n#define OCCAMY_SOC_PAD_16_DRV_16_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_16_DRV_16_MASK, \\\n                          .index = OCCAMY_SOC_PAD_16_DRV_16_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_17_REG_OFFSET 0x70\n#define OCCAMY_SOC_PAD_17_SLW_17_BIT 0\n#define OCCAMY_SOC_PAD_17_SMT_17_BIT 1\n#define OCCAMY_SOC_PAD_17_DRV_17_MASK 0x3\n#define OCCAMY_SOC_PAD_17_DRV_17_OFFSET 2\n#define OCCAMY_SOC_PAD_17_DRV_17_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_17_DRV_17_MASK, \\\n                          .index = OCCAMY_SOC_PAD_17_DRV_17_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_18_REG_OFFSET 0x74\n#define OCCAMY_SOC_PAD_18_SLW_18_BIT 0\n#define OCCAMY_SOC_PAD_18_SMT_18_BIT 1\n#define OCCAMY_SOC_PAD_18_DRV_18_MASK 0x3\n#define OCCAMY_SOC_PAD_18_DRV_18_OFFSET 2\n#define OCCAMY_SOC_PAD_18_DRV_18_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_18_DRV_18_MASK, \\\n                          .index = OCCAMY_SOC_PAD_18_DRV_18_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_19_REG_OFFSET 0x78\n#define OCCAMY_SOC_PAD_19_SLW_19_BIT 0\n#define OCCAMY_SOC_PAD_19_SMT_19_BIT 1\n#define OCCAMY_SOC_PAD_19_DRV_19_MASK 0x3\n#define OCCAMY_SOC_PAD_19_DRV_19_OFFSET 2\n#define OCCAMY_SOC_PAD_19_DRV_19_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_19_DRV_19_MASK, \\\n                          .index = OCCAMY_SOC_PAD_19_DRV_19_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_20_REG_OFFSET 0x7c\n#define OCCAMY_SOC_PAD_20_SLW_20_BIT 0\n#define OCCAMY_SOC_PAD_20_SMT_20_BIT 1\n#define OCCAMY_SOC_PAD_20_DRV_20_MASK 0x3\n#define OCCAMY_SOC_PAD_20_DRV_20_OFFSET 2\n#define OCCAMY_SOC_PAD_20_DRV_20_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_20_DRV_20_MASK, \\\n                          .index = OCCAMY_SOC_PAD_20_DRV_20_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_21_REG_OFFSET 0x80\n#define OCCAMY_SOC_PAD_21_SLW_21_BIT 0\n#define OCCAMY_SOC_PAD_21_SMT_21_BIT 1\n#define OCCAMY_SOC_PAD_21_DRV_21_MASK 0x3\n#define OCCAMY_SOC_PAD_21_DRV_21_OFFSET 2\n#define OCCAMY_SOC_PAD_21_DRV_21_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_21_DRV_21_MASK, \\\n                          .index = OCCAMY_SOC_PAD_21_DRV_21_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_22_REG_OFFSET 0x84\n#define OCCAMY_SOC_PAD_22_SLW_22_BIT 0\n#define OCCAMY_SOC_PAD_22_SMT_22_BIT 1\n#define OCCAMY_SOC_PAD_22_DRV_22_MASK 0x3\n#define OCCAMY_SOC_PAD_22_DRV_22_OFFSET 2\n#define OCCAMY_SOC_PAD_22_DRV_22_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_22_DRV_22_MASK, \\\n                          .index = OCCAMY_SOC_PAD_22_DRV_22_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_23_REG_OFFSET 0x88\n#define OCCAMY_SOC_PAD_23_SLW_23_BIT 0\n#define OCCAMY_SOC_PAD_23_SMT_23_BIT 1\n#define OCCAMY_SOC_PAD_23_DRV_23_MASK 0x3\n#define OCCAMY_SOC_PAD_23_DRV_23_OFFSET 2\n#define OCCAMY_SOC_PAD_23_DRV_23_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_23_DRV_23_MASK, \\\n                          .index = OCCAMY_SOC_PAD_23_DRV_23_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_24_REG_OFFSET 0x8c\n#define OCCAMY_SOC_PAD_24_SLW_24_BIT 0\n#define OCCAMY_SOC_PAD_24_SMT_24_BIT 1\n#define OCCAMY_SOC_PAD_24_DRV_24_MASK 0x3\n#define OCCAMY_SOC_PAD_24_DRV_24_OFFSET 2\n#define OCCAMY_SOC_PAD_24_DRV_24_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_24_DRV_24_MASK, \\\n                          .index = OCCAMY_SOC_PAD_24_DRV_24_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_25_REG_OFFSET 0x90\n#define OCCAMY_SOC_PAD_25_SLW_25_BIT 0\n#define OCCAMY_SOC_PAD_25_SMT_25_BIT 1\n#define OCCAMY_SOC_PAD_25_DRV_25_MASK 0x3\n#define OCCAMY_SOC_PAD_25_DRV_25_OFFSET 2\n#define OCCAMY_SOC_PAD_25_DRV_25_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_25_DRV_25_MASK, \\\n                          .index = OCCAMY_SOC_PAD_25_DRV_25_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_26_REG_OFFSET 0x94\n#define OCCAMY_SOC_PAD_26_SLW_26_BIT 0\n#define OCCAMY_SOC_PAD_26_SMT_26_BIT 1\n#define OCCAMY_SOC_PAD_26_DRV_26_MASK 0x3\n#define OCCAMY_SOC_PAD_26_DRV_26_OFFSET 2\n#define OCCAMY_SOC_PAD_26_DRV_26_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_26_DRV_26_MASK, \\\n                          .index = OCCAMY_SOC_PAD_26_DRV_26_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_27_REG_OFFSET 0x98\n#define OCCAMY_SOC_PAD_27_SLW_27_BIT 0\n#define OCCAMY_SOC_PAD_27_SMT_27_BIT 1\n#define OCCAMY_SOC_PAD_27_DRV_27_MASK 0x3\n#define OCCAMY_SOC_PAD_27_DRV_27_OFFSET 2\n#define OCCAMY_SOC_PAD_27_DRV_27_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_27_DRV_27_MASK, \\\n                          .index = OCCAMY_SOC_PAD_27_DRV_27_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_28_REG_OFFSET 0x9c\n#define OCCAMY_SOC_PAD_28_SLW_28_BIT 0\n#define OCCAMY_SOC_PAD_28_SMT_28_BIT 1\n#define OCCAMY_SOC_PAD_28_DRV_28_MASK 0x3\n#define OCCAMY_SOC_PAD_28_DRV_28_OFFSET 2\n#define OCCAMY_SOC_PAD_28_DRV_28_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_28_DRV_28_MASK, \\\n                          .index = OCCAMY_SOC_PAD_28_DRV_28_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_29_REG_OFFSET 0xa0\n#define OCCAMY_SOC_PAD_29_SLW_29_BIT 0\n#define OCCAMY_SOC_PAD_29_SMT_29_BIT 1\n#define OCCAMY_SOC_PAD_29_DRV_29_MASK 0x3\n#define OCCAMY_SOC_PAD_29_DRV_29_OFFSET 2\n#define OCCAMY_SOC_PAD_29_DRV_29_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_29_DRV_29_MASK, \\\n                          .index = OCCAMY_SOC_PAD_29_DRV_29_OFFSET})\n\n// GPIO pad configuration.\n#define OCCAMY_SOC_PAD_30_REG_OFFSET 0xa4\n#define OCCAMY_SOC_PAD_30_SLW_30_BIT 0\n#define OCCAMY_SOC_PAD_30_SMT_30_BIT 1\n#define OCCAMY_SOC_PAD_30_DRV_30_MASK 0x3\n#define OCCAMY_SOC_PAD_30_DRV_30_OFFSET 2\n#define OCCAMY_SOC_PAD_30_DRV_30_FIELD                           \\\n    ((bitfield_field32_t){.mask = OCCAMY_SOC_PAD_30_DRV_30_MASK, \\\n                          .index = OCCAMY_SOC_PAD_30_DRV_30_OFFSET})\n\n#ifdef __cplusplus\n}  // extern \"C\"\n#endif\n#endif  // _OCCAMY_SOC_REG_DEFS_\n// End generated register defines for occamy_SoC\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/omp_8h/","title":"snRuntime/include/omp.h","text":""},{"location":"runtime/Files/omp_8h/#classes","title":"Classes","text":"Name struct omp_team_t struct omp_t struct omp_prof_t"},{"location":"runtime/Files/omp_8h/#functions","title":"Functions","text":"Name void omp_init(void ) unsigned snrt_omp_bootstrap(uint32_t core_idx) void partialParallelRegion(int32_t argc, void * data, void()(void , uint32_t) fn, int num_threads) void omp_print_prof(void ) omp_t * omp_getData() omp_team_t * omp_get_team(omp_t * _this) unsigned omp_get_thread_num(void ) void attribute((always_inline) ) eu_run_empty(snrt_cluster_core_idx() )"},{"location":"runtime/Files/omp_8h/#attributes","title":"Attributes","text":"Name omp_prof_t * omp_prof __thread omp_t volatile * omp_p void void * data void void void(* fn void void void(*) in num_threads"},{"location":"runtime/Files/omp_8h/#defines","title":"Defines","text":"Name OPENMP_PROFILE OMP_PROF(X) OMP_PRINTF(d, ...) _OMP_T _OMP_TEAM_T"},{"location":"runtime/Files/omp_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/omp_8h/#function-omp_init","title":"function omp_init","text":"<pre><code>void omp_init(\nvoid )\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-snrt_omp_bootstrap","title":"function snrt_omp_bootstrap","text":"<pre><code>unsigned snrt_omp_bootstrap(\nuint32_t core_idx\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-partialparallelregion","title":"function partialParallelRegion","text":"<pre><code>void partialParallelRegion(\nint32_t argc,\nvoid * data,\nvoid(*)(void *, uint32_t) fn,\nint num_threads\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_print_prof","title":"function omp_print_prof","text":"<pre><code>void omp_print_prof(\nvoid )\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_getdata","title":"function omp_getData","text":"<pre><code>static inline omp_t * omp_getData()\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_get_team","title":"function omp_get_team","text":"<pre><code>static inline omp_team_t * omp_get_team(\nomp_t * _this\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-omp_get_thread_num","title":"function omp_get_thread_num","text":"<pre><code>static inline unsigned omp_get_thread_num(\nvoid )\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-attribute","title":"function attribute","text":"<pre><code>static inline void __attribute__(\n(always_inline) )\n</code></pre>"},{"location":"runtime/Files/omp_8h/#function-eu_run_empty","title":"function eu_run_empty","text":"<pre><code>eu_run_empty(\nsnrt_cluster_core_idx() )\n</code></pre>"},{"location":"runtime/Files/omp_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/omp_8h/#variable-omp_prof","title":"variable omp_prof","text":"<pre><code>omp_prof_t * omp_prof;\n</code></pre>"},{"location":"runtime/Files/omp_8h/#variable-omp_p","title":"variable omp_p","text":"<pre><code>__thread omp_t volatile * omp_p;\n</code></pre>"},{"location":"runtime/Files/omp_8h/#variable-data","title":"variable data","text":"<pre><code>void void * data;\n</code></pre>"},{"location":"runtime/Files/omp_8h/#variable-fn","title":"variable fn","text":"<pre><code>void void void(* fn;\n</code></pre>"},{"location":"runtime/Files/omp_8h/#variable-num_threads","title":"variable num_threads","text":"<pre><code>void void void(*) in num_threads {\n\n(void)eu_dispatch_push(fn, argc, data, num_threads);\n</code></pre>"},{"location":"runtime/Files/omp_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/omp_8h/#define-openmp_profile","title":"define OPENMP_PROFILE","text":"<pre><code>#define OPENMP_PROFILE \n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-omp_prof","title":"define OMP_PROF","text":"<pre><code>#define OMP_PROF(\nX\n)\ndo {            \\\n        { X; }      \\\n    } while (0)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-omp_printf","title":"define OMP_PRINTF","text":"<pre><code>#define OMP_PRINTF(\nd,\n...\n)\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-_omp_t","title":"define _OMP_T","text":"<pre><code>#define _OMP_T omp_t\n</code></pre>"},{"location":"runtime/Files/omp_8h/#define-_omp_team_t","title":"define _OMP_TEAM_T","text":"<pre><code>#define _OMP_TEAM_T omp_team_t\n</code></pre>"},{"location":"runtime/Files/omp_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2021 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include &lt;stdint.h&gt;\n\n#include \"eu.h\"\n#include \"kmp.h\"\n#include \"snrt.h\"\n\n//================================================================================\n// debug\n//================================================================================\n#define OPENMP_PROFILE\n\n#ifdef OPENMP_PROFILE\n#define OMP_PROF(X) \\\n    do {            \\\n        { X; }      \\\n    } while (0)\n#else\n#define OMP_PROF(X) \\\n    do {            \\\n    } while (0)\n#endif\n\n#ifdef OMP_DEBUG_LEVEL\n#include \"encoding.h\"\n#include \"printf.h\"\n#define _OMP_PRINTF(...)             \\\n    if (1) {                         \\\n        printf(\"[omp] \"__VA_ARGS__); \\\n    }\n#define OMP_PRINTF(d, ...)        \\\n    if (OMP_DEBUG_LEVEL &gt;= d) {   \\\n        _OMP_PRINTF(__VA_ARGS__); \\\n    }\n#else\n#define OMP_PRINTF(d, ...)\n#endif\n\n//================================================================================\n// Macros\n//================================================================================\n#ifdef OMPSTATIC_NUMTHREADS\n#define _OMP_T const omp_t\n#define _OMP_TEAM_T const omp_team_t\n#else\n#define _OMP_T omp_t\n#define _OMP_TEAM_T omp_team_t\n#endif\n\n//================================================================================\n// types\n//================================================================================\n\ntypedef struct {\nchar nbThreads;\n#ifndef OMPSTATIC_NUMTHREADS\nint loop_epoch;\nint loop_start;\nint loop_end;\nint loop_incr;\nint loop_chunk;\nint loop_is_setup;\nint core_epoch[16];  // for dynamic scheduling\n#endif\n} omp_team_t;\n\ntypedef struct {\n#ifndef OMPSTATIC_NUMTHREADS\nomp_team_t plainTeam;\nint numThreads;\nint maxThreads;\n#else\nconst omp_team_t plainTeam;\nconst int numThreads;\nconst int maxThreads;\n#endif\nstruct snrt_barrier *kmpc_barrier;\n_kmp_ptr32 *kmpc_args;\n} omp_t;\n\n#ifdef OPENMP_PROFILE\ntypedef struct {\nuint32_t fork_oh;\n} omp_prof_t;\nextern omp_prof_t *omp_prof;\n#endif\n\n#ifndef OMPSTATIC_NUMTHREADS\nextern __thread omp_t volatile *omp_p;\n#else\nextern omp_t omp_p;\n#endif\n\n//================================================================================\n// exported\n//================================================================================\n\nvoid omp_init(void);\nunsigned snrt_omp_bootstrap(uint32_t core_idx);\nvoid partialParallelRegion(int32_t argc, void *data,\nvoid (*fn)(void *, uint32_t), int num_threads);\n\n#ifdef OPENMP_PROFILE\nvoid omp_print_prof(void);\nextern omp_prof_t *omp_prof;\n#endif\n\n//================================================================================\n// inlines\n//================================================================================\n\n#ifndef OMPSTATIC_NUMTHREADS\nstatic inline omp_t *omp_getData() { return omp_p; }\nstatic inline omp_team_t *omp_get_team(omp_t *_this) {\nreturn &amp;_this-&gt;plainTeam;\n}\n#else\nstatic inline const omp_t *omp_getData() { return &amp;omp_p; }\nstatic inline const omp_team_t *omp_get_team(const omp_t *_this) {\nreturn &amp;_this-&gt;plainTeam;\n}\n#endif\n\nstatic inline unsigned omp_get_thread_num(void) {\nreturn snrt_cluster_core_idx();\n}\n\nstatic inline void __attribute__((always_inline))\nparallelRegionExec(int32_t argc, void *data, void (*fn)(void *, uint32_t),\nint num_threads) {\n// Now that the team is ready, wake up slaves\n(void)eu_dispatch_push(fn, argc, data, num_threads);\n\neu_run_empty(snrt_cluster_core_idx());\n}\n\nstatic inline void __attribute__((always_inline))\nparallelRegion(int32_t argc, void *data, void (*fn)(void *, uint32_t),\nint num_threads) {\npartialParallelRegion(argc, data, fn, num_threads);\n}\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/perf__cnt_8h/","title":"snRuntime/include/perf_cnt.h","text":""},{"location":"runtime/Files/perf__cnt_8h/#classes","title":"Classes","text":"Name union perf_reg32_t struct perf_reg_t"},{"location":"runtime/Files/perf__cnt_8h/#types","title":"Types","text":"Name enum snrt_perf_cnt { SNRT_PERF_CNT0, SNRT_PERF_CNT1, SNRT_PERF_CNT2, SNRT_PERF_CNT3, SNRT_PERF_CNT4, SNRT_PERF_CNT5, SNRT_PERF_CNT6, SNRT_PERF_CNT7, SNRT_PERF_CNT8, SNRT_PERF_CNT9, SNRT_PERF_CNT10, SNRT_PERF_CNT11, SNRT_PERF_CNT12, SNRT_PERF_CNT13, SNRT_PERF_CNT14, SNRT_PERF_CNT15, SNRT_PERF_N_CNT}Different perf counters. enum snrt_perf_cnt_type { SNRT_PERF_CNT_CYCLES, SNRT_PERF_CNT_TCDM_ACCESSED, SNRT_PERF_CNT_TCDM_CONGESTED, SNRT_PERF_CNT_ISSUE_FPU, SNRT_PERF_CNT_ISSUE_FPU_SEQ, SNRT_PERF_CNT_ISSUE_CORE_TO_FPU, SNRT_PERF_CNT_RETIRED_INSTR, SNRT_PERF_CNT_RETIRED_LOAD, SNRT_PERF_CNT_RETIRED_I, SNRT_PERF_CNT_RETIRED_ACC, SNRT_PERF_CNT_DMA_AW_STALL, SNRT_PERF_CNT_DMA_AR_STALL, SNRT_PERF_CNT_DMA_R_STALL, SNRT_PERF_CNT_DMA_W_STALL, SNRT_PERF_CNT_DMA_BUF_W_STALL, SNRT_PERF_CNT_DMA_BUF_R_STALL, SNRT_PERF_CNT_DMA_AW_DONE, SNRT_PERF_CNT_DMA_AW_BW, SNRT_PERF_CNT_DMA_AR_DONE, SNRT_PERF_CNT_DMA_AR_BW, SNRT_PERF_CNT_DMA_R_DONE, SNRT_PERF_CNT_DMA_R_BW, SNRT_PERF_CNT_DMA_W_DONE, SNRT_PERF_CNT_DMA_W_BW, SNRT_PERF_CNT_DMA_B_DONE, SNRT_PERF_CNT_DMA_BUSY, SNRT_PERF_CNT_ICACHE_MISS, SNRT_PERF_CNT_ICACHE_HIT, SNRT_PERF_CNT_ICACHE_PREFETCH, SNRT_PERF_CNT_ICACHE_DOUBLE_HIT, SNRT_PERF_CNT_ICACHE_STALL}Different types of performance counters."},{"location":"runtime/Files/perf__cnt_8h/#functions","title":"Functions","text":"Name void snrt_start_perf_counter(enum snrt_perf_cnt perf_cnt, enum snrt_perf_cnt_type perf_cnt_type, uint32_t hart_id) void snrt_stop_perf_counter(enum snrt_perf_cnt perf_cnt) void snrt_reset_perf_counter(enum snrt_perf_cnt) uint32_t snrt_get_perf_counter(enum snrt_perf_cnt perf_cnt)"},{"location":"runtime/Files/perf__cnt_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/perf__cnt_8h/#enum-snrt_perf_cnt","title":"enum snrt_perf_cnt","text":"Enumerator Value Description SNRT_PERF_CNT0 SNRT_PERF_CNT1 SNRT_PERF_CNT2 SNRT_PERF_CNT3 SNRT_PERF_CNT4 SNRT_PERF_CNT5 SNRT_PERF_CNT6 SNRT_PERF_CNT7 SNRT_PERF_CNT8 SNRT_PERF_CNT9 SNRT_PERF_CNT10 SNRT_PERF_CNT11 SNRT_PERF_CNT12 SNRT_PERF_CNT13 SNRT_PERF_CNT14 SNRT_PERF_CNT15 SNRT_PERF_N_CNT <p>Different perf counters. </p>"},{"location":"runtime/Files/perf__cnt_8h/#enum-snrt_perf_cnt_type","title":"enum snrt_perf_cnt_type","text":"Enumerator Value Description SNRT_PERF_CNT_CYCLES SNRT_PERF_CNT_TCDM_ACCESSED SNRT_PERF_CNT_TCDM_CONGESTED SNRT_PERF_CNT_ISSUE_FPU SNRT_PERF_CNT_ISSUE_FPU_SEQ SNRT_PERF_CNT_ISSUE_CORE_TO_FPU SNRT_PERF_CNT_RETIRED_INSTR SNRT_PERF_CNT_RETIRED_LOAD SNRT_PERF_CNT_RETIRED_I SNRT_PERF_CNT_RETIRED_ACC SNRT_PERF_CNT_DMA_AW_STALL SNRT_PERF_CNT_DMA_AR_STALL SNRT_PERF_CNT_DMA_R_STALL SNRT_PERF_CNT_DMA_W_STALL SNRT_PERF_CNT_DMA_BUF_W_STALL SNRT_PERF_CNT_DMA_BUF_R_STALL SNRT_PERF_CNT_DMA_AW_DONE SNRT_PERF_CNT_DMA_AW_BW SNRT_PERF_CNT_DMA_AR_DONE SNRT_PERF_CNT_DMA_AR_BW SNRT_PERF_CNT_DMA_R_DONE SNRT_PERF_CNT_DMA_R_BW SNRT_PERF_CNT_DMA_W_DONE SNRT_PERF_CNT_DMA_W_BW SNRT_PERF_CNT_DMA_B_DONE SNRT_PERF_CNT_DMA_BUSY SNRT_PERF_CNT_ICACHE_MISS SNRT_PERF_CNT_ICACHE_HIT SNRT_PERF_CNT_ICACHE_PREFETCH SNRT_PERF_CNT_ICACHE_DOUBLE_HIT SNRT_PERF_CNT_ICACHE_STALL <p>Different types of performance counters. </p>"},{"location":"runtime/Files/perf__cnt_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_start_perf_counter","title":"function snrt_start_perf_counter","text":"<pre><code>void snrt_start_perf_counter(\nenum snrt_perf_cnt perf_cnt,\nenum snrt_perf_cnt_type perf_cnt_type,\nuint32_t hart_id\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_stop_perf_counter","title":"function snrt_stop_perf_counter","text":"<pre><code>void snrt_stop_perf_counter(\nenum snrt_perf_cnt perf_cnt\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_reset_perf_counter","title":"function snrt_reset_perf_counter","text":"<pre><code>void snrt_reset_perf_counter(\nenum snrt_perf_cnt\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#function-snrt_get_perf_counter","title":"function snrt_get_perf_counter","text":"<pre><code>uint32_t snrt_get_perf_counter(\nenum snrt_perf_cnt perf_cnt\n)\n</code></pre>"},{"location":"runtime/Files/perf__cnt_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#pragma once\n\n#include \"snrt.h\"\n\n// Must match with `snitch_cluster_peripheral`\nenum snrt_perf_cnt {\nSNRT_PERF_CNT0,\nSNRT_PERF_CNT1,\nSNRT_PERF_CNT2,\nSNRT_PERF_CNT3,\nSNRT_PERF_CNT4,\nSNRT_PERF_CNT5,\nSNRT_PERF_CNT6,\nSNRT_PERF_CNT7,\nSNRT_PERF_CNT8,\nSNRT_PERF_CNT9,\nSNRT_PERF_CNT10,\nSNRT_PERF_CNT11,\nSNRT_PERF_CNT12,\nSNRT_PERF_CNT13,\nSNRT_PERF_CNT14,\nSNRT_PERF_CNT15,\nSNRT_PERF_N_CNT,\n};\n\nenum snrt_perf_cnt_type {\nSNRT_PERF_CNT_CYCLES,\nSNRT_PERF_CNT_TCDM_ACCESSED,\nSNRT_PERF_CNT_TCDM_CONGESTED,\nSNRT_PERF_CNT_ISSUE_FPU,\nSNRT_PERF_CNT_ISSUE_FPU_SEQ,\nSNRT_PERF_CNT_ISSUE_CORE_TO_FPU,\nSNRT_PERF_CNT_RETIRED_INSTR,\nSNRT_PERF_CNT_RETIRED_LOAD,\nSNRT_PERF_CNT_RETIRED_I,\nSNRT_PERF_CNT_RETIRED_ACC,\nSNRT_PERF_CNT_DMA_AW_STALL,\nSNRT_PERF_CNT_DMA_AR_STALL,\nSNRT_PERF_CNT_DMA_R_STALL,\nSNRT_PERF_CNT_DMA_W_STALL,\nSNRT_PERF_CNT_DMA_BUF_W_STALL,\nSNRT_PERF_CNT_DMA_BUF_R_STALL,\nSNRT_PERF_CNT_DMA_AW_DONE,\nSNRT_PERF_CNT_DMA_AW_BW,\nSNRT_PERF_CNT_DMA_AR_DONE,\nSNRT_PERF_CNT_DMA_AR_BW,\nSNRT_PERF_CNT_DMA_R_DONE,\nSNRT_PERF_CNT_DMA_R_BW,\nSNRT_PERF_CNT_DMA_W_DONE,\nSNRT_PERF_CNT_DMA_W_BW,\nSNRT_PERF_CNT_DMA_B_DONE,\nSNRT_PERF_CNT_DMA_BUSY,\nSNRT_PERF_CNT_ICACHE_MISS,\nSNRT_PERF_CNT_ICACHE_HIT,\nSNRT_PERF_CNT_ICACHE_PREFETCH,\nSNRT_PERF_CNT_ICACHE_DOUBLE_HIT,\nSNRT_PERF_CNT_ICACHE_STALL,\n};\n\ntypedef union {\nuint32_t value __attribute__((aligned(8)));\n} perf_reg32_t;\n\ntypedef struct {\nvolatile perf_reg32_t enable[SNRT_PERF_N_CNT];\nvolatile perf_reg32_t hart_select[SNRT_PERF_N_CNT];\nvolatile perf_reg32_t perf_counter[SNRT_PERF_N_CNT];\n} perf_reg_t;\n\nvoid snrt_start_perf_counter(enum snrt_perf_cnt perf_cnt,\nenum snrt_perf_cnt_type perf_cnt_type,\nuint32_t hart_id);\nvoid snrt_stop_perf_counter(enum snrt_perf_cnt perf_cnt);\nvoid snrt_reset_perf_counter(enum snrt_perf_cnt);\nuint32_t snrt_get_perf_counter(enum snrt_perf_cnt perf_cnt);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/printf_8h/","title":"snRuntime/vendor/printf.h","text":""},{"location":"runtime/Files/printf_8h/#functions","title":"Functions","text":"Name void _putchar(char character) int printf_(const char * format, ... ) int sprintf_(char * buffer, const char * format, ... ) int snprintf_(char * buffer, size_t count, const char * format, ... ) int vsnprintf_(char * buffer, size_t count, const char * format, va_list va) int vprintf_(const char * format, va_list va) int fctprintf(void()(char character, void arg) out, void * arg, const char * format, ... )"},{"location":"runtime/Files/printf_8h/#defines","title":"Defines","text":"Name printf sprintf snprintf vsnprintf vprintf"},{"location":"runtime/Files/printf_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/printf_8h/#function-_putchar","title":"function _putchar","text":"<pre><code>void _putchar(\nchar character\n)\n</code></pre> <p>Parameters: </p> <ul> <li>character Character to output </li> </ul> <p>Output a character to a custom device like UART, used by the printf() function This function is declared here only. You have to write your custom implementation somewhere </p>"},{"location":"runtime/Files/printf_8h/#function-printf_","title":"function printf_","text":"<pre><code>int printf_(\nconst char * format,\n... )\n</code></pre>"},{"location":"runtime/Files/printf_8h/#function-sprintf_","title":"function sprintf_","text":"<pre><code>int sprintf_(\nchar * buffer,\nconst char * format,\n... )\n</code></pre>"},{"location":"runtime/Files/printf_8h/#function-snprintf_","title":"function snprintf_","text":"<pre><code>int snprintf_(\nchar * buffer,\nsize_t count,\nconst char * format,\n... )\n</code></pre>"},{"location":"runtime/Files/printf_8h/#function-vsnprintf_","title":"function vsnprintf_","text":"<pre><code>int vsnprintf_(\nchar * buffer,\nsize_t count,\nconst char * format,\nva_list va\n)\n</code></pre>"},{"location":"runtime/Files/printf_8h/#function-vprintf_","title":"function vprintf_","text":"<pre><code>int vprintf_(\nconst char * format,\nva_list va\n)\n</code></pre>"},{"location":"runtime/Files/printf_8h/#function-fctprintf","title":"function fctprintf","text":"<pre><code>int fctprintf(\nvoid(*)(char character, void *arg) out,\nvoid * arg,\nconst char * format,\n... )\n</code></pre> <p>Parameters: </p> <ul> <li>out An output function which takes one character and an argument pointer </li> <li>arg An argument pointer for user data passed to output function </li> <li>format A string that specifies the format of the output </li> </ul> <p>Return: The number of characters that are sent to the output function, not counting the terminating null character </p> <p>printf with output function You may use this as dynamic alternative to printf() with its fixed _putchar() output </p>"},{"location":"runtime/Files/printf_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/printf_8h/#define-printf","title":"define printf","text":"<pre><code>#define printf printf_\n</code></pre> <p>Parameters: </p> <ul> <li>format A string that specifies the format of the output </li> </ul> <p>Return: The number of characters that are written into the array, not counting the terminating null character </p> <p>Tiny printf implementation You have to implement putchar if you use printf() To avoid conflicts with the regular printf() API it is overridden by macro defines and internal underscore-appended functions like printf() are used </p>"},{"location":"runtime/Files/printf_8h/#define-sprintf","title":"define sprintf","text":"<pre><code>#define sprintf sprintf_\n</code></pre> <p>Parameters: </p> <ul> <li>buffer A pointer to the buffer where to store the formatted string. MUST be big enough to store the output! </li> <li>format A string that specifies the format of the output </li> </ul> <p>Return: The number of characters that are WRITTEN into the buffer, not counting the terminating null character </p> <p>Tiny sprintf implementation Due to security reasons (buffer overflow) YOU SHOULD CONSIDER USING (V)SNPRINTF INSTEAD! </p>"},{"location":"runtime/Files/printf_8h/#define-snprintf","title":"define snprintf","text":"<pre><code>#define snprintf snprintf_\n</code></pre> <p>Parameters: </p> <ul> <li>buffer A pointer to the buffer where to store the formatted string </li> <li>count The maximum number of characters to store in the buffer, including a terminating null character </li> <li>format A string that specifies the format of the output </li> <li>va A value identifying a variable arguments list </li> </ul> <p>Return: The number of characters that COULD have been written into the buffer, not counting the terminating null character. A value equal or larger than count indicates truncation. Only when the returned value is non-negative and less than count, the string has been completely written. </p> <p>Tiny snprintf/vsnprintf implementation </p>"},{"location":"runtime/Files/printf_8h/#define-vsnprintf","title":"define vsnprintf","text":"<pre><code>#define vsnprintf vsnprintf_\n</code></pre>"},{"location":"runtime/Files/printf_8h/#define-vprintf","title":"define vprintf","text":"<pre><code>#define vprintf vprintf_\n</code></pre> <p>Parameters: </p> <ul> <li>format A string that specifies the format of the output </li> <li>va A value identifying a variable arguments list </li> </ul> <p>Return: The number of characters that are WRITTEN into the buffer, not counting the terminating null character </p> <p>Tiny vprintf implementation </p>"},{"location":"runtime/Files/printf_8h/#source-code","title":"Source code","text":"<pre><code>// \\author (c) Marco Paland (info@paland.com)\n//             2014-2019, PALANDesign Hannover, Germany\n//\n// \\license The MIT License (MIT)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n// \\brief Tiny printf, sprintf and snprintf implementation, optimized for speed on\n//        embedded systems with a very limited resources.\n//        Use this instead of bloated standard/newlib printf.\n//        These routines are thread safe and reentrant.\n//\n\n#ifndef _PRINTF_H_\n#define _PRINTF_H_\n\n#include &lt;stdarg.h&gt;\n#include &lt;stddef.h&gt;\n\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\nvoid _putchar(char character);\n\n\n#define printf printf_\nint printf_(const char* format, ...);\n\n\n#define sprintf sprintf_\nint sprintf_(char* buffer, const char* format, ...);\n\n\n#define snprintf  snprintf_\n#define vsnprintf vsnprintf_\nint  snprintf_(char* buffer, size_t count, const char* format, ...);\nint vsnprintf_(char* buffer, size_t count, const char* format, va_list va);\n\n\n#define vprintf vprintf_\nint vprintf_(const char* format, va_list va);\n\n\nint fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...);\n\n\n#ifdef __cplusplus\n}\n#endif\n\n\n#endif  // _PRINTF_H_\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/snBLAS_2README_8md/","title":"README.md","text":""},{"location":"runtime/Files/snBLAS_2README_8md/#source-code","title":"Source code","text":"<pre><code># Snitch BLAS Library\n\nThis is an implementation of the Basic Linear Algebra Subprograms for the Snitch system.\n\n## Usage\n\nThe runtime library can be compiled as follows:\n\n    mkdir build\n    cd build\n    cmake ..\n    make\n\nThe tests can be executed as follows:\n\n    make test\n\nInteresting CMake options that can be set via `-D&lt;option&gt;=&lt;value&gt;`:\n\n- `SNITCH_BANSHEE`: The banshee simulator binary to use for test execution.\n- `CMAKE_TOOLCHAIN_FILE`: The compiler toolchain configuration to use. Acceptable values:\n    - `toolchain-gcc` for a GNU tolchain\n    - `toolchain-llvm` for a LLVM/Clang toolchain (coming soon)\n    - Your own custom `&lt;toolchain&gt;.cmake` file; see `../cmake/toolchain-gcc.cmake` for reference\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/snRuntime_2README_8md/","title":"README.md","text":""},{"location":"runtime/Files/snRuntime_2README_8md/#source-code","title":"Source code","text":"<pre><code># Snitch Runtime Library\n\nThis library implements a minimal runtime for Snitch systems, which is responsible for the following:\n\n- Detecting the hardware configuration (cores, clusters, ISA extensions, TCDM)\n- Passing a descriptor struct to the executable\n- Synchronization across cores and clusters\n- Team-based multithreading and work splitting\n\n## General Runtime\n\nThe general runtime (`libsnRuntime`) relies on a bootloader or operating system to load the executable. This usually requires virtual memory to map the segments to the correct addresses. The general runtime does not provide any startup code in this scenario, but is more like a regular library providing some useful API.\n\n## Bare Runtime\n\nThe bare runtimes (`libsnRuntime-&lt;platform&gt;`) assumes that the executable it is being linked into will run in a bare-metal fashion with no convenient bootloader or virtual memory setup. For this scenario, the runtime provides the `_start` symbol and implements a basic crt0.\n\n## Usage\n\nThe runtime library can be compiled as follows:\n\n    mkdir build\n    cd build\n    cmake ..\n    make\n\nThe tests can be executed as follows:\n\n    make test\n\nInteresting CMake options that can be set via `-D&lt;option&gt;=&lt;value&gt;`:\n\n- `SNITCH_BANSHEE`: The banshee simulator binary to use for test execution.\n- `CMAKE_TOOLCHAIN_FILE`: The compiler toolchain configuration to use. Acceptable values:\n    - `toolchain-gcc` for a GNU tolchain\n    - `toolchain-llvm` for a LLVM/Clang toolchain (coming soon)\n    - Your own custom `&lt;toolchain&gt;.cmake` file; see `../cmake/toolchain-gcc.cmake` for reference\n- `MEM_DRAM_ORIGIN`/`MEM_DRAM_SIZE`: Base address and size of the external memory used for shared data and program memory\n\n## Adding a new entry to the device-tree\n\nOn the example of adding a CLINT device:\n\n1. Add member `clint_base` to the `snrt_cluster_bootdata` struct in `start_cluster.c`\n2. Add the same member to the `BootData` struct in `tb_lib.hh`\n3. Add an enrty of the device in the cluster configuration `cluster.default.hjson`\n4. Add the same member to the `bootdata.cc.tpl` template and get the value from the member added in 3.\n5. Generate the bootdata.cc file by running cluster-gen `make cluster_gen`\n6. The value is now available at boot in `bootdata-&gt;clint_base`\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/snblas_8h/","title":"snBLAS/include/snblas.h","text":""},{"location":"runtime/Files/snblas_8h/#functions","title":"Functions","text":"Name double snblas_hello()"},{"location":"runtime/Files/snblas_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/snblas_8h/#function-snblas_hello","title":"function snblas_hello","text":"<pre><code>double snblas_hello()\n</code></pre>"},{"location":"runtime/Files/snblas_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n\ndouble snblas_hello();\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/","title":"snRuntime/include/snitch_cluster_peripheral.h","text":""},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#defines","title":"Defines","text":"Name SNITCH_CLUSTER_PERIPHERAL_PARAM_NUM_PERF_COUNTERS SNITCH_CLUSTER_PERIPHERAL_PARAM_REG_WIDTH SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_CYCLE_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_ACCESSED_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_CONGESTED_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_SEQ_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_CORE_TO_FPU_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_INSTR_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_LOAD_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_I_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_ACC_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_W_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_R_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_DONE_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_BW_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_DONE_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_BW_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_DONE_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_BW_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_DONE_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_BW_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_B_DONE_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUSY_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_MISS_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_HIT_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_PREFETCH_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_DOUBLE_HIT_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_STALL_0_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_CYCLE_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_ACCESSED_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_CONGESTED_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_SEQ_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_CORE_TO_FPU_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_INSTR_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_LOAD_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_I_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_ACC_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_W_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_R_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_DONE_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_BW_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_DONE_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_BW_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_DONE_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_BW_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_DONE_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_BW_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_B_DONE_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUSY_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_MISS_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_HIT_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_PREFETCH_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_DOUBLE_HIT_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_STALL_1_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_CYCLE_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_ACCESSED_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_CONGESTED_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_SEQ_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_CORE_TO_FPU_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_INSTR_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_LOAD_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_I_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_ACC_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_W_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_R_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_DONE_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_BW_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_DONE_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_BW_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_DONE_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_BW_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_DONE_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_BW_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_B_DONE_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUSY_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_MISS_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_HIT_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_PREFETCH_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_DOUBLE_HIT_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_STALL_2_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_CYCLE_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_ACCESSED_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_CONGESTED_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_SEQ_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_CORE_TO_FPU_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_INSTR_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_LOAD_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_I_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_ACC_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_W_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_R_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_DONE_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_BW_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_DONE_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_BW_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_DONE_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_BW_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_DONE_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_BW_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_B_DONE_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUSY_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_MISS_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_HIT_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_PREFETCH_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_DOUBLE_HIT_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_STALL_3_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_CYCLE_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_ACCESSED_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_CONGESTED_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_SEQ_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_CORE_TO_FPU_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_INSTR_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_LOAD_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_I_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_ACC_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_W_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_R_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_DONE_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_BW_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_DONE_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_BW_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_DONE_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_BW_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_DONE_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_BW_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_B_DONE_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUSY_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_MISS_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_HIT_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_PREFETCH_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_DOUBLE_HIT_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_STALL_4_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_CYCLE_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_ACCESSED_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_CONGESTED_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_SEQ_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_CORE_TO_FPU_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_INSTR_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_LOAD_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_I_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_ACC_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_W_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_R_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_DONE_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_BW_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_DONE_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_BW_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_DONE_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_BW_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_DONE_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_BW_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_B_DONE_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUSY_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_MISS_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_HIT_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_PREFETCH_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_DOUBLE_HIT_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_STALL_5_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_CYCLE_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_ACCESSED_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_CONGESTED_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_SEQ_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_CORE_TO_FPU_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_INSTR_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_LOAD_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_I_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_ACC_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_W_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_R_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_DONE_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_BW_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_DONE_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_BW_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_DONE_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_BW_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_DONE_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_BW_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_B_DONE_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUSY_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_MISS_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_HIT_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_PREFETCH_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_DOUBLE_HIT_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_STALL_6_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_CYCLE_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_ACCESSED_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_CONGESTED_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_SEQ_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_CORE_TO_FPU_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_INSTR_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_LOAD_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_I_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_ACC_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_W_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_R_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_DONE_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_BW_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_DONE_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_BW_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_DONE_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_BW_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_DONE_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_BW_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_B_DONE_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUSY_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_MISS_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_HIT_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_PREFETCH_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_DOUBLE_HIT_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_STALL_7_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_CYCLE_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_ACCESSED_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_CONGESTED_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_SEQ_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_CORE_TO_FPU_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_INSTR_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_LOAD_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_I_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_ACC_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_W_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_R_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_DONE_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_BW_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_DONE_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_BW_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_DONE_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_BW_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_DONE_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_BW_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_B_DONE_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUSY_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_MISS_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_HIT_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_PREFETCH_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_DOUBLE_HIT_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_STALL_8_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_CYCLE_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_ACCESSED_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_CONGESTED_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_SEQ_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_CORE_TO_FPU_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_INSTR_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_LOAD_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_I_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_ACC_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_W_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_R_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_DONE_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_BW_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_DONE_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_BW_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_DONE_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_BW_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_DONE_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_BW_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_B_DONE_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUSY_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_MISS_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_HIT_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_PREFETCH_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_DOUBLE_HIT_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_STALL_9_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_CYCLE_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_ACCESSED_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_CONGESTED_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_SEQ_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_CORE_TO_FPU_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_INSTR_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_LOAD_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_I_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_ACC_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_W_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_R_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_DONE_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_BW_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_DONE_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_BW_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_DONE_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_BW_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_DONE_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_BW_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_B_DONE_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUSY_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_MISS_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_HIT_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_PREFETCH_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_DOUBLE_HIT_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_STALL_10_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_CYCLE_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_ACCESSED_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_CONGESTED_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_SEQ_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_CORE_TO_FPU_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_INSTR_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_LOAD_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_I_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_ACC_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_W_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_R_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_DONE_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_BW_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_DONE_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_BW_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_DONE_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_BW_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_DONE_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_BW_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_B_DONE_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUSY_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_MISS_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_HIT_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_PREFETCH_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_DOUBLE_HIT_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_STALL_11_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_CYCLE_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_ACCESSED_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_CONGESTED_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_SEQ_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_CORE_TO_FPU_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_INSTR_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_LOAD_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_I_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_ACC_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_W_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_R_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_DONE_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_BW_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_DONE_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_BW_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_DONE_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_BW_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_DONE_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_BW_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_B_DONE_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUSY_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_MISS_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_HIT_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_PREFETCH_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_DOUBLE_HIT_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_STALL_12_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_CYCLE_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_ACCESSED_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_CONGESTED_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_SEQ_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_CORE_TO_FPU_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_INSTR_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_LOAD_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_I_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_ACC_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_W_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_R_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_DONE_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_BW_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_DONE_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_BW_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_DONE_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_BW_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_DONE_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_BW_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_B_DONE_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUSY_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_MISS_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_HIT_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_PREFETCH_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_DOUBLE_HIT_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_STALL_13_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_CYCLE_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_ACCESSED_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_CONGESTED_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_SEQ_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_CORE_TO_FPU_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_INSTR_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_LOAD_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_I_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_ACC_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_W_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_R_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_DONE_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_BW_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_DONE_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_BW_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_DONE_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_BW_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_DONE_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_BW_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_B_DONE_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUSY_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_MISS_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_HIT_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_PREFETCH_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_DOUBLE_HIT_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_STALL_14_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_CYCLE_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_ACCESSED_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_CONGESTED_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_SEQ_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_CORE_TO_FPU_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_INSTR_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_LOAD_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_I_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_ACC_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_W_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_R_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_DONE_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_BW_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_DONE_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_BW_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_DONE_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_BW_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_DONE_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_BW_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_B_DONE_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUSY_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_MISS_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_HIT_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_PREFETCH_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_DOUBLE_HIT_15_BIT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_STALL_15_BIT SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELD_WIDTH SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELDS_PER_REG SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_MULTIREG_COUNT SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_FIELD SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_MASK SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_OFFSET SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELD_WIDTH SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELDS_PER_REG SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_MULTIREG_COUNT SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_FIELD SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_MASK SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_OFFSET SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_FIELD SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_MASK SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_OFFSET SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_FIELD SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_MASK SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_OFFSET SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_FIELD SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_MASK SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_OFFSET SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_FIELD SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_REG_OFFSET SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_ICACHE_PREFETCH_ENABLE_BIT"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_param_num_perf_counters","title":"define SNITCH_CLUSTER_PERIPHERAL_PARAM_NUM_PERF_COUNTERS","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PARAM_NUM_PERF_COUNTERS 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_param_reg_width","title":"define SNITCH_CLUSTER_PERIPHERAL_PARAM_REG_WIDTH","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PARAM_REG_WIDTH 64\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_REG_OFFSET 0x0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_cycle_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_CYCLE_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_CYCLE_0_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_tcdm_accessed_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_ACCESSED_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_ACCESSED_0_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_tcdm_congested_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_CONGESTED_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_CONGESTED_0_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_issue_fpu_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_0_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_issue_fpu_seq_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_SEQ_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_SEQ_0_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_issue_core_to_fpu_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_CORE_TO_FPU_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_CORE_TO_FPU_0_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_retired_instr_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_INSTR_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_INSTR_0_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_retired_load_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_LOAD_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_LOAD_0_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_retired_i_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_I_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_I_0_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_retired_acc_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_ACC_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_ACC_0_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_aw_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_STALL_0_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_ar_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_STALL_0_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_r_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_STALL_0_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_w_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_STALL_0_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_buf_w_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_W_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_W_STALL_0_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_buf_r_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_R_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_R_STALL_0_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_aw_done_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_DONE_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_DONE_0_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_aw_bw_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_BW_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_BW_0_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_ar_done_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_DONE_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_DONE_0_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_ar_bw_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_BW_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_BW_0_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_r_done_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_DONE_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_DONE_0_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_r_bw_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_BW_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_BW_0_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_w_done_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_DONE_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_DONE_0_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_w_bw_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_BW_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_BW_0_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_b_done_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_B_DONE_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_B_DONE_0_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_dma_busy_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUSY_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUSY_0_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_icache_miss_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_MISS_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_MISS_0_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_icache_hit_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_HIT_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_HIT_0_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_icache_prefetch_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_PREFETCH_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_PREFETCH_0_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_icache_double_hit_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_DOUBLE_HIT_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_DOUBLE_HIT_0_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_0_icache_stall_0_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_STALL_0_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_STALL_0_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_REG_OFFSET 0x8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_cycle_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_CYCLE_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_CYCLE_1_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_tcdm_accessed_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_ACCESSED_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_ACCESSED_1_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_tcdm_congested_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_CONGESTED_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_CONGESTED_1_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_issue_fpu_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_1_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_issue_fpu_seq_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_SEQ_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_SEQ_1_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_issue_core_to_fpu_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_CORE_TO_FPU_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_CORE_TO_FPU_1_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_retired_instr_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_INSTR_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_INSTR_1_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_retired_load_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_LOAD_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_LOAD_1_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_retired_i_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_I_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_I_1_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_retired_acc_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_ACC_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_ACC_1_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_aw_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_STALL_1_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_ar_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_STALL_1_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_r_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_STALL_1_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_w_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_STALL_1_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_buf_w_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_W_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_W_STALL_1_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_buf_r_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_R_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_R_STALL_1_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_aw_done_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_DONE_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_DONE_1_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_aw_bw_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_BW_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_BW_1_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_ar_done_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_DONE_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_DONE_1_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_ar_bw_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_BW_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_BW_1_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_r_done_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_DONE_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_DONE_1_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_r_bw_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_BW_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_BW_1_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_w_done_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_DONE_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_DONE_1_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_w_bw_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_BW_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_BW_1_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_b_done_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_B_DONE_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_B_DONE_1_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_dma_busy_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUSY_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUSY_1_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_icache_miss_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_MISS_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_MISS_1_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_icache_hit_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_HIT_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_HIT_1_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_icache_prefetch_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_PREFETCH_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_PREFETCH_1_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_icache_double_hit_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_DOUBLE_HIT_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_DOUBLE_HIT_1_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_1_icache_stall_1_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_STALL_1_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_STALL_1_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_REG_OFFSET 0x10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_cycle_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_CYCLE_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_CYCLE_2_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_tcdm_accessed_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_ACCESSED_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_ACCESSED_2_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_tcdm_congested_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_CONGESTED_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_CONGESTED_2_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_issue_fpu_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_2_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_issue_fpu_seq_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_SEQ_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_SEQ_2_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_issue_core_to_fpu_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_CORE_TO_FPU_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_CORE_TO_FPU_2_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_retired_instr_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_INSTR_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_INSTR_2_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_retired_load_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_LOAD_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_LOAD_2_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_retired_i_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_I_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_I_2_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_retired_acc_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_ACC_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_ACC_2_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_aw_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_STALL_2_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_ar_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_STALL_2_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_r_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_STALL_2_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_w_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_STALL_2_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_buf_w_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_W_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_W_STALL_2_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_buf_r_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_R_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_R_STALL_2_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_aw_done_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_DONE_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_DONE_2_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_aw_bw_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_BW_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_BW_2_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_ar_done_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_DONE_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_DONE_2_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_ar_bw_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_BW_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_BW_2_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_r_done_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_DONE_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_DONE_2_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_r_bw_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_BW_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_BW_2_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_w_done_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_DONE_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_DONE_2_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_w_bw_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_BW_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_BW_2_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_b_done_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_B_DONE_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_B_DONE_2_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_dma_busy_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUSY_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUSY_2_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_icache_miss_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_MISS_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_MISS_2_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_icache_hit_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_HIT_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_HIT_2_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_icache_prefetch_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_PREFETCH_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_PREFETCH_2_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_icache_double_hit_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_DOUBLE_HIT_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_DOUBLE_HIT_2_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_2_icache_stall_2_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_STALL_2_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_STALL_2_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_REG_OFFSET 0x18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_cycle_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_CYCLE_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_CYCLE_3_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_tcdm_accessed_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_ACCESSED_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_ACCESSED_3_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_tcdm_congested_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_CONGESTED_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_CONGESTED_3_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_issue_fpu_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_3_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_issue_fpu_seq_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_SEQ_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_SEQ_3_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_issue_core_to_fpu_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_CORE_TO_FPU_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_CORE_TO_FPU_3_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_retired_instr_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_INSTR_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_INSTR_3_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_retired_load_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_LOAD_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_LOAD_3_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_retired_i_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_I_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_I_3_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_retired_acc_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_ACC_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_ACC_3_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_aw_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_STALL_3_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_ar_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_STALL_3_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_r_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_STALL_3_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_w_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_STALL_3_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_buf_w_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_W_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_W_STALL_3_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_buf_r_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_R_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_R_STALL_3_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_aw_done_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_DONE_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_DONE_3_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_aw_bw_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_BW_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_BW_3_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_ar_done_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_DONE_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_DONE_3_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_ar_bw_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_BW_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_BW_3_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_r_done_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_DONE_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_DONE_3_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_r_bw_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_BW_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_BW_3_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_w_done_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_DONE_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_DONE_3_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_w_bw_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_BW_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_BW_3_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_b_done_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_B_DONE_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_B_DONE_3_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_dma_busy_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUSY_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUSY_3_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_icache_miss_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_MISS_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_MISS_3_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_icache_hit_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_HIT_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_HIT_3_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_icache_prefetch_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_PREFETCH_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_PREFETCH_3_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_icache_double_hit_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_DOUBLE_HIT_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_DOUBLE_HIT_3_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_3_icache_stall_3_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_STALL_3_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_STALL_3_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_REG_OFFSET 0x20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_cycle_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_CYCLE_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_CYCLE_4_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_tcdm_accessed_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_ACCESSED_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_ACCESSED_4_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_tcdm_congested_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_CONGESTED_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_CONGESTED_4_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_issue_fpu_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_4_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_issue_fpu_seq_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_SEQ_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_SEQ_4_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_issue_core_to_fpu_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_CORE_TO_FPU_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_CORE_TO_FPU_4_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_retired_instr_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_INSTR_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_INSTR_4_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_retired_load_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_LOAD_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_LOAD_4_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_retired_i_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_I_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_I_4_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_retired_acc_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_ACC_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_ACC_4_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_aw_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_STALL_4_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_ar_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_STALL_4_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_r_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_STALL_4_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_w_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_STALL_4_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_buf_w_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_W_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_W_STALL_4_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_buf_r_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_R_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_R_STALL_4_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_aw_done_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_DONE_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_DONE_4_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_aw_bw_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_BW_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_BW_4_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_ar_done_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_DONE_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_DONE_4_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_ar_bw_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_BW_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_BW_4_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_r_done_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_DONE_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_DONE_4_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_r_bw_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_BW_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_BW_4_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_w_done_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_DONE_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_DONE_4_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_w_bw_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_BW_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_BW_4_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_b_done_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_B_DONE_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_B_DONE_4_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_dma_busy_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUSY_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUSY_4_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_icache_miss_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_MISS_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_MISS_4_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_icache_hit_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_HIT_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_HIT_4_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_icache_prefetch_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_PREFETCH_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_PREFETCH_4_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_icache_double_hit_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_DOUBLE_HIT_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_DOUBLE_HIT_4_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_4_icache_stall_4_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_STALL_4_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_STALL_4_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_REG_OFFSET 0x28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_cycle_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_CYCLE_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_CYCLE_5_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_tcdm_accessed_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_ACCESSED_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_ACCESSED_5_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_tcdm_congested_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_CONGESTED_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_CONGESTED_5_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_issue_fpu_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_5_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_issue_fpu_seq_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_SEQ_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_SEQ_5_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_issue_core_to_fpu_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_CORE_TO_FPU_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_CORE_TO_FPU_5_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_retired_instr_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_INSTR_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_INSTR_5_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_retired_load_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_LOAD_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_LOAD_5_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_retired_i_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_I_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_I_5_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_retired_acc_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_ACC_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_ACC_5_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_aw_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_STALL_5_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_ar_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_STALL_5_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_r_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_STALL_5_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_w_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_STALL_5_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_buf_w_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_W_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_W_STALL_5_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_buf_r_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_R_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_R_STALL_5_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_aw_done_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_DONE_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_DONE_5_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_aw_bw_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_BW_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_BW_5_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_ar_done_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_DONE_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_DONE_5_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_ar_bw_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_BW_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_BW_5_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_r_done_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_DONE_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_DONE_5_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_r_bw_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_BW_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_BW_5_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_w_done_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_DONE_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_DONE_5_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_w_bw_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_BW_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_BW_5_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_b_done_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_B_DONE_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_B_DONE_5_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_dma_busy_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUSY_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUSY_5_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_icache_miss_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_MISS_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_MISS_5_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_icache_hit_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_HIT_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_HIT_5_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_icache_prefetch_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_PREFETCH_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_PREFETCH_5_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_icache_double_hit_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_DOUBLE_HIT_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_DOUBLE_HIT_5_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_5_icache_stall_5_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_STALL_5_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_STALL_5_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_REG_OFFSET 0x30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_cycle_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_CYCLE_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_CYCLE_6_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_tcdm_accessed_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_ACCESSED_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_ACCESSED_6_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_tcdm_congested_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_CONGESTED_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_CONGESTED_6_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_issue_fpu_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_6_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_issue_fpu_seq_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_SEQ_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_SEQ_6_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_issue_core_to_fpu_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_CORE_TO_FPU_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_CORE_TO_FPU_6_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_retired_instr_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_INSTR_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_INSTR_6_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_retired_load_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_LOAD_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_LOAD_6_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_retired_i_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_I_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_I_6_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_retired_acc_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_ACC_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_ACC_6_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_aw_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_STALL_6_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_ar_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_STALL_6_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_r_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_STALL_6_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_w_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_STALL_6_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_buf_w_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_W_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_W_STALL_6_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_buf_r_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_R_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_R_STALL_6_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_aw_done_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_DONE_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_DONE_6_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_aw_bw_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_BW_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_BW_6_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_ar_done_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_DONE_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_DONE_6_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_ar_bw_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_BW_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_BW_6_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_r_done_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_DONE_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_DONE_6_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_r_bw_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_BW_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_BW_6_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_w_done_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_DONE_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_DONE_6_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_w_bw_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_BW_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_BW_6_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_b_done_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_B_DONE_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_B_DONE_6_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_dma_busy_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUSY_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUSY_6_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_icache_miss_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_MISS_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_MISS_6_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_icache_hit_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_HIT_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_HIT_6_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_icache_prefetch_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_PREFETCH_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_PREFETCH_6_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_icache_double_hit_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_DOUBLE_HIT_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_DOUBLE_HIT_6_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_6_icache_stall_6_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_STALL_6_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_STALL_6_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_REG_OFFSET 0x38\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_cycle_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_CYCLE_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_CYCLE_7_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_tcdm_accessed_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_ACCESSED_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_ACCESSED_7_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_tcdm_congested_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_CONGESTED_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_CONGESTED_7_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_issue_fpu_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_7_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_issue_fpu_seq_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_SEQ_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_SEQ_7_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_issue_core_to_fpu_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_CORE_TO_FPU_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_CORE_TO_FPU_7_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_retired_instr_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_INSTR_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_INSTR_7_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_retired_load_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_LOAD_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_LOAD_7_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_retired_i_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_I_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_I_7_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_retired_acc_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_ACC_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_ACC_7_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_aw_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_STALL_7_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_ar_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_STALL_7_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_r_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_STALL_7_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_w_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_STALL_7_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_buf_w_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_W_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_W_STALL_7_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_buf_r_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_R_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_R_STALL_7_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_aw_done_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_DONE_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_DONE_7_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_aw_bw_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_BW_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_BW_7_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_ar_done_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_DONE_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_DONE_7_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_ar_bw_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_BW_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_BW_7_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_r_done_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_DONE_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_DONE_7_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_r_bw_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_BW_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_BW_7_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_w_done_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_DONE_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_DONE_7_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_w_bw_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_BW_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_BW_7_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_b_done_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_B_DONE_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_B_DONE_7_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_dma_busy_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUSY_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUSY_7_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_icache_miss_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_MISS_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_MISS_7_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_icache_hit_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_HIT_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_HIT_7_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_icache_prefetch_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_PREFETCH_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_PREFETCH_7_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_icache_double_hit_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_DOUBLE_HIT_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_DOUBLE_HIT_7_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_7_icache_stall_7_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_STALL_7_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_STALL_7_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_REG_OFFSET 0x40\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_cycle_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_CYCLE_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_CYCLE_8_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_tcdm_accessed_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_ACCESSED_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_ACCESSED_8_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_tcdm_congested_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_CONGESTED_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_CONGESTED_8_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_issue_fpu_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_8_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_issue_fpu_seq_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_SEQ_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_SEQ_8_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_issue_core_to_fpu_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_CORE_TO_FPU_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_CORE_TO_FPU_8_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_retired_instr_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_INSTR_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_INSTR_8_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_retired_load_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_LOAD_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_LOAD_8_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_retired_i_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_I_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_I_8_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_retired_acc_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_ACC_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_ACC_8_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_aw_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_STALL_8_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_ar_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_STALL_8_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_r_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_STALL_8_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_w_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_STALL_8_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_buf_w_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_W_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_W_STALL_8_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_buf_r_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_R_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_R_STALL_8_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_aw_done_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_DONE_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_DONE_8_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_aw_bw_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_BW_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_BW_8_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_ar_done_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_DONE_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_DONE_8_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_ar_bw_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_BW_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_BW_8_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_r_done_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_DONE_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_DONE_8_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_r_bw_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_BW_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_BW_8_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_w_done_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_DONE_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_DONE_8_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_w_bw_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_BW_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_BW_8_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_b_done_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_B_DONE_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_B_DONE_8_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_dma_busy_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUSY_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUSY_8_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_icache_miss_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_MISS_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_MISS_8_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_icache_hit_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_HIT_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_HIT_8_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_icache_prefetch_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_PREFETCH_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_PREFETCH_8_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_icache_double_hit_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_DOUBLE_HIT_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_DOUBLE_HIT_8_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_8_icache_stall_8_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_STALL_8_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_STALL_8_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_REG_OFFSET 0x48\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_cycle_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_CYCLE_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_CYCLE_9_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_tcdm_accessed_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_ACCESSED_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_ACCESSED_9_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_tcdm_congested_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_CONGESTED_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_CONGESTED_9_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_issue_fpu_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_9_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_issue_fpu_seq_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_SEQ_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_SEQ_9_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_issue_core_to_fpu_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_CORE_TO_FPU_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_CORE_TO_FPU_9_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_retired_instr_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_INSTR_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_INSTR_9_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_retired_load_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_LOAD_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_LOAD_9_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_retired_i_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_I_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_I_9_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_retired_acc_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_ACC_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_ACC_9_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_aw_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_STALL_9_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_ar_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_STALL_9_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_r_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_STALL_9_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_w_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_STALL_9_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_buf_w_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_W_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_W_STALL_9_BIT 14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_buf_r_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_R_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_R_STALL_9_BIT 15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_aw_done_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_DONE_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_DONE_9_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_aw_bw_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_BW_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_BW_9_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_ar_done_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_DONE_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_DONE_9_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_ar_bw_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_BW_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_BW_9_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_r_done_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_DONE_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_DONE_9_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_r_bw_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_BW_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_BW_9_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_w_done_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_DONE_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_DONE_9_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_w_bw_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_BW_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_BW_9_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_b_done_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_B_DONE_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_B_DONE_9_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_dma_busy_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUSY_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUSY_9_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_icache_miss_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_MISS_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_MISS_9_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_icache_hit_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_HIT_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_HIT_9_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_icache_prefetch_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_PREFETCH_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_PREFETCH_9_BIT 28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_icache_double_hit_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_DOUBLE_HIT_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_DOUBLE_HIT_9_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_9_icache_stall_9_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_STALL_9_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_STALL_9_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_REG_OFFSET 0x50\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_cycle_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_CYCLE_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_CYCLE_10_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_tcdm_accessed_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_ACCESSED_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_ACCESSED_10_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_tcdm_congested_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_CONGESTED_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_CONGESTED_10_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_issue_fpu_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_10_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_issue_fpu_seq_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_SEQ_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_SEQ_10_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_issue_core_to_fpu_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_CORE_TO_FPU_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_CORE_TO_FPU_10_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_retired_instr_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_INSTR_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_INSTR_10_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_retired_load_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_LOAD_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_LOAD_10_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_retired_i_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_I_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_I_10_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_retired_acc_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_ACC_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_ACC_10_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_aw_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_STALL_10_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_ar_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_STALL_10_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_r_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_STALL_10_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_w_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_STALL_10_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_buf_w_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_W_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_W_STALL_10_BIT     14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_buf_r_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_R_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_R_STALL_10_BIT     15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_aw_done_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_DONE_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_DONE_10_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_aw_bw_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_BW_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_BW_10_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_ar_done_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_DONE_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_DONE_10_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_ar_bw_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_BW_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_BW_10_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_r_done_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_DONE_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_DONE_10_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_r_bw_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_BW_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_BW_10_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_w_done_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_DONE_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_DONE_10_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_w_bw_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_BW_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_BW_10_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_b_done_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_B_DONE_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_B_DONE_10_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_dma_busy_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUSY_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUSY_10_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_icache_miss_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_MISS_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_MISS_10_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_icache_hit_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_HIT_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_HIT_10_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_icache_prefetch_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_PREFETCH_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_PREFETCH_10_BIT     28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_icache_double_hit_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_DOUBLE_HIT_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_DOUBLE_HIT_10_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_10_icache_stall_10_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_STALL_10_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_STALL_10_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_REG_OFFSET 0x58\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_cycle_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_CYCLE_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_CYCLE_11_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_tcdm_accessed_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_ACCESSED_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_ACCESSED_11_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_tcdm_congested_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_CONGESTED_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_CONGESTED_11_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_issue_fpu_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_11_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_issue_fpu_seq_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_SEQ_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_SEQ_11_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_issue_core_to_fpu_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_CORE_TO_FPU_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_CORE_TO_FPU_11_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_retired_instr_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_INSTR_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_INSTR_11_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_retired_load_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_LOAD_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_LOAD_11_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_retired_i_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_I_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_I_11_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_retired_acc_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_ACC_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_ACC_11_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_aw_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_STALL_11_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_ar_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_STALL_11_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_r_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_STALL_11_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_w_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_STALL_11_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_buf_w_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_W_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_W_STALL_11_BIT     14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_buf_r_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_R_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_R_STALL_11_BIT     15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_aw_done_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_DONE_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_DONE_11_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_aw_bw_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_BW_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_BW_11_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_ar_done_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_DONE_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_DONE_11_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_ar_bw_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_BW_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_BW_11_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_r_done_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_DONE_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_DONE_11_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_r_bw_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_BW_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_BW_11_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_w_done_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_DONE_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_DONE_11_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_w_bw_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_BW_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_BW_11_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_b_done_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_B_DONE_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_B_DONE_11_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_dma_busy_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUSY_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUSY_11_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_icache_miss_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_MISS_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_MISS_11_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_icache_hit_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_HIT_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_HIT_11_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_icache_prefetch_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_PREFETCH_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_PREFETCH_11_BIT     28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_icache_double_hit_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_DOUBLE_HIT_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_DOUBLE_HIT_11_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_11_icache_stall_11_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_STALL_11_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_STALL_11_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_REG_OFFSET 0x60\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_cycle_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_CYCLE_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_CYCLE_12_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_tcdm_accessed_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_ACCESSED_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_ACCESSED_12_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_tcdm_congested_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_CONGESTED_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_CONGESTED_12_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_issue_fpu_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_12_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_issue_fpu_seq_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_SEQ_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_SEQ_12_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_issue_core_to_fpu_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_CORE_TO_FPU_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_CORE_TO_FPU_12_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_retired_instr_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_INSTR_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_INSTR_12_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_retired_load_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_LOAD_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_LOAD_12_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_retired_i_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_I_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_I_12_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_retired_acc_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_ACC_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_ACC_12_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_aw_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_STALL_12_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_ar_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_STALL_12_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_r_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_STALL_12_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_w_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_STALL_12_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_buf_w_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_W_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_W_STALL_12_BIT     14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_buf_r_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_R_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_R_STALL_12_BIT     15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_aw_done_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_DONE_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_DONE_12_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_aw_bw_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_BW_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_BW_12_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_ar_done_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_DONE_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_DONE_12_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_ar_bw_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_BW_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_BW_12_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_r_done_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_DONE_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_DONE_12_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_r_bw_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_BW_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_BW_12_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_w_done_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_DONE_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_DONE_12_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_w_bw_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_BW_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_BW_12_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_b_done_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_B_DONE_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_B_DONE_12_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_dma_busy_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUSY_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUSY_12_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_icache_miss_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_MISS_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_MISS_12_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_icache_hit_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_HIT_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_HIT_12_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_icache_prefetch_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_PREFETCH_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_PREFETCH_12_BIT     28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_icache_double_hit_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_DOUBLE_HIT_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_DOUBLE_HIT_12_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_12_icache_stall_12_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_STALL_12_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_STALL_12_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_REG_OFFSET 0x68\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_cycle_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_CYCLE_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_CYCLE_13_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_tcdm_accessed_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_ACCESSED_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_ACCESSED_13_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_tcdm_congested_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_CONGESTED_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_CONGESTED_13_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_issue_fpu_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_13_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_issue_fpu_seq_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_SEQ_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_SEQ_13_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_issue_core_to_fpu_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_CORE_TO_FPU_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_CORE_TO_FPU_13_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_retired_instr_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_INSTR_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_INSTR_13_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_retired_load_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_LOAD_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_LOAD_13_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_retired_i_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_I_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_I_13_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_retired_acc_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_ACC_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_ACC_13_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_aw_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_STALL_13_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_ar_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_STALL_13_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_r_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_STALL_13_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_w_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_STALL_13_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_buf_w_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_W_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_W_STALL_13_BIT     14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_buf_r_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_R_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_R_STALL_13_BIT     15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_aw_done_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_DONE_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_DONE_13_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_aw_bw_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_BW_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_BW_13_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_ar_done_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_DONE_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_DONE_13_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_ar_bw_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_BW_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_BW_13_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_r_done_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_DONE_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_DONE_13_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_r_bw_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_BW_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_BW_13_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_w_done_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_DONE_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_DONE_13_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_w_bw_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_BW_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_BW_13_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_b_done_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_B_DONE_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_B_DONE_13_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_dma_busy_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUSY_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUSY_13_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_icache_miss_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_MISS_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_MISS_13_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_icache_hit_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_HIT_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_HIT_13_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_icache_prefetch_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_PREFETCH_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_PREFETCH_13_BIT     28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_icache_double_hit_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_DOUBLE_HIT_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_DOUBLE_HIT_13_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_13_icache_stall_13_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_STALL_13_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_STALL_13_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_REG_OFFSET 0x70\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_cycle_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_CYCLE_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_CYCLE_14_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_tcdm_accessed_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_ACCESSED_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_ACCESSED_14_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_tcdm_congested_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_CONGESTED_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_CONGESTED_14_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_issue_fpu_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_14_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_issue_fpu_seq_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_SEQ_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_SEQ_14_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_issue_core_to_fpu_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_CORE_TO_FPU_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_CORE_TO_FPU_14_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_retired_instr_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_INSTR_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_INSTR_14_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_retired_load_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_LOAD_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_LOAD_14_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_retired_i_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_I_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_I_14_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_retired_acc_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_ACC_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_ACC_14_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_aw_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_STALL_14_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_ar_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_STALL_14_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_r_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_STALL_14_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_w_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_STALL_14_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_buf_w_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_W_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_W_STALL_14_BIT     14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_buf_r_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_R_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_R_STALL_14_BIT     15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_aw_done_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_DONE_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_DONE_14_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_aw_bw_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_BW_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_BW_14_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_ar_done_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_DONE_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_DONE_14_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_ar_bw_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_BW_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_BW_14_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_r_done_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_DONE_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_DONE_14_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_r_bw_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_BW_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_BW_14_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_w_done_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_DONE_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_DONE_14_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_w_bw_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_BW_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_BW_14_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_b_done_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_B_DONE_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_B_DONE_14_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_dma_busy_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUSY_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUSY_14_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_icache_miss_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_MISS_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_MISS_14_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_icache_hit_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_HIT_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_HIT_14_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_icache_prefetch_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_PREFETCH_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_PREFETCH_14_BIT     28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_icache_double_hit_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_DOUBLE_HIT_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_DOUBLE_HIT_14_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_14_icache_stall_14_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_STALL_14_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_STALL_14_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_REG_OFFSET 0x78\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_cycle_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_CYCLE_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_CYCLE_15_BIT 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_tcdm_accessed_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_ACCESSED_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_ACCESSED_15_BIT 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_tcdm_congested_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_CONGESTED_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_CONGESTED_15_BIT 2\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_issue_fpu_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_15_BIT 3\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_issue_fpu_seq_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_SEQ_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_SEQ_15_BIT 4\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_issue_core_to_fpu_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_CORE_TO_FPU_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_CORE_TO_FPU_15_BIT     5\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_retired_instr_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_INSTR_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_INSTR_15_BIT 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_retired_load_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_LOAD_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_LOAD_15_BIT 7\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_retired_i_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_I_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_I_15_BIT 8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_retired_acc_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_ACC_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_ACC_15_BIT 9\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_aw_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_STALL_15_BIT 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_ar_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_STALL_15_BIT 11\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_r_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_STALL_15_BIT 12\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_w_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_STALL_15_BIT 13\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_buf_w_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_W_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_W_STALL_15_BIT     14\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_buf_r_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_R_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_R_STALL_15_BIT     15\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_aw_done_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_DONE_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_DONE_15_BIT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_aw_bw_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_BW_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_BW_15_BIT 17\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_ar_done_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_DONE_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_DONE_15_BIT 18\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_ar_bw_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_BW_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_BW_15_BIT 19\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_r_done_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_DONE_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_DONE_15_BIT 20\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_r_bw_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_BW_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_BW_15_BIT 21\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_w_done_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_DONE_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_DONE_15_BIT 22\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_w_bw_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_BW_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_BW_15_BIT 23\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_b_done_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_B_DONE_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_B_DONE_15_BIT 24\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_dma_busy_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUSY_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUSY_15_BIT 25\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_icache_miss_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_MISS_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_MISS_15_BIT 26\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_icache_hit_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_HIT_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_HIT_15_BIT 27\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_icache_prefetch_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_PREFETCH_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_PREFETCH_15_BIT     28\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_icache_double_hit_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_DOUBLE_HIT_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_DOUBLE_HIT_15_BIT     29\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_enable_15_icache_stall_15_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_STALL_15_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_STALL_15_BIT 30\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_hart_select_field_width","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELD_WIDTH","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELD_WIDTH 10\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_hart_select_fields_per_reg","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELDS_PER_REG","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELDS_PER_REG 6\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_multireg_count","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_MULTIREG_COUNT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_MULTIREG_COUNT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_0_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_REG_OFFSET 0x80\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_0_hart_select_0_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_0_hart_select_0_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_0_hart_select_0_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_1_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_REG_OFFSET 0x88\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_1_hart_select_1_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_1_hart_select_1_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_1_hart_select_1_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_2_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_REG_OFFSET 0x90\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_2_hart_select_2_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_2_hart_select_2_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_2_hart_select_2_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_3_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_REG_OFFSET 0x98\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_3_hart_select_3_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_3_hart_select_3_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_3_hart_select_3_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_4_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_REG_OFFSET 0xa0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_4_hart_select_4_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_4_hart_select_4_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_4_hart_select_4_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_5_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_REG_OFFSET 0xa8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_5_hart_select_5_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_5_hart_select_5_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_5_hart_select_5_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_6_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_REG_OFFSET 0xb0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_6_hart_select_6_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_6_hart_select_6_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_6_hart_select_6_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_7_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_REG_OFFSET 0xb8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_7_hart_select_7_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_7_hart_select_7_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_7_hart_select_7_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_8_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_REG_OFFSET 0xc0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_8_hart_select_8_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_8_hart_select_8_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_8_hart_select_8_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_9_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_REG_OFFSET 0xc8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_9_hart_select_9_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_9_hart_select_9_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_9_hart_select_9_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_10_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_REG_OFFSET 0xd0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_10_hart_select_10_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_10_hart_select_10_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_10_hart_select_10_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_11_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_REG_OFFSET 0xd8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_11_hart_select_11_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_11_hart_select_11_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_11_hart_select_11_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_12_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_REG_OFFSET 0xe0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_12_hart_select_12_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_12_hart_select_12_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_12_hart_select_12_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_13_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_REG_OFFSET 0xe8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_13_hart_select_13_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_13_hart_select_13_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_13_hart_select_13_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_14_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_REG_OFFSET 0xf0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_14_hart_select_14_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_14_hart_select_14_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_14_hart_select_14_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_15_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_REG_OFFSET 0xf8\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_15_hart_select_15_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_MASK 0x3ff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_15_hart_select_15_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hart_select_15_hart_select_15_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_perf_counter_field_width","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELD_WIDTH","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELD_WIDTH 48\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_perf_counter_fields_per_reg","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELDS_PER_REG","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELDS_PER_REG 1\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_multireg_count","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_MULTIREG_COUNT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_MULTIREG_COUNT 16\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_0_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_REG_OFFSET 0x100\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_0_perf_counter_0_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_0_perf_counter_0_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_0_perf_counter_0_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_1_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_REG_OFFSET 0x108\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_1_perf_counter_1_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_1_perf_counter_1_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_1_perf_counter_1_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_2_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_REG_OFFSET 0x110\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_2_perf_counter_2_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_2_perf_counter_2_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_2_perf_counter_2_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_3_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_REG_OFFSET 0x118\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_3_perf_counter_3_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_3_perf_counter_3_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_3_perf_counter_3_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_4_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_REG_OFFSET 0x120\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_4_perf_counter_4_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_4_perf_counter_4_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_4_perf_counter_4_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_5_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_REG_OFFSET 0x128\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_5_perf_counter_5_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_5_perf_counter_5_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_5_perf_counter_5_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_6_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_REG_OFFSET 0x130\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_6_perf_counter_6_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_6_perf_counter_6_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_6_perf_counter_6_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_7_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_REG_OFFSET 0x138\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_7_perf_counter_7_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_7_perf_counter_7_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_7_perf_counter_7_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_8_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_REG_OFFSET 0x140\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_8_perf_counter_8_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_8_perf_counter_8_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_8_perf_counter_8_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_9_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_REG_OFFSET 0x148\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_9_perf_counter_9_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_9_perf_counter_9_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_9_perf_counter_9_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_10_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_REG_OFFSET 0x150\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_10_perf_counter_10_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_10_perf_counter_10_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_10_perf_counter_10_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_11_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_REG_OFFSET 0x158\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_11_perf_counter_11_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_11_perf_counter_11_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_11_perf_counter_11_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_12_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_REG_OFFSET 0x160\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_12_perf_counter_12_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_12_perf_counter_12_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_12_perf_counter_12_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_13_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_REG_OFFSET 0x168\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_13_perf_counter_13_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_13_perf_counter_13_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_13_perf_counter_13_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_14_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_REG_OFFSET 0x170\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_14_perf_counter_14_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_14_perf_counter_14_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_14_perf_counter_14_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_15_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_REG_OFFSET 0x178\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_15_perf_counter_15_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_MASK     0xffffffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_15_perf_counter_15_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_perf_counter_15_perf_counter_15_field","title":"define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_FIELD     ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_set_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_REG_OFFSET 0x180\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_set_cl_clint_set_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_MASK 0xffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_set_cl_clint_set_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_set_cl_clint_set_field","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_FIELD     ((bitfield_field32_t){                                                \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_MASK, \\\n        .index = SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_clear_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_REG_OFFSET 0x188\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_clear_cl_clint_clear_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_MASK 0xffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_clear_cl_clint_clear_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_cl_clint_clear_cl_clint_clear_field","title":"define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_FIELD     ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hw_barrier_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_REG_OFFSET 0x190\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hw_barrier_hw_barrier_mask","title":"define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_MASK","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_MASK 0xffffffff\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hw_barrier_hw_barrier_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_OFFSET 0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_hw_barrier_hw_barrier_field","title":"define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_FIELD","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_FIELD     ((bitfield_field32_t){                                            \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_MASK, \\\n        .index = SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_OFFSET})\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_icache_prefetch_enable_reg_offset","title":"define SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_REG_OFFSET","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_REG_OFFSET 0x198\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#define-snitch_cluster_peripheral_icache_prefetch_enable_icache_prefetch_enable_bit","title":"define SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_ICACHE_PREFETCH_ENABLE_BIT","text":"<pre><code>#define SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_ICACHE_PREFETCH_ENABLE_BIT     0\n</code></pre>"},{"location":"runtime/Files/snitch__cluster__peripheral_8h/#source-code","title":"Source code","text":"<pre><code>// Generated register defines for snitch_cluster_peripheral\n\n// Copyright information found in source file:\n// Copyright 2020 ETH Zurich and University of Bologna.\n\n// Licensing information found in source file:\n// Licensed under Solderpad Hardware License, Version 0.51, see LICENSE for\n// details. SPDX-License-Identifier: SHL-0.51\n\n#ifndef _SNITCH_CLUSTER_PERIPHERAL_REG_DEFS_\n#define _SNITCH_CLUSTER_PERIPHERAL_REG_DEFS_\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n// Number of performance counters\n#define SNITCH_CLUSTER_PERIPHERAL_PARAM_NUM_PERF_COUNTERS 16\n\n// Register width\n#define SNITCH_CLUSTER_PERIPHERAL_PARAM_REG_WIDTH 64\n\n// Enable particular performance counter and start tracking. (common\n// parameters)\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_REG_OFFSET 0x0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_CYCLE_0_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_ACCESSED_0_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_TCDM_CONGESTED_0_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_0_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_FPU_SEQ_0_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ISSUE_CORE_TO_FPU_0_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_INSTR_0_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_LOAD_0_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_I_0_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_RETIRED_ACC_0_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_STALL_0_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_STALL_0_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_STALL_0_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_STALL_0_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_W_STALL_0_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUF_R_STALL_0_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_DONE_0_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AW_BW_0_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_DONE_0_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_AR_BW_0_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_DONE_0_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_R_BW_0_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_DONE_0_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_W_BW_0_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_B_DONE_0_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_DMA_BUSY_0_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_MISS_0_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_HIT_0_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_PREFETCH_0_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_DOUBLE_HIT_0_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_0_ICACHE_STALL_0_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_REG_OFFSET 0x8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_CYCLE_1_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_ACCESSED_1_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_TCDM_CONGESTED_1_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_1_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_FPU_SEQ_1_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ISSUE_CORE_TO_FPU_1_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_INSTR_1_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_LOAD_1_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_I_1_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_RETIRED_ACC_1_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_STALL_1_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_STALL_1_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_STALL_1_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_STALL_1_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_W_STALL_1_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUF_R_STALL_1_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_DONE_1_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AW_BW_1_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_DONE_1_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_AR_BW_1_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_DONE_1_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_R_BW_1_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_DONE_1_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_W_BW_1_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_B_DONE_1_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_DMA_BUSY_1_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_MISS_1_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_HIT_1_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_PREFETCH_1_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_DOUBLE_HIT_1_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_1_ICACHE_STALL_1_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_REG_OFFSET 0x10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_CYCLE_2_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_ACCESSED_2_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_TCDM_CONGESTED_2_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_2_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_FPU_SEQ_2_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ISSUE_CORE_TO_FPU_2_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_INSTR_2_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_LOAD_2_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_I_2_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_RETIRED_ACC_2_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_STALL_2_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_STALL_2_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_STALL_2_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_STALL_2_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_W_STALL_2_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUF_R_STALL_2_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_DONE_2_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AW_BW_2_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_DONE_2_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_AR_BW_2_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_DONE_2_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_R_BW_2_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_DONE_2_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_W_BW_2_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_B_DONE_2_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_DMA_BUSY_2_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_MISS_2_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_HIT_2_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_PREFETCH_2_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_DOUBLE_HIT_2_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_2_ICACHE_STALL_2_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_REG_OFFSET 0x18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_CYCLE_3_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_ACCESSED_3_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_TCDM_CONGESTED_3_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_3_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_FPU_SEQ_3_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ISSUE_CORE_TO_FPU_3_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_INSTR_3_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_LOAD_3_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_I_3_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_RETIRED_ACC_3_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_STALL_3_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_STALL_3_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_STALL_3_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_STALL_3_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_W_STALL_3_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUF_R_STALL_3_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_DONE_3_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AW_BW_3_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_DONE_3_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_AR_BW_3_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_DONE_3_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_R_BW_3_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_DONE_3_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_W_BW_3_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_B_DONE_3_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_DMA_BUSY_3_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_MISS_3_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_HIT_3_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_PREFETCH_3_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_DOUBLE_HIT_3_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_3_ICACHE_STALL_3_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_REG_OFFSET 0x20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_CYCLE_4_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_ACCESSED_4_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_TCDM_CONGESTED_4_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_4_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_FPU_SEQ_4_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ISSUE_CORE_TO_FPU_4_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_INSTR_4_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_LOAD_4_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_I_4_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_RETIRED_ACC_4_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_STALL_4_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_STALL_4_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_STALL_4_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_STALL_4_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_W_STALL_4_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUF_R_STALL_4_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_DONE_4_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AW_BW_4_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_DONE_4_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_AR_BW_4_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_DONE_4_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_R_BW_4_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_DONE_4_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_W_BW_4_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_B_DONE_4_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_DMA_BUSY_4_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_MISS_4_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_HIT_4_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_PREFETCH_4_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_DOUBLE_HIT_4_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_4_ICACHE_STALL_4_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_REG_OFFSET 0x28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_CYCLE_5_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_ACCESSED_5_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_TCDM_CONGESTED_5_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_5_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_FPU_SEQ_5_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ISSUE_CORE_TO_FPU_5_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_INSTR_5_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_LOAD_5_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_I_5_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_RETIRED_ACC_5_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_STALL_5_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_STALL_5_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_STALL_5_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_STALL_5_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_W_STALL_5_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUF_R_STALL_5_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_DONE_5_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AW_BW_5_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_DONE_5_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_AR_BW_5_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_DONE_5_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_R_BW_5_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_DONE_5_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_W_BW_5_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_B_DONE_5_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_DMA_BUSY_5_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_MISS_5_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_HIT_5_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_PREFETCH_5_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_DOUBLE_HIT_5_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_5_ICACHE_STALL_5_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_REG_OFFSET 0x30\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_CYCLE_6_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_ACCESSED_6_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_TCDM_CONGESTED_6_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_6_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_FPU_SEQ_6_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ISSUE_CORE_TO_FPU_6_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_INSTR_6_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_LOAD_6_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_I_6_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_RETIRED_ACC_6_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_STALL_6_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_STALL_6_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_STALL_6_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_STALL_6_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_W_STALL_6_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUF_R_STALL_6_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_DONE_6_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AW_BW_6_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_DONE_6_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_AR_BW_6_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_DONE_6_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_R_BW_6_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_DONE_6_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_W_BW_6_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_B_DONE_6_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_DMA_BUSY_6_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_MISS_6_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_HIT_6_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_PREFETCH_6_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_DOUBLE_HIT_6_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_6_ICACHE_STALL_6_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_REG_OFFSET 0x38\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_CYCLE_7_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_ACCESSED_7_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_TCDM_CONGESTED_7_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_7_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_FPU_SEQ_7_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ISSUE_CORE_TO_FPU_7_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_INSTR_7_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_LOAD_7_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_I_7_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_RETIRED_ACC_7_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_STALL_7_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_STALL_7_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_STALL_7_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_STALL_7_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_W_STALL_7_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUF_R_STALL_7_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_DONE_7_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AW_BW_7_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_DONE_7_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_AR_BW_7_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_DONE_7_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_R_BW_7_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_DONE_7_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_W_BW_7_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_B_DONE_7_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_DMA_BUSY_7_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_MISS_7_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_HIT_7_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_PREFETCH_7_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_DOUBLE_HIT_7_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_7_ICACHE_STALL_7_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_REG_OFFSET 0x40\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_CYCLE_8_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_ACCESSED_8_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_TCDM_CONGESTED_8_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_8_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_FPU_SEQ_8_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ISSUE_CORE_TO_FPU_8_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_INSTR_8_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_LOAD_8_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_I_8_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_RETIRED_ACC_8_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_STALL_8_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_STALL_8_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_STALL_8_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_STALL_8_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_W_STALL_8_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUF_R_STALL_8_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_DONE_8_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AW_BW_8_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_DONE_8_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_AR_BW_8_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_DONE_8_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_R_BW_8_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_DONE_8_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_W_BW_8_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_B_DONE_8_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_DMA_BUSY_8_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_MISS_8_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_HIT_8_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_PREFETCH_8_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_DOUBLE_HIT_8_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_8_ICACHE_STALL_8_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_REG_OFFSET 0x48\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_CYCLE_9_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_ACCESSED_9_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_TCDM_CONGESTED_9_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_9_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_FPU_SEQ_9_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ISSUE_CORE_TO_FPU_9_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_INSTR_9_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_LOAD_9_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_I_9_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_RETIRED_ACC_9_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_STALL_9_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_STALL_9_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_STALL_9_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_STALL_9_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_W_STALL_9_BIT 14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUF_R_STALL_9_BIT 15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_DONE_9_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AW_BW_9_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_DONE_9_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_AR_BW_9_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_DONE_9_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_R_BW_9_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_DONE_9_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_W_BW_9_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_B_DONE_9_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_DMA_BUSY_9_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_MISS_9_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_HIT_9_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_PREFETCH_9_BIT 28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_DOUBLE_HIT_9_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_9_ICACHE_STALL_9_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_REG_OFFSET 0x50\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_CYCLE_10_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_ACCESSED_10_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_TCDM_CONGESTED_10_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_10_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_FPU_SEQ_10_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ISSUE_CORE_TO_FPU_10_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_INSTR_10_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_LOAD_10_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_I_10_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_RETIRED_ACC_10_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_STALL_10_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_STALL_10_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_STALL_10_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_STALL_10_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_W_STALL_10_BIT \\\n    14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUF_R_STALL_10_BIT \\\n    15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_DONE_10_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AW_BW_10_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_DONE_10_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_AR_BW_10_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_DONE_10_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_R_BW_10_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_DONE_10_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_W_BW_10_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_B_DONE_10_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_DMA_BUSY_10_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_MISS_10_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_HIT_10_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_PREFETCH_10_BIT \\\n    28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_DOUBLE_HIT_10_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_10_ICACHE_STALL_10_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_REG_OFFSET 0x58\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_CYCLE_11_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_ACCESSED_11_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_TCDM_CONGESTED_11_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_11_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_FPU_SEQ_11_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ISSUE_CORE_TO_FPU_11_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_INSTR_11_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_LOAD_11_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_I_11_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_RETIRED_ACC_11_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_STALL_11_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_STALL_11_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_STALL_11_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_STALL_11_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_W_STALL_11_BIT \\\n    14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUF_R_STALL_11_BIT \\\n    15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_DONE_11_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AW_BW_11_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_DONE_11_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_AR_BW_11_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_DONE_11_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_R_BW_11_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_DONE_11_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_W_BW_11_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_B_DONE_11_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_DMA_BUSY_11_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_MISS_11_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_HIT_11_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_PREFETCH_11_BIT \\\n    28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_DOUBLE_HIT_11_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_11_ICACHE_STALL_11_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_REG_OFFSET 0x60\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_CYCLE_12_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_ACCESSED_12_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_TCDM_CONGESTED_12_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_12_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_FPU_SEQ_12_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ISSUE_CORE_TO_FPU_12_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_INSTR_12_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_LOAD_12_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_I_12_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_RETIRED_ACC_12_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_STALL_12_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_STALL_12_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_STALL_12_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_STALL_12_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_W_STALL_12_BIT \\\n    14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUF_R_STALL_12_BIT \\\n    15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_DONE_12_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AW_BW_12_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_DONE_12_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_AR_BW_12_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_DONE_12_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_R_BW_12_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_DONE_12_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_W_BW_12_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_B_DONE_12_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_DMA_BUSY_12_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_MISS_12_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_HIT_12_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_PREFETCH_12_BIT \\\n    28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_DOUBLE_HIT_12_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_12_ICACHE_STALL_12_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_REG_OFFSET 0x68\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_CYCLE_13_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_ACCESSED_13_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_TCDM_CONGESTED_13_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_13_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_FPU_SEQ_13_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ISSUE_CORE_TO_FPU_13_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_INSTR_13_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_LOAD_13_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_I_13_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_RETIRED_ACC_13_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_STALL_13_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_STALL_13_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_STALL_13_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_STALL_13_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_W_STALL_13_BIT \\\n    14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUF_R_STALL_13_BIT \\\n    15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_DONE_13_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AW_BW_13_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_DONE_13_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_AR_BW_13_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_DONE_13_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_R_BW_13_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_DONE_13_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_W_BW_13_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_B_DONE_13_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_DMA_BUSY_13_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_MISS_13_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_HIT_13_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_PREFETCH_13_BIT \\\n    28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_DOUBLE_HIT_13_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_13_ICACHE_STALL_13_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_REG_OFFSET 0x70\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_CYCLE_14_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_ACCESSED_14_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_TCDM_CONGESTED_14_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_14_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_FPU_SEQ_14_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ISSUE_CORE_TO_FPU_14_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_INSTR_14_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_LOAD_14_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_I_14_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_RETIRED_ACC_14_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_STALL_14_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_STALL_14_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_STALL_14_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_STALL_14_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_W_STALL_14_BIT \\\n    14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUF_R_STALL_14_BIT \\\n    15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_DONE_14_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AW_BW_14_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_DONE_14_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_AR_BW_14_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_DONE_14_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_R_BW_14_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_DONE_14_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_W_BW_14_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_B_DONE_14_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_DMA_BUSY_14_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_MISS_14_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_HIT_14_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_PREFETCH_14_BIT \\\n    28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_DOUBLE_HIT_14_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_14_ICACHE_STALL_14_BIT 30\n\n// Enable particular performance counter and start tracking.\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_REG_OFFSET 0x78\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_CYCLE_15_BIT 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_ACCESSED_15_BIT 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_TCDM_CONGESTED_15_BIT 2\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_15_BIT 3\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_FPU_SEQ_15_BIT 4\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ISSUE_CORE_TO_FPU_15_BIT \\\n    5\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_INSTR_15_BIT 6\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_LOAD_15_BIT 7\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_I_15_BIT 8\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_RETIRED_ACC_15_BIT 9\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_STALL_15_BIT 10\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_STALL_15_BIT 11\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_STALL_15_BIT 12\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_STALL_15_BIT 13\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_W_STALL_15_BIT \\\n    14\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUF_R_STALL_15_BIT \\\n    15\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_DONE_15_BIT 16\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AW_BW_15_BIT 17\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_DONE_15_BIT 18\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_AR_BW_15_BIT 19\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_DONE_15_BIT 20\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_R_BW_15_BIT 21\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_DONE_15_BIT 22\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_W_BW_15_BIT 23\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_B_DONE_15_BIT 24\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_DMA_BUSY_15_BIT 25\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_MISS_15_BIT 26\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_HIT_15_BIT 27\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_PREFETCH_15_BIT \\\n    28\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_DOUBLE_HIT_15_BIT \\\n    29\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_ENABLE_15_ICACHE_STALL_15_BIT 30\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELD_WIDTH 10\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_HART_SELECT_FIELDS_PER_REG 6\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_MULTIREG_COUNT 16\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_REG_OFFSET 0x80\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_0_HART_SELECT_0_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_REG_OFFSET 0x88\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_1_HART_SELECT_1_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_REG_OFFSET 0x90\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_2_HART_SELECT_2_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_REG_OFFSET 0x98\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_3_HART_SELECT_3_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_REG_OFFSET 0xa0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_4_HART_SELECT_4_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_REG_OFFSET 0xa8\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_5_HART_SELECT_5_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_REG_OFFSET 0xb0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_6_HART_SELECT_6_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_REG_OFFSET 0xb8\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_7_HART_SELECT_7_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_REG_OFFSET 0xc0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_8_HART_SELECT_8_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_REG_OFFSET 0xc8\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_FIELD         \\\n    ((bitfield_field32_t){                                                  \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_9_HART_SELECT_9_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_REG_OFFSET 0xd0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_10_HART_SELECT_10_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_REG_OFFSET 0xd8\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_11_HART_SELECT_11_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_REG_OFFSET 0xe0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_12_HART_SELECT_12_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_REG_OFFSET 0xe8\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_13_HART_SELECT_13_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_REG_OFFSET 0xf0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_14_HART_SELECT_14_OFFSET})\n\n// Select from which hart in the cluster, starting from `0`,\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_REG_OFFSET 0xf8\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_MASK 0x3ff\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_HART_SELECT_15_HART_SELECT_15_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELD_WIDTH 48\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_PERF_COUNTER_FIELDS_PER_REG 1\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_MULTIREG_COUNT 16\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_REG_OFFSET 0x100\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_0_PERF_COUNTER_0_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_REG_OFFSET 0x108\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_1_PERF_COUNTER_1_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_REG_OFFSET 0x110\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_2_PERF_COUNTER_2_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_REG_OFFSET 0x118\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_3_PERF_COUNTER_3_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_REG_OFFSET 0x120\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_4_PERF_COUNTER_4_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_REG_OFFSET 0x128\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_5_PERF_COUNTER_5_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_REG_OFFSET 0x130\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_6_PERF_COUNTER_6_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_REG_OFFSET 0x138\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_7_PERF_COUNTER_7_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_REG_OFFSET 0x140\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_8_PERF_COUNTER_8_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_REG_OFFSET 0x148\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_9_PERF_COUNTER_9_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_REG_OFFSET 0x150\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_FIELD     \\\n    ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_10_PERF_COUNTER_10_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_REG_OFFSET 0x158\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_FIELD     \\\n    ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_11_PERF_COUNTER_11_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_REG_OFFSET 0x160\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_FIELD     \\\n    ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_12_PERF_COUNTER_12_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_REG_OFFSET 0x168\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_FIELD     \\\n    ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_13_PERF_COUNTER_13_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_REG_OFFSET 0x170\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_FIELD     \\\n    ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_14_PERF_COUNTER_14_OFFSET})\n\n// Performance counter. Set corresponding PERF_COUNTER_ENABLE bits depending\n// on what\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_REG_OFFSET 0x178\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_MASK \\\n    0xffffffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_FIELD     \\\n    ((bitfield_field32_t){                                                  \\\n        .mask =                                                             \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_MASK, \\\n        .index =                                                            \\\n            SNITCH_CLUSTER_PERIPHERAL_PERF_COUNTER_15_PERF_COUNTER_15_OFFSET})\n\n// Set bits in the cluster-local CLINT. Writing a 1 at location i sets the\n// cluster-local interrupt\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_REG_OFFSET 0x180\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_MASK 0xffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_FIELD         \\\n    ((bitfield_field32_t){                                                \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_MASK, \\\n        .index = SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_SET_CL_CLINT_SET_OFFSET})\n\n// Clear bits in the cluster-local CLINT. Writing a 1 at location i clears\n// the cluster-local interrupt\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_REG_OFFSET 0x188\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_MASK 0xffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_FIELD         \\\n    ((bitfield_field32_t){                                                    \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_MASK, \\\n        .index =                                                              \\\n            SNITCH_CLUSTER_PERIPHERAL_CL_CLINT_CLEAR_CL_CLINT_CLEAR_OFFSET})\n\n// Hardware barrier register. Loads to this register will block until all\n// cores have\n#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_REG_OFFSET 0x190\n#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_MASK 0xffffffff\n#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_OFFSET 0\n#define SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_FIELD         \\\n    ((bitfield_field32_t){                                            \\\n        .mask = SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_MASK, \\\n        .index = SNITCH_CLUSTER_PERIPHERAL_HW_BARRIER_HW_BARRIER_OFFSET})\n\n// Controls prefetching of the instruction cache.\n#define SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_REG_OFFSET 0x198\n#define SNITCH_CLUSTER_PERIPHERAL_ICACHE_PREFETCH_ENABLE_ICACHE_PREFETCH_ENABLE_BIT \\\n    0\n\n#ifdef __cplusplus\n}  // extern \"C\"\n#endif\n#endif  // _SNITCH_CLUSTER_PERIPHERAL_REG_DEFS_\n// End generated register defines for snitch_cluster_peripheral\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/snrt_8h/","title":"snRuntime/include/snrt.h","text":""},{"location":"runtime/Files/snrt_8h/#classes","title":"Classes","text":"Name struct snrt_slice A slice of memory. struct snrt_peripherals Peripherals to the Snitch SoC. struct snrt_barrier Barrier to use with snrt_barrier."},{"location":"runtime/Files/snrt_8h/#types","title":"Types","text":"Name enum snrt_ssr_dm { SNRT_SSR_DM0 = 0, SNRT_SSR_DM1 = 1, SNRT_SSR_DM2 = 2}The different SSR data movers. enum snrt_ssr_dim { SNRT_SSR_1D = 0, SNRT_SSR_2D = 1, SNRT_SSR_3D = 2, SNRT_SSR_4D = 3}The different dimensions. typedef struct snrt_slice snrt_slice_t A slice of memory. typedef uint32_t snrt_dma_txid_t"},{"location":"runtime/Files/snrt_8h/#functions","title":"Functions","text":"Name void * snrt_memset(void * ptr, int value, size_t num) size_t snrt_slice_len(snrt_slice_t s) void snrt_cluster_hw_barrier() void snrt_cluster_sw_barrier() void snrt_global_barrier() void snrt_barrier(struct snrt_barrier * barr, uint32_t n) uint32_t attribute((pure) ) struct snrt_team_root * snrt_current_team() struct snrt_peripherals * snrt_peripherals() uint32_t snrt_global_core_base_hartid() uint32_t snrt_global_core_idx() uint32_t snrt_global_core_num() uint32_t snrt_global_compute_core_idx() uint32_t snrt_global_compute_core_num() uint32_t snrt_global_dm_core_idx() uint32_t snrt_global_dm_core_num() uint32_t snrt_cluster_core_base_hartid() uint32_t snrt_cluster_core_idx() uint32_t snrt_cluster_core_num() uint32_t snrt_cluster_compute_core_idx() uint32_t snrt_cluster_compute_core_num() uint32_t snrt_cluster_dm_core_idx() uint32_t snrt_cluster_dm_core_num() uint32_t snrt_cluster_idx() uint32_t snrt_cluster_num() int snrt_is_compute_core() int snrt_is_dm_core() void snrt_wakeup(uint32_t mask) uint32_t _snrt_barrier_reg_ptr()get pointer to barrier register snrt_slice_t snrt_global_memory()get start address of global memory snrt_slice_t snrt_cluster_memory()get start address of the cluster's tcdm memory snrt_slice_t snrt_zero_memory()get start address of the cluster's zero memory void snrt_bcast_send(void * data, size_t len) void snrt_bcast_recv(void * data, size_t len) void * snrt_memcpy(void * dst, const void * src, size_t n) snrt_dma_txid_t snrt_dma_start_1d_wideptr(uint64_t dst, uint64_t src, size_t size)Initiate an asynchronous 1D DMA transfer with wide 64-bit pointers. snrt_dma_txid_t snrt_dma_start_1d(void * dst, const void * src, size_t size)Initiate an asynchronous 1D DMA transfer. snrt_dma_txid_t snrt_dma_start_2d_wideptr(uint64_t dst, uint64_t src, size_t size, size_t dst_stride, size_t src_stride, size_t repeat)Initiate an asynchronous 2D DMA transfer with wide 64-bit pointers. snrt_dma_txid_t snrt_dma_start_2d(void * dst, const void * src, size_t size, size_t dst_stride, size_t src_stride, size_t repeat)Initiate an asynchronous 2D DMA transfer. void snrt_dma_wait(snrt_dma_txid_t tid)Block until a transfer finishes. void snrt_dma_wait_all()Block until all operation on the DMA ceases. void snrt_ssr_loop_1d(enum snrt_ssr_dm dm, size_t b0, size_t i0) void snrt_ssr_loop_2d(enum snrt_ssr_dm dm, size_t b0, size_t b1, size_t i0, size_t i1) void snrt_ssr_loop_3d(enum snrt_ssr_dm dm, size_t b0, size_t b1, size_t b2, size_t i0, size_t i1, size_t i2) void snrt_ssr_loop_4d(enum snrt_ssr_dm dm, size_t b0, size_t b1, size_t b2, size_t b3, size_t i0, size_t i1, size_t i2, size_t i3) void snrt_ssr_repeat(enum snrt_ssr_dm dm, size_t count) void snrt_ssr_enable() void snrt_ssr_disable() void snrt_ssr_read(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim, volatile void * ptr) void snrt_ssr_write(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim, volatile void * ptr) void snrt_fpu_fence() static attribute((noreturn) )Use as replacement of the stdlib exit() call. void snrt_alloc_init(struct snrt_team_root * team, uint32_t l3off) void * snrt_l1alloc(size_t size) void * snrt_l3alloc(size_t size) void snrt_int_init(struct snrt_team_root * team)Init the interrupt subsystem. void snrt_interrupt_global_enable(void )Globally enable M-mode interrupts. void snrt_interrupt_global_disable(void )Globally disable interrupts. void snrt_interrupt_enable(uint32_t irq)Enable interrupt source irq. void snrt_interrupt_disable(uint32_t irq)Disable interrupt source. uint32_t snrt_interrupt_cause(void )Get the cause of an interrupt. void snrt_int_sw_clear(uint32_t hartid) void snrt_int_sw_set(uint32_t hartid) uint32_t snrt_int_sw_get(uint32_t hartid) void snrt_int_clint_set(uint32_t reg_off, uint32_t mask) void snrt_int_sw_poll(void ) void snrt_int_cluster_clr(uint32_t mask) void snrt_int_cluster_set(uint32_t mask) void snrt_wfi()Put the hart into wait for interrupt state. void snrt_mutex_lock(volatile uint32_t * pmtx)lock a mutex, blocking void snrt_mutex_ttas_lock(volatile uint32_t * pmtx)lock a mutex, blocking void snrt_mutex_release(volatile uint32_t * pmtx)Release the mutex."},{"location":"runtime/Files/snrt_8h/#defines","title":"Defines","text":"Name snrt_min(a, b) snrt_max(a, b) __snrt_omp_bootstrap(core_idx) Bootstrap macro for openmp applications. __snrt_omp_destroy(core_idx) Destroy an OpenMP session so all cores exit cleanly."},{"location":"runtime/Files/snrt_8h/#types-documentation","title":"Types Documentation","text":""},{"location":"runtime/Files/snrt_8h/#enum-snrt_ssr_dm","title":"enum snrt_ssr_dm","text":"Enumerator Value Description SNRT_SSR_DM0 0 SNRT_SSR_DM1 1 SNRT_SSR_DM2 2 <p>The different SSR data movers. </p>"},{"location":"runtime/Files/snrt_8h/#enum-snrt_ssr_dim","title":"enum snrt_ssr_dim","text":"Enumerator Value Description SNRT_SSR_1D 0 SNRT_SSR_2D 1 SNRT_SSR_3D 2 SNRT_SSR_4D 3 <p>The different dimensions. </p>"},{"location":"runtime/Files/snrt_8h/#typedef-snrt_slice_t","title":"typedef snrt_slice_t","text":"<pre><code>typedef struct snrt_slice snrt_slice_t;\n</code></pre> <p>A slice of memory. </p>"},{"location":"runtime/Files/snrt_8h/#typedef-snrt_dma_txid_t","title":"typedef snrt_dma_txid_t","text":"<pre><code>typedef uint32_t snrt_dma_txid_t;\n</code></pre> <p>DMA runtime functions. A DMA transfer identifier. </p>"},{"location":"runtime/Files/snrt_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/snrt_8h/#function-snrt_memset","title":"function snrt_memset","text":"<pre><code>static inline void * snrt_memset(\nvoid * ptr,\nint value,\nsize_t num\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_slice_len","title":"function snrt_slice_len","text":"<pre><code>static inline size_t snrt_slice_len(\nsnrt_slice_t s\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_hw_barrier","title":"function snrt_cluster_hw_barrier","text":"<pre><code>void snrt_cluster_hw_barrier()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_sw_barrier","title":"function snrt_cluster_sw_barrier","text":"<pre><code>void snrt_cluster_sw_barrier()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_barrier","title":"function snrt_global_barrier","text":"<pre><code>void snrt_global_barrier()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_barrier","title":"function snrt_barrier","text":"<pre><code>void snrt_barrier(\nstruct snrt_barrier * barr,\nuint32_t n\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-attribute","title":"function attribute","text":"<pre><code>static inline uint32_t __attribute__(\n(pure) )\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_current_team","title":"function snrt_current_team","text":"<pre><code>struct snrt_team_root * snrt_current_team()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_peripherals","title":"function snrt_peripherals","text":"<pre><code>struct snrt_peripherals * snrt_peripherals()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_core_base_hartid","title":"function snrt_global_core_base_hartid","text":"<pre><code>uint32_t snrt_global_core_base_hartid()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_core_idx","title":"function snrt_global_core_idx","text":"<pre><code>uint32_t snrt_global_core_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_core_num","title":"function snrt_global_core_num","text":"<pre><code>uint32_t snrt_global_core_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_compute_core_idx","title":"function snrt_global_compute_core_idx","text":"<pre><code>uint32_t snrt_global_compute_core_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_compute_core_num","title":"function snrt_global_compute_core_num","text":"<pre><code>uint32_t snrt_global_compute_core_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_dm_core_idx","title":"function snrt_global_dm_core_idx","text":"<pre><code>uint32_t snrt_global_dm_core_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_dm_core_num","title":"function snrt_global_dm_core_num","text":"<pre><code>uint32_t snrt_global_dm_core_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_core_base_hartid","title":"function snrt_cluster_core_base_hartid","text":"<pre><code>uint32_t snrt_cluster_core_base_hartid()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_core_idx","title":"function snrt_cluster_core_idx","text":"<pre><code>uint32_t snrt_cluster_core_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_core_num","title":"function snrt_cluster_core_num","text":"<pre><code>uint32_t snrt_cluster_core_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_compute_core_idx","title":"function snrt_cluster_compute_core_idx","text":"<pre><code>uint32_t snrt_cluster_compute_core_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_compute_core_num","title":"function snrt_cluster_compute_core_num","text":"<pre><code>uint32_t snrt_cluster_compute_core_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_dm_core_idx","title":"function snrt_cluster_dm_core_idx","text":"<pre><code>uint32_t snrt_cluster_dm_core_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_dm_core_num","title":"function snrt_cluster_dm_core_num","text":"<pre><code>uint32_t snrt_cluster_dm_core_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_idx","title":"function snrt_cluster_idx","text":"<pre><code>uint32_t snrt_cluster_idx()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_num","title":"function snrt_cluster_num","text":"<pre><code>uint32_t snrt_cluster_num()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_is_compute_core","title":"function snrt_is_compute_core","text":"<pre><code>int snrt_is_compute_core()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_is_dm_core","title":"function snrt_is_dm_core","text":"<pre><code>int snrt_is_dm_core()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_wakeup","title":"function snrt_wakeup","text":"<pre><code>void snrt_wakeup(\nuint32_t mask\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-_snrt_barrier_reg_ptr","title":"function _snrt_barrier_reg_ptr","text":"<pre><code>uint32_t _snrt_barrier_reg_ptr()\n</code></pre> <p>get pointer to barrier register </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_global_memory","title":"function snrt_global_memory","text":"<pre><code>snrt_slice_t snrt_global_memory()\n</code></pre> <p>get start address of global memory </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_cluster_memory","title":"function snrt_cluster_memory","text":"<pre><code>snrt_slice_t snrt_cluster_memory()\n</code></pre> <p>get start address of the cluster's tcdm memory </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_zero_memory","title":"function snrt_zero_memory","text":"<pre><code>snrt_slice_t snrt_zero_memory()\n</code></pre> <p>get start address of the cluster's zero memory </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_bcast_send","title":"function snrt_bcast_send","text":"<pre><code>void snrt_bcast_send(\nvoid * data,\nsize_t len\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_bcast_recv","title":"function snrt_bcast_recv","text":"<pre><code>void snrt_bcast_recv(\nvoid * data,\nsize_t len\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_memcpy","title":"function snrt_memcpy","text":"<pre><code>void * snrt_memcpy(\nvoid * dst,\nconst void * src,\nsize_t n\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_dma_start_1d_wideptr","title":"function snrt_dma_start_1d_wideptr","text":"<pre><code>snrt_dma_txid_t snrt_dma_start_1d_wideptr(\nuint64_t dst,\nuint64_t src,\nsize_t size\n)\n</code></pre> <p>Initiate an asynchronous 1D DMA transfer with wide 64-bit pointers. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_dma_start_1d","title":"function snrt_dma_start_1d","text":"<pre><code>snrt_dma_txid_t snrt_dma_start_1d(\nvoid * dst,\nconst void * src,\nsize_t size\n)\n</code></pre> <p>Initiate an asynchronous 1D DMA transfer. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_dma_start_2d_wideptr","title":"function snrt_dma_start_2d_wideptr","text":"<pre><code>snrt_dma_txid_t snrt_dma_start_2d_wideptr(\nuint64_t dst,\nuint64_t src,\nsize_t size,\nsize_t dst_stride,\nsize_t src_stride,\nsize_t repeat\n)\n</code></pre> <p>Initiate an asynchronous 2D DMA transfer with wide 64-bit pointers. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_dma_start_2d","title":"function snrt_dma_start_2d","text":"<pre><code>snrt_dma_txid_t snrt_dma_start_2d(\nvoid * dst,\nconst void * src,\nsize_t size,\nsize_t dst_stride,\nsize_t src_stride,\nsize_t repeat\n)\n</code></pre> <p>Initiate an asynchronous 2D DMA transfer. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_dma_wait","title":"function snrt_dma_wait","text":"<pre><code>void snrt_dma_wait(\nsnrt_dma_txid_t tid\n)\n</code></pre> <p>Block until a transfer finishes. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_dma_wait_all","title":"function snrt_dma_wait_all","text":"<pre><code>void snrt_dma_wait_all()\n</code></pre> <p>Block until all operation on the DMA ceases. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_loop_1d","title":"function snrt_ssr_loop_1d","text":"<pre><code>void snrt_ssr_loop_1d(\nenum snrt_ssr_dm dm,\nsize_t b0,\nsize_t i0\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_loop_2d","title":"function snrt_ssr_loop_2d","text":"<pre><code>void snrt_ssr_loop_2d(\nenum snrt_ssr_dm dm,\nsize_t b0,\nsize_t b1,\nsize_t i0,\nsize_t i1\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_loop_3d","title":"function snrt_ssr_loop_3d","text":"<pre><code>void snrt_ssr_loop_3d(\nenum snrt_ssr_dm dm,\nsize_t b0,\nsize_t b1,\nsize_t b2,\nsize_t i0,\nsize_t i1,\nsize_t i2\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_loop_4d","title":"function snrt_ssr_loop_4d","text":"<pre><code>void snrt_ssr_loop_4d(\nenum snrt_ssr_dm dm,\nsize_t b0,\nsize_t b1,\nsize_t b2,\nsize_t b3,\nsize_t i0,\nsize_t i1,\nsize_t i2,\nsize_t i3\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_repeat","title":"function snrt_ssr_repeat","text":"<pre><code>void snrt_ssr_repeat(\nenum snrt_ssr_dm dm,\nsize_t count\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_enable","title":"function snrt_ssr_enable","text":"<pre><code>void snrt_ssr_enable()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_disable","title":"function snrt_ssr_disable","text":"<pre><code>void snrt_ssr_disable()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_read","title":"function snrt_ssr_read","text":"<pre><code>void snrt_ssr_read(\nenum snrt_ssr_dm dm,\nenum snrt_ssr_dim dim,\nvolatile void * ptr\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_ssr_write","title":"function snrt_ssr_write","text":"<pre><code>void snrt_ssr_write(\nenum snrt_ssr_dm dm,\nenum snrt_ssr_dim dim,\nvolatile void * ptr\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_fpu_fence","title":"function snrt_fpu_fence","text":"<pre><code>void snrt_fpu_fence()\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-attribute_1","title":"function attribute","text":"<pre><code>static inline static __attribute__(\n(noreturn) )\n</code></pre> <p>Use as replacement of the stdlib exit() call. </p> <p>Parameters: </p> <ul> <li>status exit code </li> </ul>"},{"location":"runtime/Files/snrt_8h/#function-snrt_alloc_init","title":"function snrt_alloc_init","text":"<pre><code>void snrt_alloc_init(\nstruct snrt_team_root * team,\nuint32_t l3off\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_l1alloc","title":"function snrt_l1alloc","text":"<pre><code>void * snrt_l1alloc(\nsize_t size\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_l3alloc","title":"function snrt_l3alloc","text":"<pre><code>void * snrt_l3alloc(\nsize_t size\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_init","title":"function snrt_int_init","text":"<pre><code>void snrt_int_init(\nstruct snrt_team_root * team\n)\n</code></pre> <p>Init the interrupt subsystem. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_interrupt_global_enable","title":"function snrt_interrupt_global_enable","text":"<pre><code>static inline void snrt_interrupt_global_enable(\nvoid )\n</code></pre> <p>Globally enable M-mode interrupts. </p> <p>On an interrupt event the core will jump to __snrt_crt0_interrupt_handler service the interrupt and continue normal execution. Enable interrupt sources with snrt_interrupt_enable </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_interrupt_global_disable","title":"function snrt_interrupt_global_disable","text":"<pre><code>static inline void snrt_interrupt_global_disable(\nvoid )\n</code></pre> <p>Globally disable interrupts. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_interrupt_enable","title":"function snrt_interrupt_enable","text":"<pre><code>static inline void snrt_interrupt_enable(\nuint32_t irq\n)\n</code></pre> <p>Enable interrupt source irq. </p> <p>Parameters: </p> <ul> <li>irq one of IRQ_[S/H/M]_[SOFT/TIMER/EXT] interrupts </li> </ul> <p>Enable interrupt, either wakes from wfi or if global interrupts are enabled, jumps to the IRQ handler</p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_interrupt_disable","title":"function snrt_interrupt_disable","text":"<pre><code>static inline void snrt_interrupt_disable(\nuint32_t irq\n)\n</code></pre> <p>Disable interrupt source. </p> <p>Parameters: </p> <ul> <li>irq one of IRQ_[S/H/M]_[SOFT/TIMER/EXT] </li> </ul> <p>See snrt_interrupt_enable</p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_interrupt_cause","title":"function snrt_interrupt_cause","text":"<pre><code>static inline uint32_t snrt_interrupt_cause(\nvoid )\n</code></pre> <p>Get the cause of an interrupt. </p> <p>Return: One of IRQ_[S/H/M]_[SOFT/TIMER/EXT] </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_sw_clear","title":"function snrt_int_sw_clear","text":"<pre><code>void snrt_int_sw_clear(\nuint32_t hartid\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_sw_set","title":"function snrt_int_sw_set","text":"<pre><code>void snrt_int_sw_set(\nuint32_t hartid\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_sw_get","title":"function snrt_int_sw_get","text":"<pre><code>uint32_t snrt_int_sw_get(\nuint32_t hartid\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_clint_set","title":"function snrt_int_clint_set","text":"<pre><code>void snrt_int_clint_set(\nuint32_t reg_off,\nuint32_t mask\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_sw_poll","title":"function snrt_int_sw_poll","text":"<pre><code>void snrt_int_sw_poll(\nvoid )\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_cluster_clr","title":"function snrt_int_cluster_clr","text":"<pre><code>void snrt_int_cluster_clr(\nuint32_t mask\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_int_cluster_set","title":"function snrt_int_cluster_set","text":"<pre><code>void snrt_int_cluster_set(\nuint32_t mask\n)\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#function-snrt_wfi","title":"function snrt_wfi","text":"<pre><code>static inline void snrt_wfi()\n</code></pre> <p>Put the hart into wait for interrupt state. </p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_mutex_lock","title":"function snrt_mutex_lock","text":"<pre><code>static inline void snrt_mutex_lock(\nvolatile uint32_t * pmtx\n)\n</code></pre> <p>lock a mutex, blocking </p> <p>declare mutex with <code>static volatile uint32_t mtx = 0;</code></p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_mutex_ttas_lock","title":"function snrt_mutex_ttas_lock","text":"<pre><code>static inline void snrt_mutex_ttas_lock(\nvolatile uint32_t * pmtx\n)\n</code></pre> <p>lock a mutex, blocking </p> <p>test and test-and-set (ttas) implementation of a lock. Declare mutex with <code>static volatile uint32_t mtx = 0;</code></p>"},{"location":"runtime/Files/snrt_8h/#function-snrt_mutex_release","title":"function snrt_mutex_release","text":"<pre><code>static inline void snrt_mutex_release(\nvolatile uint32_t * pmtx\n)\n</code></pre> <p>Release the mutex. </p>"},{"location":"runtime/Files/snrt_8h/#macros-documentation","title":"Macros Documentation","text":""},{"location":"runtime/Files/snrt_8h/#define-snrt_min","title":"define snrt_min","text":"<pre><code>#define snrt_min(\na,\nb\n)\n((a) &lt; (b) ? (a) : (b))\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#define-snrt_max","title":"define snrt_max","text":"<pre><code>#define snrt_max(\na,\nb\n)\n((a) &gt; (b) ? (a) : (b))\n</code></pre>"},{"location":"runtime/Files/snrt_8h/#define-__snrt_omp_bootstrap","title":"define __snrt_omp_bootstrap","text":"<pre><code>#define __snrt_omp_bootstrap(\ncore_idx\n)\nif (snrt_omp_bootstrap(core_idx)) do { \\\n            snrt_cluster_hw_barrier();     \\\n            return 0;                      \\\n    } while (0)\n</code></pre> <p>Bootstrap macro for openmp applications. </p>"},{"location":"runtime/Files/snrt_8h/#define-__snrt_omp_destroy","title":"define __snrt_omp_destroy","text":"<pre><code>#define __snrt_omp_destroy(\ncore_idx\n)\neu_exit(core_idx);               \\\n    dm_exit();                       \\\n    snrt_cluster_hw_barrier();\n</code></pre> <p>Destroy an OpenMP session so all cores exit cleanly. </p>"},{"location":"runtime/Files/snrt_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n\n#include &lt;stddef.h&gt;\n#include &lt;stdint.h&gt;\n\n#include \"encoding.h\"\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n//================================================================================\n// Debug\n//================================================================================\n// #define OMP_DEBUG_LEVEL 100\n// #define KMP_DEBUG_LEVEL 100\n// #define EU_DEBUG_LEVEL 100\n\n//================================================================================\n// Macros\n//================================================================================\n\n#ifndef snrt_min\n#define snrt_min(a, b) ((a) &lt; (b) ? (a) : (b))\n#endif\n\n#ifndef snrt_max\n#define snrt_max(a, b) ((a) &gt; (b) ? (a) : (b))\n#endif\n\nstatic inline void *snrt_memset(void *ptr, int value, size_t num) {\nfor (uint32_t i = 0; i &lt; num; ++i)\n*((uint8_t *)ptr + i) = (unsigned char)value;\nreturn ptr;\n}\n\ntypedef struct snrt_slice {\nuint64_t start;\nuint64_t end;\n} snrt_slice_t;\n\nstruct snrt_peripherals {\nvolatile uint32_t *clint;\nvolatile uint32_t *wakeup;\nuint32_t *perf_counters;\nvolatile uint32_t *cl_clint;\n};\n\nstruct snrt_barrier {\nuint32_t volatile barrier;\nuint32_t volatile barrier_iteration;\n};\n\nstatic inline size_t snrt_slice_len(snrt_slice_t s) { return s.end - s.start; }\n\nextern void snrt_cluster_hw_barrier();\nextern void snrt_cluster_sw_barrier();\nextern void snrt_global_barrier();\nextern void snrt_barrier(struct snrt_barrier *barr, uint32_t n);\n\nstatic inline uint32_t __attribute__((pure)) snrt_hartid();\nstruct snrt_team_root *snrt_current_team();\nextern struct snrt_peripherals *snrt_peripherals();\nextern uint32_t snrt_global_core_base_hartid();\nextern uint32_t snrt_global_core_idx();\nextern uint32_t snrt_global_core_num();\nextern uint32_t snrt_global_compute_core_idx();\nextern uint32_t snrt_global_compute_core_num();\nextern uint32_t snrt_global_dm_core_idx();\nextern uint32_t snrt_global_dm_core_num();\nextern uint32_t snrt_cluster_core_base_hartid();\nextern uint32_t snrt_cluster_core_idx();\nextern uint32_t snrt_cluster_core_num();\nextern uint32_t snrt_cluster_compute_core_idx();\nextern uint32_t snrt_cluster_compute_core_num();\nextern uint32_t snrt_cluster_dm_core_idx();\nextern uint32_t snrt_cluster_dm_core_num();\nextern uint32_t snrt_cluster_idx();\nextern uint32_t snrt_cluster_num();\nextern int snrt_is_compute_core();\nextern int snrt_is_dm_core();\nextern void snrt_wakeup(uint32_t mask);\n\nextern uint32_t _snrt_barrier_reg_ptr();\n\nextern snrt_slice_t snrt_global_memory();\nextern snrt_slice_t snrt_cluster_memory();\nextern snrt_slice_t snrt_zero_memory();\n\nextern void snrt_bcast_send(void *data, size_t len);\nextern void snrt_bcast_recv(void *data, size_t len);\n\nextern void *snrt_memcpy(void *dst, const void *src, size_t n);\n\ntypedef uint32_t snrt_dma_txid_t;\nextern snrt_dma_txid_t snrt_dma_start_1d_wideptr(uint64_t dst, uint64_t src,\nsize_t size);\nextern snrt_dma_txid_t snrt_dma_start_1d(void *dst, const void *src,\nsize_t size);\nextern snrt_dma_txid_t snrt_dma_start_2d_wideptr(uint64_t dst, uint64_t src,\nsize_t size, size_t dst_stride,\nsize_t src_stride,\nsize_t repeat);\nextern snrt_dma_txid_t snrt_dma_start_2d(void *dst, const void *src,\nsize_t size, size_t dst_stride,\nsize_t src_stride, size_t repeat);\nextern void snrt_dma_wait(snrt_dma_txid_t tid);\nextern void snrt_dma_wait_all();\n\nenum snrt_ssr_dm {\nSNRT_SSR_DM0 = 0,\nSNRT_SSR_DM1 = 1,\nSNRT_SSR_DM2 = 2,\n};\n\nenum snrt_ssr_dim {\nSNRT_SSR_1D = 0,\nSNRT_SSR_2D = 1,\nSNRT_SSR_3D = 2,\nSNRT_SSR_4D = 3,\n};\n\nextern void snrt_ssr_loop_1d(enum snrt_ssr_dm dm, size_t b0, size_t i0);\nextern void snrt_ssr_loop_2d(enum snrt_ssr_dm dm, size_t b0, size_t b1,\nsize_t i0, size_t i1);\nextern void snrt_ssr_loop_3d(enum snrt_ssr_dm dm, size_t b0, size_t b1,\nsize_t b2, size_t i0, size_t i1, size_t i2);\nextern void snrt_ssr_loop_4d(enum snrt_ssr_dm dm, size_t b0, size_t b1,\nsize_t b2, size_t b3, size_t i0, size_t i1,\nsize_t i2, size_t i3);\nextern void snrt_ssr_repeat(enum snrt_ssr_dm dm, size_t count);\nextern void snrt_ssr_enable();\nextern void snrt_ssr_disable();\nextern void snrt_ssr_read(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim,\nvolatile void *ptr);\nextern void snrt_ssr_write(enum snrt_ssr_dm dm, enum snrt_ssr_dim dim,\nvolatile void *ptr);\nextern void snrt_fpu_fence();\n\nstatic inline __attribute__((noreturn)) void snrt_exit(int status) {\n(void)status;\nwhile (1)\n;\n}\n\n//================================================================================\n// Team functions\n//================================================================================\n\nstatic inline uint32_t __attribute__((pure)) snrt_hartid() {\nuint32_t hartid;\nasm(\"csrr %0, mhartid\" : \"=r\"(hartid));\nreturn hartid;\n}\n\n//================================================================================\n// Allocation functions\n//================================================================================\nextern void snrt_alloc_init(struct snrt_team_root *team, uint32_t l3off);\nextern void *snrt_l1alloc(size_t size);\nextern void *snrt_l3alloc(size_t size);\n\n//================================================================================\n// Interrupt functions\n//================================================================================\nvoid snrt_int_init(struct snrt_team_root *team);\n\nstatic inline void snrt_interrupt_global_enable(void) {\nset_csr(mstatus, MSTATUS_MIE);  // set M global interrupt enable\n}\nstatic inline void snrt_interrupt_global_disable(void) {\nclear_csr(mstatus, MSTATUS_MIE);\n}\nstatic inline void snrt_interrupt_enable(uint32_t irq) {\nset_csr(mie, 1 &lt;&lt; irq);\n}\nstatic inline void snrt_interrupt_disable(uint32_t irq) {\nclear_csr(mie, 1 &lt;&lt; irq);\n}\nstatic inline uint32_t snrt_interrupt_cause(void) {\nreturn read_csr(mcause) &amp; ~0x80000000;\n}\nextern void snrt_int_sw_clear(uint32_t hartid);\nextern void snrt_int_sw_set(uint32_t hartid);\nextern uint32_t snrt_int_sw_get(uint32_t hartid);\nextern void snrt_int_clint_set(uint32_t reg_off, uint32_t mask);\nextern void snrt_int_sw_poll(void);\nextern void snrt_int_cluster_clr(uint32_t mask);\nextern void snrt_int_cluster_set(uint32_t mask);\n\nstatic inline void snrt_wfi() { asm volatile(\"wfi\"); }\n\n//================================================================================\n// Mutex functions\n//================================================================================\n\nstatic inline void snrt_mutex_lock(volatile uint32_t *pmtx) {\nasm volatile(\n\"li            t0,1          # t0 = 1\\n\"\n\"1:\\n\"\n\"  amoswap.w.aq  t0,t0,(%0)   # t0 = oldlock &amp; lock = 1\\n\"\n\"  bnez          t0,1b      # Retry if previously set)\\n\"\n: \"+r\"(pmtx)\n:\n: \"t0\");\n}\n\nstatic inline void snrt_mutex_ttas_lock(volatile uint32_t *pmtx) {\nasm volatile(\n\"1:\\n\"\n\"  lw t0, 0(%0)\\n\"\n\"  bnez t0, 1b\\n\"\n\"  li t0,1          # t0 = 1\\n\"\n\"2:\\n\"\n\"  amoswap.w.aq  t0,t0,(%0)   # t0 = oldlock &amp; lock = 1\\n\"\n\"  bnez          t0,2b      # Retry if previously set)\\n\"\n: \"+r\"(pmtx)\n:\n: \"t0\");\n}\n\nstatic inline void snrt_mutex_release(volatile uint32_t *pmtx) {\nasm volatile(\"amoswap.w.rl  x0,x0,(%0)   # Release lock by storing 0\\n\"\n: \"+r\"(pmtx));\n}\n\n//================================================================================\n// Runtime functions\n//================================================================================\n\n#define __snrt_omp_bootstrap(core_idx)     \\\n    if (snrt_omp_bootstrap(core_idx)) do { \\\n            snrt_cluster_hw_barrier();     \\\n            return 0;                      \\\n    } while (0)\n\n#define __snrt_omp_destroy(core_idx) \\\n    eu_exit(core_idx);               \\\n    dm_exit();                       \\\n    snrt_cluster_hw_barrier();\n\n#ifdef __cplusplus\n}\n#endif\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/team_8h/","title":"snRuntime/src/team.h","text":""},{"location":"runtime/Files/team_8h/#classes","title":"Classes","text":"Name struct snrt_team struct snrt_allocator_inst struct snrt_allocator struct snrt_team_root"},{"location":"runtime/Files/team_8h/#attributes","title":"Attributes","text":"Name __thread struct snrt_team * _snrt_team_current __thread uint32_t _snrt_core_idx const uint32_t _snrt_team_size"},{"location":"runtime/Files/team_8h/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"runtime/Files/team_8h/#variable-_snrt_team_current","title":"variable _snrt_team_current","text":"<pre><code>__thread struct snrt_team * _snrt_team_current;\n</code></pre>"},{"location":"runtime/Files/team_8h/#variable-_snrt_core_idx","title":"variable _snrt_core_idx","text":"<pre><code>__thread uint32_t _snrt_core_idx;\n</code></pre>"},{"location":"runtime/Files/team_8h/#variable-_snrt_team_size","title":"variable _snrt_team_size","text":"<pre><code>const uint32_t _snrt_team_size;\n</code></pre>"},{"location":"runtime/Files/team_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n#pragma once\n#include \"snrt.h\"\n\nextern __thread struct snrt_team *_snrt_team_current;\nextern __thread uint32_t _snrt_core_idx;\nextern const uint32_t _snrt_team_size;\n\nstruct snrt_team {\nstruct snrt_team_root *root;\n};\n\nstruct snrt_allocator_inst {\n// Base address from where allocation starts\nuint32_t base;\n// Number of bytes alloctable\nuint32_t size;\n// Address of the next allocated block\nuint32_t next;\n};\nstruct snrt_allocator {\nstruct snrt_allocator_inst l1;\nstruct snrt_allocator_inst l3;\n};\n\n// This struct is placed at the end of each clusters TCDM\nstruct snrt_team_root {\nstruct snrt_team base;\nconst void *bootdata;\nuint32_t global_core_base_hartid;\nuint32_t global_core_num;\nuint32_t cluster_idx;\nuint32_t cluster_num;\nuint32_t cluster_core_base_hartid;\nuint32_t cluster_core_num;\nsnrt_slice_t global_mem;\nsnrt_slice_t cluster_mem;\nsnrt_slice_t zero_mem;\nstruct snrt_allocator allocator;\nstruct snrt_barrier cluster_barrier;\nuint32_t barrier_reg_ptr;\nstruct snrt_peripherals peripherals;\n};\n</code></pre> <p>Updated on 2023-05-04 at 14:37:43 +0000</p>"},{"location":"runtime/Files/utils_8h/","title":"applications/src/utils/utils.h","text":""},{"location":"runtime/Files/utils_8h/#functions","title":"Functions","text":"Name uint32_t benchmark_get_cycle()returns cycle number and injects marker to track performance void snrt_dma_start_tracking()start tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed void snrt_dma_stop_tracking()stop tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed uint32_t check_layer(const conv_layer * l, double * checksum)checks correctness of feature map void dma_memset(void * ptr, uint8_t value, uint32_t len)fast memset function performed by DMA"},{"location":"runtime/Files/utils_8h/#functions-documentation","title":"Functions Documentation","text":""},{"location":"runtime/Files/utils_8h/#function-benchmark_get_cycle","title":"function benchmark_get_cycle","text":"<pre><code>uint32_t benchmark_get_cycle()\n</code></pre> <p>returns cycle number and injects marker to track performance </p> <p>Return: uint32_t </p>"},{"location":"runtime/Files/utils_8h/#function-snrt_dma_start_tracking","title":"function snrt_dma_start_tracking","text":"<pre><code>void snrt_dma_start_tracking()\n</code></pre> <p>start tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed </p>"},{"location":"runtime/Files/utils_8h/#function-snrt_dma_stop_tracking","title":"function snrt_dma_stop_tracking","text":"<pre><code>void snrt_dma_stop_tracking()\n</code></pre> <p>stop tracking of dma performance region. Does not have any implications on the HW. Only injects a marker in the DMA traces that can be analyzed </p>"},{"location":"runtime/Files/utils_8h/#function-check_layer","title":"function check_layer","text":"<pre><code>uint32_t check_layer(\nconst conv_layer * l,\ndouble * checksum\n)\n</code></pre> <p>checks correctness of feature map </p> <p>Parameters: </p> <ul> <li>l layer struct (Conv2d, BatchNorm, Maxpool) </li> <li>checksum checksum to compare against, reduced over input channels </li> </ul> <p>Return: uint32_t </p>"},{"location":"runtime/Files/utils_8h/#function-dma_memset","title":"function dma_memset","text":"<pre><code>void dma_memset(\nvoid * ptr,\nuint8_t value,\nuint32_t len\n)\n</code></pre> <p>fast memset function performed by DMA </p> <p>Parameters: </p> <ul> <li>ptr pointer to the start of the region </li> <li>value value to set </li> <li>len number of bytes, must be multiple of DMA bus-width </li> </ul>"},{"location":"runtime/Files/utils_8h/#source-code","title":"Source code","text":"<pre><code>// Copyright 2020 ETH Zurich and University of Bologna.\n// Licensed under the Apache License, Version 2.0, see LICENSE for details.\n// SPDX-License-Identifier: Apache-2.0\n\n#include \"layer.h\"\n#include \"snrt.h\"\n\nuint32_t benchmark_get_cycle();\n\nvoid snrt_dma_start_tracking();\n\nvoid snrt_dma_stop_tracking();\n\nuint32_t check_layer(const conv_layer* l, double* checksum);\n\nvoid dma_memset(void* ptr, uint8_t value, uint32_t len);\n</code></pre> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Modules/","title":"Modules","text":"<p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Namespaces/","title":"Namespaces","text":"<p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Pages/","title":"Pages","text":"<ul> <li>page Applications </li> <li>page Snitch BLAS Library </li> <li>page Snitch Runtime Library </li> </ul> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Pages/md_applications_README/","title":"Applications","text":"<p>This subdirectory contains some applications or benchmarks specifically implemented and optimized for Snitch.</p>"},{"location":"runtime/Pages/md_applications_README/#contents","title":"Contents","text":"<ul> <li>Data generation:<ul> <li><code>data_gen.py</code>: script to generate data and expected results for various benchmarks</li> <li><code>data</code>: output folder of <code>data_gen.py</code> which also contains the configuration to generate the data</li> </ul> </li> <li><code>src</code>:<ul> <li><code>kernels</code>: basic kernels, currently contains <code>GEMM</code>, <code>BatchNorm</code>, <code>Maxpool</code>, <code>Fusedconv</code></li> <li><code>layers</code>: wraps the kernel to form a DNN layer. Manages data-movement, synchronization, double buffering etc.</li> <li><code>utils</code>: some helpful functions for benchmarking, verification, fast <code>memset</code></li> <li><code>net_layer.c</code>: various ready tests to run layers.</li> </ul> </li> <li><code>include</code>: includes <code>layer</code> struct.</li> </ul>"},{"location":"runtime/Pages/md_applications_README/#sw-testbenches","title":"SW Testbenches","text":"<p>There are currently a few tests for various layer types. Some additional information about these tests is given below:</p> <ul> <li><code>net_maxpool.c</code>: Naive implementation of a maxpooling layer, not optimized in any way due to memory-boundness</li> <li><code>net-batchnorm.c</code>: Implementation of a batchnorm layer with SSR streams (both read and write)</li> <li><code>net-conv2d.c</code>: Implementation and tiling of a 2D convolution that can be distributed to multiple clusters. The convolution is implemented as an <code>im2col</code> transformation (performed by 2D DMA transfers) + optimized GEMM. The memory layout of input and output feature map is Height x Width x Channels. The convolution is globally parallelized over output channels. Inside a cluster, the output pixels are distributed among the cores. There is an option to load the feature map from a different cluster instead of the main memory by setting <code>cluster2cluster</code> in the layer struct to <code>1</code>. Currently only <code>fp64</code> is implemented, but the data movement for <code>fp32</code> or lower precision SIMD should be analogously.</li> <li><code>net-gemm.c</code>: Testbench to benchmark the optimized GEMM implementation for different memory layouts, dimensions and precisions.</li> <li><code>net-fusedconv.c</code>: Implementation of a fused kernel with Conv2d + BatchNorm + ReLU. The interface of the kernel is compatible with DORY. Parameters of a tile can be specified in <code>data/fusedconv_param.hjson</code>. Supported paramters are input/output dimension, padding, kernel dimension &amp; stride, flags for BatchNorm and ReLU. Further there are two additional specialized kernels 1) a CHW kernel for input layers with very few input channels, the output of this kernel is in the HWC layout again 2) A depthwise kernel</li> </ul>"},{"location":"runtime/Pages/md_applications_README/#usage","title":"Usage","text":"<p>To run a specific benchmark, first configure the dimensions and the desired precision <code>data/app_params.hjson</code>. </p> <pre><code>{\nkernel: \"GEMM\"\nM: 16,\nN: 16,\nK: 16,\nalpha: 0,\ntranspose_A: false,\ntranspose_B: true,\nprec: 16\n}\n</code></pre> <p>The file will be automatically generated with a <code>cmake</code> macro and is stored in <code>data/data_app.h</code>. The result will also be checked. Reference is a golden model written in <code>python</code> with help of the <code>torch</code>.</p> <p>The applications are compiled into a folder which can be enabled by adding <code>add_subdirectory(${SNITCH_SOFTWARE_DIR}/applications</code> to <code>CMakeLists.txt</code> in the specific <code>sw</code> folder.</p>"},{"location":"runtime/Pages/md_applications_README/#requirements","title":"Requirements","text":"<ul> <li><code>torch</code></li> </ul> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Pages/md_snBLAS_README/","title":"Snitch BLAS Library","text":"<p>This is an implementation of the Basic Linear Algebra Subprograms for the Snitch system.</p>"},{"location":"runtime/Pages/md_snBLAS_README/#usage","title":"Usage","text":"<p>The runtime library can be compiled as follows: </p> <pre><code>mkdir build\ncd build\ncmake ..\nmake\n</code></pre> <p>The tests can be executed as follows: </p> <pre><code>make test\n</code></pre> <p>Interesting CMake options that can be set via <code>-D&lt;option&gt;=&lt;value&gt;</code>:</p> <ul> <li><code>SNITCH_BANSHEE</code>: The banshee simulator binary to use for test execution.</li> <li><code>CMAKE_TOOLCHAIN_FILE</code>: The compiler toolchain configuration to use. Acceptable values:<ul> <li><code>toolchain-gcc</code> for a GNU tolchain</li> <li><code>toolchain-llvm</code> for a LLVM/Clang toolchain (coming soon)</li> <li>Your own custom <code>&lt;toolchain&gt;.cmake</code> file; see <code>../cmake/toolchain-gcc.cmake</code> for reference </li> </ul> </li> </ul> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"runtime/Pages/md_snRuntime_README/","title":"Snitch Runtime Library","text":"<p>This library implements a minimal runtime for Snitch systems, which is responsible for the following:</p> <ul> <li>Detecting the hardware configuration (cores, clusters, ISA extensions, TCDM)</li> <li>Passing a descriptor struct to the executable</li> <li>Synchronization across cores and clusters</li> <li>Team-based multithreading and work splitting</li> </ul>"},{"location":"runtime/Pages/md_snRuntime_README/#general-runtime","title":"General Runtime","text":"<p>The general runtime (<code>libsnRuntime</code>) relies on a bootloader or operating system to load the executable. This usually requires virtual memory to map the segments to the correct addresses. The general runtime does not provide any startup code in this scenario, but is more like a regular library providing some useful API.</p>"},{"location":"runtime/Pages/md_snRuntime_README/#bare-runtime","title":"Bare Runtime","text":"<p>The bare runtimes (<code>libsnRuntime-&lt;platform&gt;</code>) assumes that the executable it is being linked into will run in a bare-metal fashion with no convenient bootloader or virtual memory setup. For this scenario, the runtime provides the <code>_start</code> symbol and implements a basic crt0.</p>"},{"location":"runtime/Pages/md_snRuntime_README/#usage","title":"Usage","text":"<p>The runtime library can be compiled as follows: </p> <pre><code>mkdir build\ncd build\ncmake ..\nmake\n</code></pre> <p>The tests can be executed as follows: </p> <pre><code>make test\n</code></pre> <p>Interesting CMake options that can be set via <code>-D&lt;option&gt;=&lt;value&gt;</code>:</p> <ul> <li><code>SNITCH_BANSHEE</code>: The banshee simulator binary to use for test execution.</li> <li><code>CMAKE_TOOLCHAIN_FILE</code>: The compiler toolchain configuration to use. Acceptable values:<ul> <li><code>toolchain-gcc</code> for a GNU tolchain</li> <li><code>toolchain-llvm</code> for a LLVM/Clang toolchain (coming soon)</li> <li>Your own custom <code>&lt;toolchain&gt;.cmake</code> file; see <code>../cmake/toolchain-gcc.cmake</code> for reference</li> </ul> </li> <li><code>MEM_DRAM_ORIGIN</code>/<code>MEM_DRAM_SIZE</code>: Base address and size of the external memory used for shared data and program memory</li> </ul>"},{"location":"runtime/Pages/md_snRuntime_README/#adding-a-new-entry-to-the-device-tree","title":"Adding a new entry to the device-tree","text":"<p>On the example of adding a CLINT device:</p> <ol> <li>Add member <code>clint_base</code> to the <code>snrt_cluster_bootdata</code> struct in <code>start_cluster.c</code></li> <li>Add the same member to the <code>BootData</code> struct in <code>tb_lib.hh</code></li> <li>Add an enrty of the device in the cluster configuration <code>cluster.default.hjson</code></li> <li>Add the same member to the <code>bootdata.cc.tpl</code> template and get the value from the member added in 3.</li> <li>Generate the bootdata.cc file by running cluster-gen <code>make cluster_gen</code></li> <li>The value is now available at boot in <code>bootdata-&gt;clint_base</code></li> </ol> <p>Updated on 2023-05-04 at 14:37:44 +0000</p>"},{"location":"schema-doc/address_range-properties-address/","title":"Untitled integer in Address Range Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/address_range.schema.json#/properties/address\n</code></pre> <p>Base address of range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none address_range.schema.json*"},{"location":"schema-doc/address_range-properties-address/#address-type","title":"address Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range-properties-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/address_range-properties-length/","title":"Untitled integer in Address Range Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/address_range.schema.json#/properties/length\n</code></pre> <p>Size in bytes of range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none address_range.schema.json*"},{"location":"schema-doc/address_range-properties-length/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range-properties-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/address_range/","title":"Address Range Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/address_range.schema.json\n</code></pre> <p>Description of a generic address range</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none address_range.schema.json"},{"location":"schema-doc/address_range/#address-range-schema-type","title":"Address Range Schema Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/address_range/#address-range-schema-properties","title":"Address Range Schema Properties","text":"Property Type Required Nullable Defined by address <code>integer</code> Required cannot be null Address Range Schema length <code>integer</code> Required cannot be null Address Range Schema"},{"location":"schema-doc/address_range/#address","title":"address","text":"<p>Base address of range.</p> <p><code>address</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Address Range Schema</p> </li> </ul>"},{"location":"schema-doc/address_range/#address-type","title":"address Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/address_range/#length","title":"length","text":"<p>Size in bytes of range.</p> <p><code>length</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Address Range Schema</p> </li> </ul>"},{"location":"schema-doc/address_range/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/address_range/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/axi_tlb-properties-l1_cut_ax/","title":"Untitled boolean in AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json#/properties/l1_cut_ax\n</code></pre> <p>Insert spill register on TLB request channels, cutting timing paths.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_tlb.schema.json*"},{"location":"schema-doc/axi_tlb-properties-l1_cut_ax/#l1_cut_ax-type","title":"l1_cut_ax Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/axi_tlb-properties-l1_cut_ax/#l1_cut_ax-default-value","title":"l1_cut_ax Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/axi_tlb-properties-l1_num_entries/","title":"Untitled integer in AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json#/properties/l1_num_entries\n</code></pre> <p>Number of TLB translation entries.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_tlb.schema.json*"},{"location":"schema-doc/axi_tlb-properties-l1_num_entries/#l1_num_entries-type","title":"l1_num_entries Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb-properties-l1_num_entries/#l1_num_entries-default-value","title":"l1_num_entries Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/axi_tlb-properties-max_trans/","title":"Untitled integer in AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json#/properties/max_trans\n</code></pre> <p>Maximum outstanding transactions the TLB can handle.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_tlb.schema.json*"},{"location":"schema-doc/axi_tlb-properties-max_trans/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb-properties-max_trans/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/axi_tlb/","title":"AXI TLB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_tlb.schema.json\n</code></pre> <p>AXI TLB Properties</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none axi_tlb.schema.json"},{"location":"schema-doc/axi_tlb/#axi-tlb-schema-type","title":"AXI TLB Schema Type","text":"<p><code>object</code> (AXI TLB Schema)</p>"},{"location":"schema-doc/axi_tlb/#axi-tlb-schema-properties","title":"AXI TLB Schema Properties","text":"Property Type Required Nullable Defined by max_trans <code>integer</code> Optional cannot be null AXI TLB Schema l1_num_entries <code>integer</code> Optional cannot be null AXI TLB Schema l1_cut_ax <code>boolean</code> Optional cannot be null AXI TLB Schema"},{"location":"schema-doc/axi_tlb/#max_trans","title":"max_trans","text":"<p>Maximum outstanding transactions the TLB can handle.</p> <p><code>max_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI TLB Schema</p> </li> </ul>"},{"location":"schema-doc/axi_tlb/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/axi_tlb/#l1_num_entries","title":"l1_num_entries","text":"<p>Number of TLB translation entries.</p> <p><code>l1_num_entries</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI TLB Schema</p> </li> </ul>"},{"location":"schema-doc/axi_tlb/#l1_num_entries-type","title":"l1_num_entries Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_tlb/#l1_num_entries-default-value","title":"l1_num_entries Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/axi_tlb/#l1_cut_ax","title":"l1_cut_ax","text":"<p>Insert spill register on TLB request channels, cutting timing paths.</p> <p><code>l1_cut_ax</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI TLB Schema</p> </li> </ul>"},{"location":"schema-doc/axi_tlb/#l1_cut_ax-type","title":"l1_cut_ax Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/axi_tlb/#l1_cut_ax-default-value","title":"l1_cut_ax Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/axi_xbar-properties-fall_through/","title":"Untitled boolean in AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json#/properties/fall_through\n</code></pre> <p>Configure crossbar to be fall-through (zero latency).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_xbar.schema.json*"},{"location":"schema-doc/axi_xbar-properties-fall_through/#fall_through-type","title":"fall_through Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/axi_xbar-properties-max_mst_trans/","title":"Untitled integer in AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json#/properties/max_mst_trans\n</code></pre> <p>Maximum outstanding transaction on the master port.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_xbar.schema.json*"},{"location":"schema-doc/axi_xbar-properties-max_mst_trans/#max_mst_trans-type","title":"max_mst_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar-properties-max_mst_trans/#max_mst_trans-default-value","title":"max_mst_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar-properties-max_slv_trans/","title":"Untitled integer in AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json#/properties/max_slv_trans\n</code></pre> <p>Maximum outstanding transaction on the slave port.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none axi_xbar.schema.json*"},{"location":"schema-doc/axi_xbar-properties-max_slv_trans/#max_slv_trans-type","title":"max_slv_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar-properties-max_slv_trans/#max_slv_trans-default-value","title":"max_slv_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar/","title":"AXI Crossbar Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/axi_xbar.schema.json\n</code></pre> <p>AXI Crossbar Properties</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none axi_xbar.schema.json"},{"location":"schema-doc/axi_xbar/#axi-crossbar-schema-type","title":"AXI Crossbar Schema Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/axi_xbar/#axi-crossbar-schema-properties","title":"AXI Crossbar Schema Properties","text":"Property Type Required Nullable Defined by max_slv_trans <code>integer</code> Optional cannot be null AXI Crossbar Schema max_mst_trans <code>integer</code> Optional cannot be null AXI Crossbar Schema fall_through <code>boolean</code> Optional cannot be null AXI Crossbar Schema"},{"location":"schema-doc/axi_xbar/#max_slv_trans","title":"max_slv_trans","text":"<p>Maximum outstanding transaction on the slave port.</p> <p><code>max_slv_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI Crossbar Schema</p> </li> </ul>"},{"location":"schema-doc/axi_xbar/#max_slv_trans-type","title":"max_slv_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar/#max_slv_trans-default-value","title":"max_slv_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar/#max_mst_trans","title":"max_mst_trans","text":"<p>Maximum outstanding transaction on the master port.</p> <p><code>max_mst_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI Crossbar Schema</p> </li> </ul>"},{"location":"schema-doc/axi_xbar/#max_mst_trans-type","title":"max_mst_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/axi_xbar/#max_mst_trans-default-value","title":"max_mst_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/axi_xbar/#fall_through","title":"fall_through","text":"<p>Configure crossbar to be fall-through (zero latency).</p> <p><code>fall_through</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: AXI Crossbar Schema</p> </li> </ul>"},{"location":"schema-doc/axi_xbar/#fall_through-type","title":"fall_through Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_1/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/address_1\n</code></pre> <p>Start of HBM address region 1.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_1/#address_1-type","title":"address_1 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_1/#address_1-constraints","title":"address_1 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_2/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/address_2\n</code></pre> <p>Start of HBM address region 1.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_2/#address_2-type","title":"address_2 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-address_2/#address_2-constraints","title":"address_2 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/","title":"Untitled undefined type in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/cfg_regions\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#cfg_regions-type","title":"cfg_regions Type","text":"<p>unknown</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by top <code>object</code> Optional cannot be null Occamy System Schema phy <code>object</code> Optional cannot be null Occamy System Schema seq <code>object</code> Optional cannot be null Occamy System Schema ctrl <code>object</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#top","title":"top","text":"<p>Description of a generic address range</p> <p><code>top</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#top-type","title":"top Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#phy","title":"phy","text":"<p>Description of a generic address range</p> <p><code>phy</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#phy-type","title":"phy Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#seq","title":"seq","text":"<p>Description of a generic address range</p> <p><code>seq</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#seq-type","title":"seq Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#ctrl","title":"ctrl","text":"<p>Description of a generic address range</p> <p><code>ctrl</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-cfg_regions/#ctrl-type","title":"ctrl Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-channel_size/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/channel_size\n</code></pre> <p>Size of single HBM channel region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-channel_size/#channel_size-type","title":"channel_size Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-channel_size/#channel_size-constraints","title":"channel_size Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_address_0/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/nr_channels_address_0\n</code></pre> <p>Number of lower HBM channels accessible over address region 1</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_address_0/#nr_channels_address_0-type","title":"nr_channels_address_0 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_address_0/#nr_channels_address_0-constraints","title":"nr_channels_address_0 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_total/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm/properties/nr_channels_total\n</code></pre> <p>Total number of HBM channels.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_total/#nr_channels_total-type","title":"nr_channels_total Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface-properties-nr_channels_total/#nr_channels_total-constraints","title":"nr_channels_total Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/","title":"Configuration of external HBM interface Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/hbm\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#hbm-type","title":"hbm Type","text":"<p><code>object</code> (Configuration of external HBM interface)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#configuration-of-external-hbm-interface-properties","title":"Configuration of external HBM interface Properties","text":"Property Type Required Nullable Defined by address_1 <code>integer</code> Optional cannot be null Occamy System Schema address_2 <code>integer</code> Optional cannot be null Occamy System Schema channel_size <code>integer</code> Optional cannot be null Occamy System Schema nr_channels_total <code>integer</code> Optional cannot be null Occamy System Schema nr_channels_address_0 <code>integer</code> Optional cannot be null Occamy System Schema cfg_regions Not specified Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_1","title":"address_1","text":"<p>Start of HBM address region 1.</p> <p><code>address_1</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_1-type","title":"address_1 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_1-constraints","title":"address_1 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_2","title":"address_2","text":"<p>Start of HBM address region 1.</p> <p><code>address_2</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_2-type","title":"address_2 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#address_2-constraints","title":"address_2 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#channel_size","title":"channel_size","text":"<p>Size of single HBM channel region.</p> <p><code>channel_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#channel_size-type","title":"channel_size Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#channel_size-constraints","title":"channel_size Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_total","title":"nr_channels_total","text":"<p>Total number of HBM channels.</p> <p><code>nr_channels_total</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_total-type","title":"nr_channels_total Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_total-constraints","title":"nr_channels_total Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_address_0","title":"nr_channels_address_0","text":"<p>Number of lower HBM channels accessible over address region 1</p> <p><code>nr_channels_address_0</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_address_0-type","title":"nr_channels_address_0 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#nr_channels_address_0-constraints","title":"nr_channels_address_0 Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#cfg_regions","title":"cfg_regions","text":"<p><code>cfg_regions</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-hbm-interface/#cfg_regions-type","title":"cfg_regions Type","text":"<p>unknown</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_io/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie/properties/address_io\n</code></pre> <p>Base address of PCIe IO range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_io/#address_io-type","title":"address_io Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_io/#address_io-constraints","title":"address_io Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_mm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie/properties/address_mm\n</code></pre> <p>Base address of PCIe memory-mapped range.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_mm/#address_mm-type","title":"address_mm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-address_mm/#address_mm-constraints","title":"address_mm Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-length/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie/properties/length\n</code></pre> <p>Size in bytes of all PCIe ranges.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-length/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port-properties-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/","title":"Configuration of external PCIe port Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pcie\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#pcie-type","title":"pcie Type","text":"<p><code>object</code> (Configuration of external PCIe port)</p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#configuration-of-external-pcie-port-properties","title":"Configuration of external PCIe port Properties","text":"Property Type Required Nullable Defined by address_io <code>integer</code> Optional cannot be null Occamy System Schema address_mm <code>integer</code> Optional cannot be null Occamy System Schema length <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_io","title":"address_io","text":"<p>Base address of PCIe IO range.</p> <p><code>address_io</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_io-type","title":"address_io Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_io-constraints","title":"address_io Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_mm","title":"address_mm","text":"<p>Base address of PCIe memory-mapped range.</p> <p><code>address_mm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_mm-type","title":"address_mm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#address_mm-constraints","title":"address_mm Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#length","title":"length","text":"<p>Size in bytes of all PCIe ranges.</p> <p><code>length</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#length-type","title":"length Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-configuration-of-external-pcie-port/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-is_remote_quadrant/","title":"Untitled boolean in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/is_remote_quadrant\n</code></pre> <p>Set if this is a remote quadrant. Only quadrant ant remote interconnect is generated</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-is_remote_quadrant/#is_remote_quadrant-type","title":"is_remote_quadrant Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-narrow_xbar_slv_id_width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/narrow_xbar_slv_id_width\n</code></pre> <p>ID width of narrow crossbar slave ports.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/atomic_adapter_narrow\n</code></pre> <p>narrow spm atomic adapter internal cuts</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow/#atomic_adapter_narrow-type","title":"atomic_adapter_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow/#atomic_adapter_narrow-default-value","title":"atomic_adapter_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/atomic_adapter_narrow_wide\n</code></pre> <p>narrow_to_wide atomic adapter internal cuts</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow_wide/#atomic_adapter_narrow_wide-type","title":"atomic_adapter_narrow_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-atomic_adapter_narrow_wide/#atomic_adapter_narrow_wide-default-value","title":"atomic_adapter_narrow_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-hbmx_to_hbm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/hbmx_to_hbm\n</code></pre> <p>hbmx -&gt; hbm</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-hbmx_to_hbm/#hbmx_to_hbm-type","title":"hbmx_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-hbmx_to_hbm/#hbmx_to_hbm-default-value","title":"hbmx_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-inter_to_quad/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/inter_to_quad\n</code></pre> <p>inter xbar -&gt; quad</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-inter_to_quad/#inter_to_quad-type","title":"inter_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-inter_to_quad/#inter_to_quad-default-value","title":"inter_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_hbi/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_and_hbi\n</code></pre> <p>hbi &lt;-&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_hbi/#narrow_and_hbi-type","title":"narrow_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_hbi/#narrow_and_hbi-default-value","title":"narrow_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_pcie/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_and_pcie\n</code></pre> <p>PCIe in and out</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_pcie/#narrow_and_pcie-type","title":"narrow_and_pcie Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_pcie/#narrow_and_pcie-default-value","title":"narrow_and_pcie Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_and_wide\n</code></pre> <p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_and_wide/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_conv_to_spm_narrow\n</code></pre> <p>narrow -&gt; SPM post atomic adapter</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow/#narrow_conv_to_spm_narrow-type","title":"narrow_conv_to_spm_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow/#narrow_conv_to_spm_narrow-default-value","title":"narrow_conv_to_spm_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow_pre/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_conv_to_spm_narrow_pre\n</code></pre> <p>narrow -&gt; SPM pre atomic adapter</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow_pre/#narrow_conv_to_spm_narrow_pre-type","title":"narrow_conv_to_spm_narrow_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_conv_to_spm_narrow_pre/#narrow_conv_to_spm_narrow_pre-default-value","title":"narrow_conv_to_spm_narrow_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_cva6/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_to_cva6\n</code></pre> <p>narrow -&gt; cva6</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_cva6/#narrow_to_cva6-type","title":"narrow_to_cva6 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_cva6/#narrow_to_cva6-default-value","title":"narrow_to_cva6 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_quad/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/narrow_to_quad\n</code></pre> <p>narrow xbar -&gt; quad</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_quad/#narrow_to_quad-type","title":"narrow_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-narrow_to_quad/#narrow_to_quad-default-value","title":"narrow_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite\n</code></pre> <p>soc narrow -&gt; periph axilite</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite/#periph_axi_lite-type","title":"periph_axi_lite Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite/#periph_axi_lite-default-value","title":"periph_axi_lite Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow\n</code></pre> <p>soc narrow -&gt; periph regbus</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow/#periph_axi_lite_narrow-type","title":"periph_axi_lite_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow/#periph_axi_lite_narrow-default-value","title":"periph_axi_lite_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_bootrom_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_bootrom_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for bootrom_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_bootrom_cfg/#periph_axi_lite_narrow_bootrom_cfg-type","title":"periph_axi_lite_narrow_bootrom_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_bootrom_cfg/#periph_axi_lite_narrow_bootrom_cfg-default-value","title":"periph_axi_lite_narrow_bootrom_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_chip_ctrl_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_chip_ctrl_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for chip_ctrl_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_chip_ctrl_cfg/#periph_axi_lite_narrow_chip_ctrl_cfg-type","title":"periph_axi_lite_narrow_chip_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_chip_ctrl_cfg/#periph_axi_lite_narrow_chip_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_chip_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_clint_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_clint_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for clint_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_clint_cfg/#periph_axi_lite_narrow_clint_cfg-type","title":"periph_axi_lite_narrow_clint_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_clint_cfg/#periph_axi_lite_narrow_clint_cfg-default-value","title":"periph_axi_lite_narrow_clint_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_hbm2e_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_fll_hbm2e_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for fll_hbm2e_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_hbm2e_cfg/#periph_axi_lite_narrow_fll_hbm2e_cfg-type","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_hbm2e_cfg/#periph_axi_lite_narrow_fll_hbm2e_cfg-default-value","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_periph_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_fll_periph_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for fll_periph_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_periph_cfg/#periph_axi_lite_narrow_fll_periph_cfg-type","title":"periph_axi_lite_narrow_fll_periph_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_periph_cfg/#periph_axi_lite_narrow_fll_periph_cfg-default-value","title":"periph_axi_lite_narrow_fll_periph_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_system_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_fll_system_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for fll_system_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_system_cfg/#periph_axi_lite_narrow_fll_system_cfg-type","title":"periph_axi_lite_narrow_fll_system_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_fll_system_cfg/#periph_axi_lite_narrow_fll_system_cfg-default-value","title":"periph_axi_lite_narrow_fll_system_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_gpio_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_gpio_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for gpio_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_gpio_cfg/#periph_axi_lite_narrow_gpio_cfg-type","title":"periph_axi_lite_narrow_gpio_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_gpio_cfg/#periph_axi_lite_narrow_gpio_cfg-default-value","title":"periph_axi_lite_narrow_gpio_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_narrow_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbi_narrow_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbi_narrow_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_narrow_cfg/#periph_axi_lite_narrow_hbi_narrow_cfg-type","title":"periph_axi_lite_narrow_hbi_narrow_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_narrow_cfg/#periph_axi_lite_narrow_hbi_narrow_cfg-default-value","title":"periph_axi_lite_narrow_hbi_narrow_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_wide_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbi_wide_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbi_wide_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_wide_cfg/#periph_axi_lite_narrow_hbi_wide_cfg-type","title":"periph_axi_lite_narrow_hbi_wide_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbi_wide_cfg/#periph_axi_lite_narrow_hbi_wide_cfg-default-value","title":"periph_axi_lite_narrow_hbi_wide_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbm_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbm_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_cfg/#periph_axi_lite_narrow_hbm_cfg-type","title":"periph_axi_lite_narrow_hbm_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_cfg/#periph_axi_lite_narrow_hbm_cfg-default-value","title":"periph_axi_lite_narrow_hbm_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_xbar_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_hbm_xbar_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for hbm_xbar_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_xbar_cfg/#periph_axi_lite_narrow_hbm_xbar_cfg-type","title":"periph_axi_lite_narrow_hbm_xbar_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_hbm_xbar_cfg/#periph_axi_lite_narrow_hbm_xbar_cfg-default-value","title":"periph_axi_lite_narrow_hbm_xbar_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_i2c_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_i2c_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for i2c_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_i2c_cfg/#periph_axi_lite_narrow_i2c_cfg-type","title":"periph_axi_lite_narrow_i2c_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_i2c_cfg/#periph_axi_lite_narrow_i2c_cfg-default-value","title":"periph_axi_lite_narrow_i2c_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_pcie_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_pcie_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for pcie_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_pcie_cfg/#periph_axi_lite_narrow_pcie_cfg-type","title":"periph_axi_lite_narrow_pcie_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_pcie_cfg/#periph_axi_lite_narrow_pcie_cfg-default-value","title":"periph_axi_lite_narrow_pcie_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_plic_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_plic_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for plic_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_plic_cfg/#periph_axi_lite_narrow_plic_cfg-type","title":"periph_axi_lite_narrow_plic_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_plic_cfg/#periph_axi_lite_narrow_plic_cfg-default-value","title":"periph_axi_lite_narrow_plic_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_soc_ctrl_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_soc_ctrl_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for soc_ctrl_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_soc_ctrl_cfg/#periph_axi_lite_narrow_soc_ctrl_cfg-type","title":"periph_axi_lite_narrow_soc_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_soc_ctrl_cfg/#periph_axi_lite_narrow_soc_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_soc_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_spim_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_spim_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for spim_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_spim_cfg/#periph_axi_lite_narrow_spim_cfg-type","title":"periph_axi_lite_narrow_spim_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_spim_cfg/#periph_axi_lite_narrow_spim_cfg-default-value","title":"periph_axi_lite_narrow_spim_cfg Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_timer_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_timer_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for timer_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_timer_cfg/#periph_axi_lite_narrow_timer_cfg-type","title":"periph_axi_lite_narrow_timer_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_timer_cfg/#periph_axi_lite_narrow_timer_cfg-default-value","title":"periph_axi_lite_narrow_timer_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_uart_cfg/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/periph_axi_lite_narrow_uart_cfg\n</code></pre> <p>axi lite narrow cuts before regbus translation for uart_cfg</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_uart_cfg/#periph_axi_lite_narrow_uart_cfg-type","title":"periph_axi_lite_narrow_uart_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-periph_axi_lite_narrow_uart_cfg/#periph_axi_lite_narrow_uart_cfg-default-value","title":"periph_axi_lite_narrow_uart_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_hbmx/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/pre_to_hbmx\n</code></pre> <p>pre xbar -&gt; hbm xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_hbmx/#pre_to_hbmx-type","title":"pre_to_hbmx Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_hbmx/#pre_to_hbmx-default-value","title":"pre_to_hbmx Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_inter/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/pre_to_inter\n</code></pre> <p>pre xbar -&gt; inter xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_inter/#pre_to_inter-type","title":"pre_to_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-pre_to_inter/#pre_to_inter-default-value","title":"pre_to_inter Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_narrow/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/quad_to_narrow\n</code></pre> <p>quad -&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_narrow/#quad_to_narrow-type","title":"quad_to_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_narrow/#quad_to_narrow-default-value","title":"quad_to_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_pre/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/quad_to_pre\n</code></pre> <p>quad -&gt; pre xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_pre/#quad_to_pre-type","title":"quad_to_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-quad_to_pre/#quad_to_pre-default-value","title":"quad_to_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_hbi/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_and_hbi\n</code></pre> <p>hbi &lt;-&gt; wide xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_hbi/#wide_and_hbi-type","title":"wide_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_hbi/#wide_and_hbi-default-value","title":"wide_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_inter/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_and_inter\n</code></pre> <p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_conv_to_spm_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_conv_to_spm_wide\n</code></pre> <p>wide xbar -&gt; wide spm</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_conv_to_spm_wide/#wide_conv_to_spm_wide-type","title":"wide_conv_to_spm_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_conv_to_spm_wide/#wide_conv_to_spm_wide-default-value","title":"wide_conv_to_spm_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_hbm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_to_hbm\n</code></pre> <p>wide xbar -&gt; hbm xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>6\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_wide_zero_mem/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts/properties/wide_to_wide_zero_mem\n</code></pre> <p>wide xbar -&gt; wide zero memory</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus-properties-wide_to_wide_zero_mem/#wide_to_wide_zero_mem-type","title":"wide_to_wide_zero_mem Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/","title":"Number of cuts on the AXI bus Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/cuts\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#cuts-type","title":"cuts Type","text":"<p><code>object</code> (Number of cuts on the AXI bus)</p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#number-of-cuts-on-the-axi-bus-properties","title":"Number of cuts on the AXI bus Properties","text":"Property Type Required Nullable Defined by narrow_to_quad <code>integer</code> Optional cannot be null Occamy System Schema quad_to_narrow <code>integer</code> Optional cannot be null Occamy System Schema quad_to_pre <code>integer</code> Optional cannot be null Occamy System Schema pre_to_inter <code>integer</code> Optional cannot be null Occamy System Schema inter_to_quad <code>integer</code> Optional cannot be null Occamy System Schema narrow_to_cva6 <code>integer</code> Optional cannot be null Occamy System Schema narrow_conv_to_spm_narrow_pre <code>integer</code> Optional cannot be null Occamy System Schema narrow_conv_to_spm_narrow <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_pcie <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_wide <code>integer</code> Optional cannot be null Occamy System Schema wide_conv_to_spm_wide <code>integer</code> Optional cannot be null Occamy System Schema wide_to_wide_zero_mem <code>integer</code> Optional cannot be null Occamy System Schema wide_to_hbm <code>integer</code> Optional cannot be null Occamy System Schema wide_and_inter <code>integer</code> Optional cannot be null Occamy System Schema wide_and_hbi <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_hbi <code>integer</code> Optional cannot be null Occamy System Schema pre_to_hbmx <code>integer</code> Optional cannot be null Occamy System Schema hbmx_to_hbm <code>integer</code> Optional cannot be null Occamy System Schema atomic_adapter_narrow <code>integer</code> Optional cannot be null Occamy System Schema atomic_adapter_narrow_wide <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbm_xbar_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbi_wide_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbi_narrow_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_pcie_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_hbm_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_clint_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_soc_ctrl_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_chip_ctrl_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_uart_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_bootrom_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_fll_system_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_fll_periph_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_fll_hbm2e_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_plic_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_spim_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_gpio_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_i2c_cfg <code>integer</code> Optional cannot be null Occamy System Schema periph_axi_lite_narrow_timer_cfg <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_quad","title":"narrow_to_quad","text":"<p>narrow xbar -&gt; quad</p> <p><code>narrow_to_quad</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_quad-type","title":"narrow_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_quad-default-value","title":"narrow_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_narrow","title":"quad_to_narrow","text":"<p>quad -&gt; narrow xbar</p> <p><code>quad_to_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_narrow-type","title":"quad_to_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_narrow-default-value","title":"quad_to_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_pre","title":"quad_to_pre","text":"<p>quad -&gt; pre xbar</p> <p><code>quad_to_pre</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_pre-type","title":"quad_to_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#quad_to_pre-default-value","title":"quad_to_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_inter","title":"pre_to_inter","text":"<p>pre xbar -&gt; inter xbar</p> <p><code>pre_to_inter</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_inter-type","title":"pre_to_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_inter-default-value","title":"pre_to_inter Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#inter_to_quad","title":"inter_to_quad","text":"<p>inter xbar -&gt; quad</p> <p><code>inter_to_quad</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#inter_to_quad-type","title":"inter_to_quad Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#inter_to_quad-default-value","title":"inter_to_quad Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_cva6","title":"narrow_to_cva6","text":"<p>narrow -&gt; cva6</p> <p><code>narrow_to_cva6</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_cva6-type","title":"narrow_to_cva6 Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_to_cva6-default-value","title":"narrow_to_cva6 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow_pre","title":"narrow_conv_to_spm_narrow_pre","text":"<p>narrow -&gt; SPM pre atomic adapter</p> <p><code>narrow_conv_to_spm_narrow_pre</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow_pre-type","title":"narrow_conv_to_spm_narrow_pre Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow_pre-default-value","title":"narrow_conv_to_spm_narrow_pre Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow","title":"narrow_conv_to_spm_narrow","text":"<p>narrow -&gt; SPM post atomic adapter</p> <p><code>narrow_conv_to_spm_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow-type","title":"narrow_conv_to_spm_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_conv_to_spm_narrow-default-value","title":"narrow_conv_to_spm_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_pcie","title":"narrow_and_pcie","text":"<p>PCIe in and out</p> <p><code>narrow_and_pcie</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_pcie-type","title":"narrow_and_pcie Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_pcie-default-value","title":"narrow_and_pcie Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_wide","title":"narrow_and_wide","text":"<p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> <p><code>narrow_and_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_conv_to_spm_wide","title":"wide_conv_to_spm_wide","text":"<p>wide xbar -&gt; wide spm</p> <p><code>wide_conv_to_spm_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_conv_to_spm_wide-type","title":"wide_conv_to_spm_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_conv_to_spm_wide-default-value","title":"wide_conv_to_spm_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_wide_zero_mem","title":"wide_to_wide_zero_mem","text":"<p>wide xbar -&gt; wide zero memory</p> <p><code>wide_to_wide_zero_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_wide_zero_mem-type","title":"wide_to_wide_zero_mem Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_hbm","title":"wide_to_hbm","text":"<p>wide xbar -&gt; hbm xbar</p> <p><code>wide_to_hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>6\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_inter","title":"wide_and_inter","text":"<p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> <p><code>wide_and_inter</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_hbi","title":"wide_and_hbi","text":"<p>hbi &lt;-&gt; wide xbar</p> <p><code>wide_and_hbi</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_hbi-type","title":"wide_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#wide_and_hbi-default-value","title":"wide_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_hbi","title":"narrow_and_hbi","text":"<p>hbi &lt;-&gt; narrow xbar</p> <p><code>narrow_and_hbi</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_hbi-type","title":"narrow_and_hbi Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#narrow_and_hbi-default-value","title":"narrow_and_hbi Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_hbmx","title":"pre_to_hbmx","text":"<p>pre xbar -&gt; hbm xbar</p> <p><code>pre_to_hbmx</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_hbmx-type","title":"pre_to_hbmx Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#pre_to_hbmx-default-value","title":"pre_to_hbmx Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#hbmx_to_hbm","title":"hbmx_to_hbm","text":"<p>hbmx -&gt; hbm</p> <p><code>hbmx_to_hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#hbmx_to_hbm-type","title":"hbmx_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#hbmx_to_hbm-default-value","title":"hbmx_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow","title":"atomic_adapter_narrow","text":"<p>narrow spm atomic adapter internal cuts</p> <p><code>atomic_adapter_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow-type","title":"atomic_adapter_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow-default-value","title":"atomic_adapter_narrow Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow_wide","title":"atomic_adapter_narrow_wide","text":"<p>narrow_to_wide atomic adapter internal cuts</p> <p><code>atomic_adapter_narrow_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow_wide-type","title":"atomic_adapter_narrow_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#atomic_adapter_narrow_wide-default-value","title":"atomic_adapter_narrow_wide Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow","title":"periph_axi_lite_narrow","text":"<p>soc narrow -&gt; periph regbus</p> <p><code>periph_axi_lite_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow-type","title":"periph_axi_lite_narrow Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow-default-value","title":"periph_axi_lite_narrow Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite","title":"periph_axi_lite","text":"<p>soc narrow -&gt; periph axilite</p> <p><code>periph_axi_lite</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite-type","title":"periph_axi_lite Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite-default-value","title":"periph_axi_lite Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_xbar_cfg","title":"periph_axi_lite_narrow_hbm_xbar_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbm_xbar_cfg</p> <p><code>periph_axi_lite_narrow_hbm_xbar_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_xbar_cfg-type","title":"periph_axi_lite_narrow_hbm_xbar_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_xbar_cfg-default-value","title":"periph_axi_lite_narrow_hbm_xbar_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_wide_cfg","title":"periph_axi_lite_narrow_hbi_wide_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbi_wide_cfg</p> <p><code>periph_axi_lite_narrow_hbi_wide_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_wide_cfg-type","title":"periph_axi_lite_narrow_hbi_wide_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_wide_cfg-default-value","title":"periph_axi_lite_narrow_hbi_wide_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_narrow_cfg","title":"periph_axi_lite_narrow_hbi_narrow_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbi_narrow_cfg</p> <p><code>periph_axi_lite_narrow_hbi_narrow_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_narrow_cfg-type","title":"periph_axi_lite_narrow_hbi_narrow_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbi_narrow_cfg-default-value","title":"periph_axi_lite_narrow_hbi_narrow_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_pcie_cfg","title":"periph_axi_lite_narrow_pcie_cfg","text":"<p>axi lite narrow cuts before regbus translation for pcie_cfg</p> <p><code>periph_axi_lite_narrow_pcie_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_pcie_cfg-type","title":"periph_axi_lite_narrow_pcie_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_pcie_cfg-default-value","title":"periph_axi_lite_narrow_pcie_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_cfg","title":"periph_axi_lite_narrow_hbm_cfg","text":"<p>axi lite narrow cuts before regbus translation for hbm_cfg</p> <p><code>periph_axi_lite_narrow_hbm_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_cfg-type","title":"periph_axi_lite_narrow_hbm_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_hbm_cfg-default-value","title":"periph_axi_lite_narrow_hbm_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_clint_cfg","title":"periph_axi_lite_narrow_clint_cfg","text":"<p>axi lite narrow cuts before regbus translation for clint_cfg</p> <p><code>periph_axi_lite_narrow_clint_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_clint_cfg-type","title":"periph_axi_lite_narrow_clint_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_clint_cfg-default-value","title":"periph_axi_lite_narrow_clint_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_soc_ctrl_cfg","title":"periph_axi_lite_narrow_soc_ctrl_cfg","text":"<p>axi lite narrow cuts before regbus translation for soc_ctrl_cfg</p> <p><code>periph_axi_lite_narrow_soc_ctrl_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_soc_ctrl_cfg-type","title":"periph_axi_lite_narrow_soc_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_soc_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_soc_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_chip_ctrl_cfg","title":"periph_axi_lite_narrow_chip_ctrl_cfg","text":"<p>axi lite narrow cuts before regbus translation for chip_ctrl_cfg</p> <p><code>periph_axi_lite_narrow_chip_ctrl_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_chip_ctrl_cfg-type","title":"periph_axi_lite_narrow_chip_ctrl_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_chip_ctrl_cfg-default-value","title":"periph_axi_lite_narrow_chip_ctrl_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_uart_cfg","title":"periph_axi_lite_narrow_uart_cfg","text":"<p>axi lite narrow cuts before regbus translation for uart_cfg</p> <p><code>periph_axi_lite_narrow_uart_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_uart_cfg-type","title":"periph_axi_lite_narrow_uart_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_uart_cfg-default-value","title":"periph_axi_lite_narrow_uart_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_bootrom_cfg","title":"periph_axi_lite_narrow_bootrom_cfg","text":"<p>axi lite narrow cuts before regbus translation for bootrom_cfg</p> <p><code>periph_axi_lite_narrow_bootrom_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_bootrom_cfg-type","title":"periph_axi_lite_narrow_bootrom_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_bootrom_cfg-default-value","title":"periph_axi_lite_narrow_bootrom_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_system_cfg","title":"periph_axi_lite_narrow_fll_system_cfg","text":"<p>axi lite narrow cuts before regbus translation for fll_system_cfg</p> <p><code>periph_axi_lite_narrow_fll_system_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_system_cfg-type","title":"periph_axi_lite_narrow_fll_system_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_system_cfg-default-value","title":"periph_axi_lite_narrow_fll_system_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_periph_cfg","title":"periph_axi_lite_narrow_fll_periph_cfg","text":"<p>axi lite narrow cuts before regbus translation for fll_periph_cfg</p> <p><code>periph_axi_lite_narrow_fll_periph_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_periph_cfg-type","title":"periph_axi_lite_narrow_fll_periph_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_periph_cfg-default-value","title":"periph_axi_lite_narrow_fll_periph_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_hbm2e_cfg","title":"periph_axi_lite_narrow_fll_hbm2e_cfg","text":"<p>axi lite narrow cuts before regbus translation for fll_hbm2e_cfg</p> <p><code>periph_axi_lite_narrow_fll_hbm2e_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_hbm2e_cfg-type","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_fll_hbm2e_cfg-default-value","title":"periph_axi_lite_narrow_fll_hbm2e_cfg Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_plic_cfg","title":"periph_axi_lite_narrow_plic_cfg","text":"<p>axi lite narrow cuts before regbus translation for plic_cfg</p> <p><code>periph_axi_lite_narrow_plic_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_plic_cfg-type","title":"periph_axi_lite_narrow_plic_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_plic_cfg-default-value","title":"periph_axi_lite_narrow_plic_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_spim_cfg","title":"periph_axi_lite_narrow_spim_cfg","text":"<p>axi lite narrow cuts before regbus translation for spim_cfg</p> <p><code>periph_axi_lite_narrow_spim_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_spim_cfg-type","title":"periph_axi_lite_narrow_spim_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_spim_cfg-default-value","title":"periph_axi_lite_narrow_spim_cfg Default Value","text":"<p>The default value is:</p> <pre><code>32\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_gpio_cfg","title":"periph_axi_lite_narrow_gpio_cfg","text":"<p>axi lite narrow cuts before regbus translation for gpio_cfg</p> <p><code>periph_axi_lite_narrow_gpio_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_gpio_cfg-type","title":"periph_axi_lite_narrow_gpio_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_gpio_cfg-default-value","title":"periph_axi_lite_narrow_gpio_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_i2c_cfg","title":"periph_axi_lite_narrow_i2c_cfg","text":"<p>axi lite narrow cuts before regbus translation for i2c_cfg</p> <p><code>periph_axi_lite_narrow_i2c_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_i2c_cfg-type","title":"periph_axi_lite_narrow_i2c_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_i2c_cfg-default-value","title":"periph_axi_lite_narrow_i2c_cfg Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_timer_cfg","title":"periph_axi_lite_narrow_timer_cfg","text":"<p>axi lite narrow cuts before regbus translation for timer_cfg</p> <p><code>periph_axi_lite_narrow_timer_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_timer_cfg-type","title":"periph_axi_lite_narrow_timer_cfg Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-cuts-on-the-axi-bus/#periph_axi_lite_narrow_timer_cfg-default-value","title":"periph_axi_lite_narrow_timer_cfg Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-narrow_and_wide/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/narrow_and_wide\n</code></pre> <p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-narrow_and_wide/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-narrow_and_wide/#narrow_and_wide-default-value","title":"narrow_and_wide Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-rmq/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/rmq\n</code></pre> <p>Remote Quadrant mux/demux</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-rmq/#rmq-type","title":"rmq Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-rmq/#rmq-default-value","title":"rmq Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_and_inter/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/wide_and_inter\n</code></pre> <p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_and_inter/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_to_hbm/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns/properties/wide_to_hbm\n</code></pre> <p>wide xbar -&gt; hbm xbar</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus-properties-wide_to_hbm/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/","title":"Number of outstanding transactions on the AXI bus Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/txns\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#txns-type","title":"txns Type","text":"<p><code>object</code> (Number of outstanding transactions on the AXI bus)</p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#number-of-outstanding-transactions-on-the-axi-bus-properties","title":"Number of outstanding transactions on the AXI bus Properties","text":"Property Type Required Nullable Defined by wide_and_inter <code>integer</code> Optional cannot be null Occamy System Schema wide_to_hbm <code>integer</code> Optional cannot be null Occamy System Schema narrow_and_wide <code>integer</code> Optional cannot be null Occamy System Schema rmq <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_and_inter","title":"wide_and_inter","text":"<p>inter xbar -&gt; wide xbar &amp; wide xbar -&gt; inter xbar</p> <p><code>wide_and_inter</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_and_inter-type","title":"wide_and_inter Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_and_inter-default-value","title":"wide_and_inter Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_to_hbm","title":"wide_to_hbm","text":"<p>wide xbar -&gt; hbm xbar</p> <p><code>wide_to_hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_to_hbm-type","title":"wide_to_hbm Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#wide_to_hbm-default-value","title":"wide_to_hbm Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#narrow_and_wide","title":"narrow_and_wide","text":"<p>narrow xbar -&gt; wide xbar &amp; wide xbar -&gt; narrow xbar</p> <p><code>narrow_and_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#narrow_and_wide-type","title":"narrow_and_wide Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#narrow_and_wide-default-value","title":"narrow_and_wide Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#rmq","title":"rmq","text":"<p>Remote Quadrant mux/demux</p> <p><code>rmq</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#rmq-type","title":"rmq Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-number-of-outstanding-transactions-on-the-axi-bus/#rmq-default-value","title":"rmq Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-number-of-s1-quadrants/","title":"Number of S1 Quadrants Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/nr_s1_quadrant\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-number-of-s1-quadrants/#nr_s1_quadrant-type","title":"nr_s1_quadrant Type","text":"<p><code>integer</code> (Number of S1 Quadrants)</p>"},{"location":"schema-doc/occamy-properties-number-of-s1-quadrants/#nr_s1_quadrant-default-value","title":"nr_s1_quadrant Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy-properties-peripherals-schema/","title":"Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/peripherals\n</code></pre> <p>Description of an a peripheral sub-system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-peripherals-schema/#peripherals-type","title":"peripherals Type","text":"<p><code>object</code> (Peripherals Schema)</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#peripherals-schema-properties","title":"Peripherals Schema Properties","text":"Property Type Required Nullable Defined by rom <code>object</code> Optional cannot be null Peripherals Schema clint <code>object</code> Optional cannot be null Peripherals Schema axi_lite_peripherals <code>array</code> Optional cannot be null Peripherals Schema regbus_peripherals <code>array</code> Optional cannot be null Peripherals Schema"},{"location":"schema-doc/occamy-properties-peripherals-schema/#rom","title":"rom","text":"<p>Read-only memory from which all harts of the system start to boot.</p> <p><code>rom</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#rom-type","title":"rom Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#rom-default-value","title":"rom Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"address\": 16777216,\n\"length\": 131072\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#clint","title":"clint","text":"<p>Core-local Interrupt Controller (CLINT) peripheral.</p> <p><code>clint</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#clint-type","title":"clint Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#clint-default-value","title":"clint Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"address\": 67108864,\n\"length\": 1048576\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#axi_lite_peripherals","title":"axi_lite_peripherals","text":"<p><code>axi_lite_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#axi_lite_peripherals-type","title":"axi_lite_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#axi_lite_peripherals-constraints","title":"axi_lite_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#regbus_peripherals","title":"regbus_peripherals","text":"<p><code>regbus_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#regbus_peripherals-type","title":"regbus_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/occamy-properties-peripherals-schema/#regbus_peripherals-constraints","title":"regbus_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/occamy-properties-pre_xbar_slv_id_width_no_rocache/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/pre_xbar_slv_id_width_no_rocache\n</code></pre> <p>ID width of quadrant pre-crossbar slave ports assuming no read-only cache.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-pre_xbar_slv_id_width_no_rocache/#pre_xbar_slv_id_width_no_rocache-type","title":"pre_xbar_slv_id_width_no_rocache Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-pre_xbar_slv_id_width_no_rocache/#pre_xbar_slv_id_width_no_rocache-default-value","title":"pre_xbar_slv_id_width_no_rocache Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_cluster_cores/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants/items/properties/nr_cluster_cores\n</code></pre> <p>Number of cores in a cluster</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_cluster_cores/#nr_cluster_cores-type","title":"nr_cluster_cores Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_cluster_cores/#nr_cluster_cores-default-value","title":"nr_cluster_cores Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_clusters/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants/items/properties/nr_clusters\n</code></pre> <p>Number of clusters in an S1 quadrant.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_clusters/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description-properties-nr_clusters/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/","title":"Remote Quadrant Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants/items\n</code></pre> <p>Description of a remote quadrant</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#items-type","title":"items Type","text":"<p><code>object</code> (Remote Quadrant Description)</p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#remote-quadrant-description-properties","title":"Remote Quadrant Description Properties","text":"Property Type Required Nullable Defined by nr_clusters <code>integer</code> Optional cannot be null Occamy System Schema nr_cluster_cores <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_clusters","title":"nr_clusters","text":"<p>Number of clusters in an S1 quadrant.</p> <p><code>nr_clusters</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_cluster_cores","title":"nr_cluster_cores","text":"<p>Number of cores in a cluster</p> <p><code>nr_cluster_cores</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_cluster_cores-type","title":"nr_cluster_cores Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-remote-quadrants-remote-quadrant-description/#nr_cluster_cores-default-value","title":"nr_cluster_cores Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy-properties-remote-quadrants/","title":"Remote Quadrants Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/remote_quadrants\n</code></pre> <p>List of attached remote quadrants</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-remote-quadrants/#remote_quadrants-type","title":"remote_quadrants Type","text":"<p><code>object[]</code> (Remote Quadrant Description)</p>"},{"location":"schema-doc/occamy-properties-remote-quadrants/#remote_quadrants-constraints","title":"remote_quadrants Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_addr/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/cfg_base_addr\n</code></pre> <p>Base address of the quadrant configuration region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_addr/#cfg_base_addr-type","title":"cfg_base_addr Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_addr/#cfg_base_addr-default-value","title":"cfg_base_addr Default Value","text":"<p>The default value is:</p> <pre><code>184549376\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_offset/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/cfg_base_offset\n</code></pre> <p>Allocated size and offset of each quadrant configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_offset/#cfg_base_offset-type","title":"cfg_base_offset Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-cfg_base_offset/#cfg_base_offset-default-value","title":"cfg_base_offset Default Value","text":"<p>The default value is:</p> <pre><code>65536\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-narrow_xbar_slv_id_width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/narrow_xbar_slv_id_width\n</code></pre> <p>ID width of narrow quadrant crossbar slave ports.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-narrow_xbar_slv_id_width/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-nr_clusters/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/nr_clusters\n</code></pre> <p>Number of clusters in an S1 quadrant.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-nr_clusters/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-nr_clusters/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-address_regions/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/address_regions\n</code></pre> <p>Number of programmable address regions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-address_regions/#address_regions-type","title":"address_regions Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-address_regions/#address_regions-default-value","title":"address_regions Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-count/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/count\n</code></pre> <p>The number of cache lines per set. Power of two; &gt;= 2.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-count/#count-type","title":"count Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-max_trans/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/max_trans\n</code></pre> <p>Maximum Outstanding Transaction</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-max_trans/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-max_trans/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-sets/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/sets\n</code></pre> <p>The set associativity of the cache. Power of two; &gt;= 1.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-sets/#sets-type","title":"sets Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg/properties/width\n</code></pre> <p>Cache Line Width</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg-properties-width/#width-type","title":"width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/","title":"Untitled object in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/ro_cache_cfg\n</code></pre> <p>Constant cache configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#ro_cache_cfg-type","title":"ro_cache_cfg Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by max_trans <code>integer</code> Optional cannot be null Occamy System Schema width <code>integer</code> Optional cannot be null Occamy System Schema count <code>integer</code> Optional cannot be null Occamy System Schema sets <code>integer</code> Optional cannot be null Occamy System Schema address_regions <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#max_trans","title":"max_trans","text":"<p>Maximum Outstanding Transaction</p> <p><code>max_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#max_trans-type","title":"max_trans Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#max_trans-default-value","title":"max_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#width","title":"width","text":"<p>Cache Line Width</p> <p><code>width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#width-type","title":"width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#count","title":"count","text":"<p>The number of cache lines per set. Power of two; &gt;= 2.</p> <p><code>count</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#count-type","title":"count Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#sets","title":"sets","text":"<p>The set associativity of the cache. Power of two; &gt;= 1.</p> <p><code>sets</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#sets-type","title":"sets Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#address_regions","title":"address_regions","text":"<p>Number of programmable address regions.</p> <p><code>address_regions</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#address_regions-type","title":"address_regions Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-ro_cache_cfg/#address_regions-default-value","title":"address_regions Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-wide_xbar_slv_id_width/","title":"Untitled integer in Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant/properties/wide_xbar_slv_id_width\n</code></pre> <p>ID width of wide quadrant crossbar slave ports.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-wide_xbar_slv_id_width/#wide_xbar_slv_id_width-type","title":"wide_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties-properties-wide_xbar_slv_id_width/#wide_xbar_slv_id_width-default-value","title":"wide_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/","title":"S1 Quadrant Properties Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json#/properties/s1_quadrant\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#s1_quadrant-type","title":"s1_quadrant Type","text":"<p><code>object</code> (S1 Quadrant Properties)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#s1-quadrant-properties-properties","title":"S1 Quadrant Properties Properties","text":"Property Type Required Nullable Defined by nr_clusters <code>integer</code> Optional cannot be null Occamy System Schema ro_cache_cfg <code>object</code> Optional cannot be null Occamy System Schema wide_xbar <code>object</code> Optional cannot be null Occamy System Schema wide_xbar_slv_id_width <code>integer</code> Optional cannot be null Occamy System Schema narrow_xbar <code>object</code> Optional cannot be null Occamy System Schema narrow_xbar_slv_id_width <code>integer</code> Optional cannot be null Occamy System Schema cfg_base_addr <code>integer</code> Optional cannot be null Occamy System Schema cfg_base_offset <code>integer</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#nr_clusters","title":"nr_clusters","text":"<p>Number of clusters in an S1 quadrant.</p> <p><code>nr_clusters</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#nr_clusters-type","title":"nr_clusters Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#nr_clusters-default-value","title":"nr_clusters Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#ro_cache_cfg","title":"ro_cache_cfg","text":"<p>Constant cache configuration.</p> <p><code>ro_cache_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#ro_cache_cfg-type","title":"ro_cache_cfg Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar","title":"wide_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>wide_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar-type","title":"wide_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar_slv_id_width","title":"wide_xbar_slv_id_width","text":"<p>ID width of wide quadrant crossbar slave ports.</p> <p><code>wide_xbar_slv_id_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar_slv_id_width-type","title":"wide_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#wide_xbar_slv_id_width-default-value","title":"wide_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar","title":"narrow_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>narrow_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar-type","title":"narrow_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar_slv_id_width","title":"narrow_xbar_slv_id_width","text":"<p>ID width of narrow quadrant crossbar slave ports.</p> <p><code>narrow_xbar_slv_id_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_addr","title":"cfg_base_addr","text":"<p>Base address of the quadrant configuration region.</p> <p><code>cfg_base_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_addr-type","title":"cfg_base_addr Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_addr-default-value","title":"cfg_base_addr Default Value","text":"<p>The default value is:</p> <pre><code>184549376\n</code></pre>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_offset","title":"cfg_base_offset","text":"<p>Allocated size and offset of each quadrant configuration.</p> <p><code>cfg_base_offset</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_offset-type","title":"cfg_base_offset Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy-properties-s1-quadrant-properties/#cfg_base_offset-default-value","title":"cfg_base_offset Default Value","text":"<p>The default value is:</p> <pre><code>65536\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/","title":"Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/cluster\n</code></pre> <p>Base description of a Snitch cluster and its internal structure and configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json*"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster-type","title":"cluster Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#snitch-cluster-schema-properties","title":"Snitch Cluster Schema Properties","text":"Property Type Required Nullable Defined by name <code>string</code> Optional cannot be null Snitch Cluster Schema boot_addr <code>number</code> Optional cannot be null Snitch Cluster Schema cluster_base_addr <code>number</code> Optional cannot be null Snitch Cluster Schema tcdm <code>object</code> Optional cannot be null Snitch Cluster Schema cluster_periph_size <code>number</code> Optional cannot be null Snitch Cluster Schema zero_mem_size <code>number</code> Optional cannot be null Snitch Cluster Schema addr_width <code>number</code> Required cannot be null Snitch Cluster Schema data_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_data_width <code>number</code> Optional cannot be null Snitch Cluster Schema narrow_trans <code>number</code> Optional cannot be null Snitch Cluster Schema wide_trans <code>number</code> Optional cannot be null Snitch Cluster Schema id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema dma_id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema user_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_user_width <code>number</code> Optional cannot be null Snitch Cluster Schema hart_base_id <code>number</code> Optional cannot be null Snitch Cluster Schema mode <code>string</code> Optional cannot be null Snitch Cluster Schema vm_support <code>boolean</code> Optional cannot be null Snitch Cluster Schema dma_axi_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema dma_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema enable_debug <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_expose <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_fields <code>object</code> Optional cannot be null Snitch Cluster Schema timing <code>object</code> Optional cannot be null Snitch Cluster Schema hives <code>array</code> Required cannot be null Snitch Cluster Schema"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#name","title":"name","text":"<p>Optional name for the generated wrapper.</p> <p><code>name</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#name-default-value","title":"name Default Value","text":"<p>The default value is:</p> <pre><code>\"snitch_cluster\"\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#boot_addr","title":"boot_addr","text":"<p>Address from which all harts of the cluster start to boot. The default setting is <code>0x8000_0000</code>.</p> <p><code>boot_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#boot_addr-type","title":"boot_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#boot_addr-default-value","title":"boot_addr Default Value","text":"<p>The default value is:</p> <pre><code>2147483648\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_base_addr","title":"cluster_base_addr","text":"<p>Base address of this cluster.</p> <p><code>cluster_base_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_base_addr-type","title":"cluster_base_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#tcdm","title":"tcdm","text":"<p>Configuration of the Tightly Coupled Data Memory of this cluster.</p> <p><code>tcdm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#tcdm-type","title":"tcdm Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#tcdm-default-value","title":"tcdm Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"size\": 128,\n\"banks\": 32\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_periph_size","title":"cluster_periph_size","text":"<p>Address region size reserved for cluster peripherals in KiByte.</p> <p><code>cluster_periph_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_periph_size-type","title":"cluster_periph_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#cluster_periph_size-examples","title":"cluster_periph_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#zero_mem_size","title":"zero_mem_size","text":"<p>Address region size reserved for the Zero-Memory in KiByte.</p> <p><code>zero_mem_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#zero_mem_size-type","title":"zero_mem_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#zero_mem_size-examples","title":"zero_mem_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#addr_width","title":"addr_width","text":"<p>Length of the address, should be greater than 30. If the address is larger than 34 the data bus needs to be 64 bits in size.</p> <p><code>addr_width</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#addr_width-type","title":"addr_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#addr_width-default-value","title":"addr_width Default Value","text":"<p>The default value is:</p> <pre><code>48\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#data_width","title":"data_width","text":"<p>Data bus size of the integer core (everything except the DMA), must be 32 or 64. A double precision FPU requires 64 bit data length.</p> <p><code>data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#data_width-type","title":"data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#data_width-default-value","title":"data_width Default Value","text":"<p>The default value is:</p> <pre><code>64\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_data_width","title":"dma_data_width","text":"<p>Data bus size of DMA. Usually this is larger than the integer core as the DMA is used to efficiently transfer bulk of data.</p> <p><code>dma_data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_data_width-type","title":"dma_data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_data_width-default-value","title":"dma_data_width Default Value","text":"<p>The default value is:</p> <pre><code>512\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#narrow_trans","title":"narrow_trans","text":"<p>Outstanding transactions on the narrow AXI network</p> <p><code>narrow_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#narrow_trans-type","title":"narrow_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#narrow_trans-default-value","title":"narrow_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#wide_trans","title":"wide_trans","text":"<p>Outstanding transactions on the wide AXI network</p> <p><code>wide_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#wide_trans-type","title":"wide_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#wide_trans-default-value","title":"wide_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#id_width_in","title":"id_width_in","text":"<p>Id width of the narrower AXI plug into the cluster.</p> <p><code>id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#id_width_in-type","title":"id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#id_width_in-default-value","title":"id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_id_width_in","title":"dma_id_width_in","text":"<p>Id width of the wide AXI plug into the cluster.</p> <p><code>dma_id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_id_width_in-type","title":"dma_id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_id_width_in-default-value","title":"dma_id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#user_width","title":"user_width","text":"<p>User width of the narrower AXI plug into the cluster.</p> <p><code>user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#user_width-type","title":"user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#user_width-default-value","title":"user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_user_width","title":"dma_user_width","text":"<p>User width of the wide AXI plug into the cluster.</p> <p><code>dma_user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_user_width-type","title":"dma_user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_user_width-default-value","title":"dma_user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hart_base_id","title":"hart_base_id","text":"<p>Base hart id of the cluster. All cores get the respective cluster id plus their cluster position as the final <code>hart_id</code>.</p> <p><code>hart_base_id</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hart_base_id-type","title":"hart_base_id Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#mode","title":"mode","text":"<p>Supported mode by the processor, can be msu.</p> <p>Currently ignored.</p> <p><code>mode</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#mode-type","title":"mode Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#vm_support","title":"vm_support","text":"<p>Whether to provide virtual memory support (Sv32).</p> <p><code>vm_support</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#vm_support-type","title":"vm_support Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#vm_support-default-value","title":"vm_support Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_axi_req_fifo_depth","title":"dma_axi_req_fifo_depth","text":"<p>Number of AXI FIFO entries of the DMA engine.</p> <p><code>dma_axi_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_axi_req_fifo_depth-type","title":"dma_axi_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_axi_req_fifo_depth-default-value","title":"dma_axi_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_req_fifo_depth","title":"dma_req_fifo_depth","text":"<p>Number of request entries the DMA can keep</p> <p><code>dma_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_req_fifo_depth-type","title":"dma_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#dma_req_fifo_depth-default-value","title":"dma_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#enable_debug","title":"enable_debug","text":"<p>Whether to provide a debug request input and external debug features</p> <p><code>enable_debug</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#enable_debug-type","title":"enable_debug Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#enable_debug-default-value","title":"enable_debug Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_expose","title":"sram_cfg_expose","text":"<p>Whether to expose memory cut configuration inputs for implementation</p> <p><code>sram_cfg_expose</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_expose-type","title":"sram_cfg_expose Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields","title":"sram_cfg_fields","text":"<p>The names and widths of memory cut configuration inputs needed for implementation</p> <p><code>sram_cfg_fields</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields-type","title":"sram_cfg_fields Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields-constraints","title":"sram_cfg_fields Constraints","text":"<p>minimum number of properties: the minimum number of properties for this object is: <code>1</code></p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#sram_cfg_fields-default-value","title":"sram_cfg_fields Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"reserved\": 1\n}\n</code></pre>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#timing","title":"timing","text":"<p><code>timing</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Timing and Latency Tuning Parameter)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#timing-type","title":"timing Type","text":"<p><code>object</code> (Timing and Latency Tuning Parameter)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hives","title":"hives","text":"<p>Cores in a hive share an instruction cache and other shared infrastructure such as the PTW or the multiply/divide unit.</p> <p><code>hives</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object[]</code> (Hive Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hives-type","title":"hives Type","text":"<p><code>object[]</code> (Hive Description)</p>"},{"location":"schema-doc/occamy-properties-snitch-cluster-schema/#hives-constraints","title":"hives Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/occamy/","title":"Occamy System Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/occamy.schema.json\n</code></pre> <p>Description of an Occamy-based system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none occamy.schema.json"},{"location":"schema-doc/occamy/#occamy-system-schema-type","title":"Occamy System Schema Type","text":"<p><code>object</code> (Occamy System Schema)</p>"},{"location":"schema-doc/occamy/#occamy-system-schema-properties","title":"Occamy System Schema Properties","text":"Property Type Required Nullable Defined by cluster <code>object</code> Required cannot be null Occamy System Schema quadrant_pre_xbar <code>object</code> Optional cannot be null Occamy System Schema pre_xbar_slv_id_width_no_rocache <code>integer</code> Optional cannot be null Occamy System Schema wide_xbar <code>object</code> Optional cannot be null Occamy System Schema quadrant_inter_xbar <code>object</code> Optional cannot be null Occamy System Schema hbm_xbar <code>object</code> Optional cannot be null Occamy System Schema narrow_xbar <code>object</code> Optional cannot be null Occamy System Schema narrow_xbar_slv_id_width <code>integer</code> Optional cannot be null Occamy System Schema nr_s1_quadrant <code>integer</code> Optional cannot be null Occamy System Schema narrow_tlb_cfg <code>object</code> Optional cannot be null Occamy System Schema wide_tlb_cfg <code>object</code> Optional cannot be null Occamy System Schema cuts <code>object</code> Optional cannot be null Occamy System Schema txns <code>object</code> Optional cannot be null Occamy System Schema is_remote_quadrant <code>boolean</code> Optional cannot be null Occamy System Schema remote_quadrants <code>array</code> Optional cannot be null Occamy System Schema s1_quadrant <code>object</code> Optional cannot be null Occamy System Schema spm_narrow <code>object</code> Optional cannot be null Occamy System Schema spm_wide <code>object</code> Optional cannot be null Occamy System Schema wide_zero_mem <code>object</code> Optional cannot be null Occamy System Schema pcie <code>object</code> Optional cannot be null Occamy System Schema hbi <code>object</code> Optional cannot be null Occamy System Schema hbm <code>object</code> Optional cannot be null Occamy System Schema peripherals <code>object</code> Optional cannot be null Occamy System Schema"},{"location":"schema-doc/occamy/#cluster","title":"cluster","text":"<p>Base description of a Snitch cluster and its internal structure and configuration.</p> <p><code>cluster</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object</code> (Snitch Cluster Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#cluster-type","title":"cluster Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/occamy/#quadrant_pre_xbar","title":"quadrant_pre_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>quadrant_pre_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#quadrant_pre_xbar-type","title":"quadrant_pre_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#pre_xbar_slv_id_width_no_rocache","title":"pre_xbar_slv_id_width_no_rocache","text":"<p>ID width of quadrant pre-crossbar slave ports assuming no read-only cache.</p> <p><code>pre_xbar_slv_id_width_no_rocache</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#pre_xbar_slv_id_width_no_rocache-type","title":"pre_xbar_slv_id_width_no_rocache Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy/#pre_xbar_slv_id_width_no_rocache-default-value","title":"pre_xbar_slv_id_width_no_rocache Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/occamy/#wide_xbar","title":"wide_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>wide_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#wide_xbar-type","title":"wide_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#quadrant_inter_xbar","title":"quadrant_inter_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>quadrant_inter_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#quadrant_inter_xbar-type","title":"quadrant_inter_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#hbm_xbar","title":"hbm_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>hbm_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#hbm_xbar-type","title":"hbm_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#narrow_xbar","title":"narrow_xbar","text":"<p>AXI Crossbar Properties</p> <p><code>narrow_xbar</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI Crossbar Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#narrow_xbar-type","title":"narrow_xbar Type","text":"<p><code>object</code> (AXI Crossbar Schema)</p>"},{"location":"schema-doc/occamy/#narrow_xbar_slv_id_width","title":"narrow_xbar_slv_id_width","text":"<p>ID width of narrow crossbar slave ports.</p> <p><code>narrow_xbar_slv_id_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#narrow_xbar_slv_id_width-type","title":"narrow_xbar_slv_id_width Type","text":"<p><code>integer</code></p>"},{"location":"schema-doc/occamy/#narrow_xbar_slv_id_width-default-value","title":"narrow_xbar_slv_id_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/occamy/#nr_s1_quadrant","title":"nr_s1_quadrant","text":"<p><code>nr_s1_quadrant</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>integer</code> (Number of S1 Quadrants)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#nr_s1_quadrant-type","title":"nr_s1_quadrant Type","text":"<p><code>integer</code> (Number of S1 Quadrants)</p>"},{"location":"schema-doc/occamy/#nr_s1_quadrant-default-value","title":"nr_s1_quadrant Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/occamy/#narrow_tlb_cfg","title":"narrow_tlb_cfg","text":"<p>AXI TLB Properties</p> <p><code>narrow_tlb_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI TLB Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#narrow_tlb_cfg-type","title":"narrow_tlb_cfg Type","text":"<p><code>object</code> (AXI TLB Schema)</p>"},{"location":"schema-doc/occamy/#wide_tlb_cfg","title":"wide_tlb_cfg","text":"<p>AXI TLB Properties</p> <p><code>wide_tlb_cfg</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (AXI TLB Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#wide_tlb_cfg-type","title":"wide_tlb_cfg Type","text":"<p><code>object</code> (AXI TLB Schema)</p>"},{"location":"schema-doc/occamy/#cuts","title":"cuts","text":"<p><code>cuts</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Number of cuts on the AXI bus)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#cuts-type","title":"cuts Type","text":"<p><code>object</code> (Number of cuts on the AXI bus)</p>"},{"location":"schema-doc/occamy/#txns","title":"txns","text":"<p><code>txns</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Number of outstanding transactions on the AXI bus)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#txns-type","title":"txns Type","text":"<p><code>object</code> (Number of outstanding transactions on the AXI bus)</p>"},{"location":"schema-doc/occamy/#is_remote_quadrant","title":"is_remote_quadrant","text":"<p>Set if this is a remote quadrant. Only quadrant ant remote interconnect is generated</p> <p><code>is_remote_quadrant</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#is_remote_quadrant-type","title":"is_remote_quadrant Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/occamy/#remote_quadrants","title":"remote_quadrants","text":"<p>List of attached remote quadrants</p> <p><code>remote_quadrants</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object[]</code> (Remote Quadrant Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#remote_quadrants-type","title":"remote_quadrants Type","text":"<p><code>object[]</code> (Remote Quadrant Description)</p>"},{"location":"schema-doc/occamy/#remote_quadrants-constraints","title":"remote_quadrants Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/occamy/#s1_quadrant","title":"s1_quadrant","text":"<p><code>s1_quadrant</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (S1 Quadrant Properties)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#s1_quadrant-type","title":"s1_quadrant Type","text":"<p><code>object</code> (S1 Quadrant Properties)</p>"},{"location":"schema-doc/occamy/#spm_narrow","title":"spm_narrow","text":"<p>Description of a generic address range</p> <p><code>spm_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#spm_narrow-type","title":"spm_narrow Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#spm_wide","title":"spm_wide","text":"<p>Description of a generic address range</p> <p><code>spm_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#spm_wide-type","title":"spm_wide Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#wide_zero_mem","title":"wide_zero_mem","text":"<p>Description of a generic address range</p> <p><code>wide_zero_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#wide_zero_mem-type","title":"wide_zero_mem Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#pcie","title":"pcie","text":"<p><code>pcie</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Configuration of external PCIe port)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#pcie-type","title":"pcie Type","text":"<p><code>object</code> (Configuration of external PCIe port)</p>"},{"location":"schema-doc/occamy/#hbi","title":"hbi","text":"<p>Description of a generic address range</p> <p><code>hbi</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Address Range Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#hbi-type","title":"hbi Type","text":"<p><code>object</code> (Address Range Schema)</p>"},{"location":"schema-doc/occamy/#hbm","title":"hbm","text":"<p><code>hbm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Configuration of external HBM interface)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#hbm-type","title":"hbm Type","text":"<p><code>object</code> (Configuration of external HBM interface)</p>"},{"location":"schema-doc/occamy/#peripherals","title":"peripherals","text":"<p>Description of an a peripheral sub-system.</p> <p><code>peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Peripherals Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Occamy System Schema</p> </li> </ul>"},{"location":"schema-doc/occamy/#peripherals-type","title":"peripherals Type","text":"<p><code>object</code> (Peripherals Schema)</p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items/address\n</code></pre> <p>Start address of the peripheral address region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items/length\n</code></pre> <p>Total size of the peripheral address region in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-name/","title":"Untitled string in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items/name\n</code></pre> <p>Name of the peripheral connected to the AXI-lite crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items-name/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals/items\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals-items/#items-type","title":"items Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals/","title":"Untitled array in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/axi_lite_peripherals\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals/#axi_lite_peripherals-type","title":"axi_lite_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals-properties-axi_lite_peripherals/#axi_lite_peripherals-constraints","title":"axi_lite_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/peripherals-properties-clint-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint/address\n</code></pre> <p>Start address of CLINT address region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-clint-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-clint-default/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-clint-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint/length\n</code></pre> <p>Total size of CLINT address region in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-clint-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-clint/","title":"Untitled object in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/clint\n</code></pre> <p>Core-local Interrupt Controller (CLINT) peripheral.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-clint/#clint-type","title":"clint Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals-properties-clint/#clint-default-value","title":"clint Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"address\": 67108864,\n\"length\": 1048576\n}\n</code></pre>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items/address\n</code></pre> <p>Start address of the peripheral address region.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items/length\n</code></pre> <p>Total size of the peripheral address region in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-name/","title":"Untitled string in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items/name\n</code></pre> <p>Name of the peripheral connected to the Register Bus crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items-name/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals/items\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals-items/#items-type","title":"items Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals/","title":"Untitled array in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/regbus_peripherals\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-regbus_peripherals/#regbus_peripherals-type","title":"regbus_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals-properties-regbus_peripherals/#regbus_peripherals-constraints","title":"regbus_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/peripherals-properties-rom-address/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom/address\n</code></pre> <p>Start address of ROM.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-rom-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-rom-default/","title":"Untitled undefined type in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/peripherals-properties-rom-length/","title":"Untitled number in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom/length\n</code></pre> <p>Total size of ROM in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/peripherals-properties-rom-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/peripherals-properties-rom/","title":"Untitled object in Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json#/properties/rom\n</code></pre> <p>Read-only memory from which all harts of the system start to boot.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none peripherals.schema.json*"},{"location":"schema-doc/peripherals-properties-rom/#rom-type","title":"rom Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals-properties-rom/#rom-default-value","title":"rom Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"address\": 16777216,\n\"length\": 131072\n}\n</code></pre>"},{"location":"schema-doc/peripherals/","title":"Peripherals Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/peripherals.schema.json\n</code></pre> <p>Description of an a peripheral sub-system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none peripherals.schema.json"},{"location":"schema-doc/peripherals/#peripherals-schema-type","title":"Peripherals Schema Type","text":"<p><code>object</code> (Peripherals Schema)</p>"},{"location":"schema-doc/peripherals/#peripherals-schema-properties","title":"Peripherals Schema Properties","text":"Property Type Required Nullable Defined by rom <code>object</code> Optional cannot be null Peripherals Schema clint <code>object</code> Optional cannot be null Peripherals Schema axi_lite_peripherals <code>array</code> Optional cannot be null Peripherals Schema regbus_peripherals <code>array</code> Optional cannot be null Peripherals Schema"},{"location":"schema-doc/peripherals/#rom","title":"rom","text":"<p>Read-only memory from which all harts of the system start to boot.</p> <p><code>rom</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#rom-type","title":"rom Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals/#rom-default-value","title":"rom Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"address\": 16777216,\n\"length\": 131072\n}\n</code></pre>"},{"location":"schema-doc/peripherals/#clint","title":"clint","text":"<p>Core-local Interrupt Controller (CLINT) peripheral.</p> <p><code>clint</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#clint-type","title":"clint Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/peripherals/#clint-default-value","title":"clint Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"address\": 67108864,\n\"length\": 1048576\n}\n</code></pre>"},{"location":"schema-doc/peripherals/#axi_lite_peripherals","title":"axi_lite_peripherals","text":"<p><code>axi_lite_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#axi_lite_peripherals-type","title":"axi_lite_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals/#axi_lite_peripherals-constraints","title":"axi_lite_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/peripherals/#regbus_peripherals","title":"regbus_peripherals","text":"<p><code>regbus_peripherals</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: unknown[]</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Peripherals Schema</p> </li> </ul>"},{"location":"schema-doc/peripherals/#regbus_peripherals-type","title":"regbus_peripherals Type","text":"<p>unknown[]</p>"},{"location":"schema-doc/peripherals/#regbus_peripherals-constraints","title":"regbus_peripherals Constraints","text":"<p>unique items: all items in this array must be unique. Duplicates are not allowed.</p>"},{"location":"schema-doc/snitch_cluster-properties-addr_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/addr_width\n</code></pre> <p>Length of the address, should be greater than 30. If the address is larger than 34 the data bus needs to be 64 bits in size.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-addr_width/#addr_width-type","title":"addr_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-addr_width/#addr_width-default-value","title":"addr_width Default Value","text":"<p>The default value is:</p> <pre><code>48\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-boot_addr/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/boot_addr\n</code></pre> <p>Address from which all harts of the cluster start to boot. The default setting is <code>0x8000_0000</code>.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-boot_addr/#boot_addr-type","title":"boot_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-boot_addr/#boot_addr-default-value","title":"boot_addr Default Value","text":"<p>The default value is:</p> <pre><code>2147483648\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-cluster_base_addr/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/cluster_base_addr\n</code></pre> <p>Base address of this cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-cluster_base_addr/#cluster_base_addr-type","title":"cluster_base_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-cluster_periph_size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/cluster_periph_size\n</code></pre> <p>Address region size reserved for cluster peripherals in KiByte.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-cluster_periph_size/#cluster_periph_size-type","title":"cluster_periph_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-cluster_periph_size/#cluster_periph_size-examples","title":"cluster_periph_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-data_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/data_width\n</code></pre> <p>Data bus size of the integer core (everything except the DMA), must be 32 or 64. A double precision FPU requires 64 bit data length.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-data_width/#data_width-type","title":"data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-data_width/#data_width-default-value","title":"data_width Default Value","text":"<p>The default value is:</p> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_axi_req_fifo_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_axi_req_fifo_depth\n</code></pre> <p>Number of AXI FIFO entries of the DMA engine.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_axi_req_fifo_depth/#dma_axi_req_fifo_depth-type","title":"dma_axi_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_axi_req_fifo_depth/#dma_axi_req_fifo_depth-default-value","title":"dma_axi_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_data_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_data_width\n</code></pre> <p>Data bus size of DMA. Usually this is larger than the integer core as the DMA is used to efficiently transfer bulk of data.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_data_width/#dma_data_width-type","title":"dma_data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_data_width/#dma_data_width-default-value","title":"dma_data_width Default Value","text":"<p>The default value is:</p> <pre><code>512\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_id_width_in/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_id_width_in\n</code></pre> <p>Id width of the wide AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_id_width_in/#dma_id_width_in-type","title":"dma_id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_id_width_in/#dma_id_width_in-default-value","title":"dma_id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_req_fifo_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_req_fifo_depth\n</code></pre> <p>Number of request entries the DMA can keep</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_req_fifo_depth/#dma_req_fifo_depth-type","title":"dma_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_req_fifo_depth/#dma_req_fifo_depth-default-value","title":"dma_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-dma_user_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/dma_user_width\n</code></pre> <p>User width of the wide AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-dma_user_width/#dma_user_width-type","title":"dma_user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-dma_user_width/#dma_user_width-default-value","title":"dma_user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-enable_debug/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/enable_debug\n</code></pre> <p>Whether to provide a debug request input and external debug features</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-enable_debug/#enable_debug-type","title":"enable_debug Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-enable_debug/#enable_debug-default-value","title":"enable_debug Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hart_base_id/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hart_base_id\n</code></pre> <p>Base hart id of the cluster. All cores get the respective cluster id plus their cluster position as the final <code>hart_id</code>.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hart_base_id/#hart_base_id-type","title":"hart_base_id Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xfrep-extension/","title":"Enable Xfrep Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xfrep\n</code></pre> <p>Floating-point repetition buffer (Xfrep) custom extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xfrep-extension/#xfrep-type","title":"xfrep Type","text":"<p><code>boolean</code> (Enable Xfrep Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xfrep-extension/#xfrep-default-value","title":"xfrep Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xssr-extension/","title":"Enable Xssr Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xssr\n</code></pre> <p>Stream Semantic Registers (Xssr) custom extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xssr-extension/#xssr-type","title":"xssr Type","text":"<p><code>boolean</code> (Enable Xssr Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-enable-xssr-extension/#xssr-default-value","title":"xssr Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/","title":"ISA String containing RISC-V standard extensions. Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/isa\n</code></pre> <p>ISA string as defined by the RISC-V standard. Only contain the standardized ISA extensions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/#isa-type","title":"isa Type","text":"<p><code>string</code> (ISA String containing RISC-V standard extensions.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/#isa-default-value","title":"isa Default Value","text":"<p>The default value is:</p> <pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-isa-string-containing-risc-v-standard-extensions/#isa-examples","title":"isa Examples","text":"<pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_dtlb_entries/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_dtlb_entries\n</code></pre> <p>Number of DTLB entries. Determines the core's size.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_dtlb_entries/#num_dtlb_entries-type","title":"num_dtlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_dtlb_entries/#num_dtlb_entries-default-value","title":"num_dtlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_loads/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_fp_outstanding_loads\n</code></pre> <p>Number of outstanding floating-point loads. Determines the buffer size in the FPU's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_loads/#num_fp_outstanding_loads-type","title":"num_fp_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_loads/#num_fp_outstanding_loads-default-value","title":"num_fp_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_mem/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_fp_outstanding_mem\n</code></pre> <p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_mem/#num_fp_outstanding_mem-type","title":"num_fp_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_fp_outstanding_mem/#num_fp_outstanding_mem-default-value","title":"num_fp_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_loads/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_int_outstanding_loads\n</code></pre> <p>Number of outstanding integer loads. Determines the buffer size in the core's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_loads/#num_int_outstanding_loads-type","title":"num_int_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_loads/#num_int_outstanding_loads-default-value","title":"num_int_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_mem/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_int_outstanding_mem\n</code></pre> <p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_mem/#num_int_outstanding_mem-type","title":"num_int_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_int_outstanding_mem/#num_int_outstanding_mem-default-value","title":"num_int_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_itlb_entries/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_itlb_entries\n</code></pre> <p>Number of ITLB entries. Determines the core's size.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_itlb_entries/#num_itlb_entries-type","title":"num_itlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_itlb_entries/#num_itlb_entries-default-value","title":"num_itlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_sequencer_instructions/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/num_sequencer_instructions\n</code></pre> <p>Amount of floating-point instruction the floating-point sequence buffer can hold.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_sequencer_instructions/#num_sequencer_instructions-type","title":"num_sequencer_instructions Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-num_sequencer_instructions/#num_sequencer_instructions-default-value","title":"num_sequencer_instructions Default Value","text":"<p>The default value is:</p> <pre><code>16\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-feature/","title":"SSR Intersection Feature Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_intersection\n</code></pre> <p>Enable intersection between 3 SSRs for sparse-sparse processing.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-feature/#ssr_intersection-type","title":"ssr_intersection Type","text":"<p><code>boolean</code> (SSR Intersection Feature)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple-items/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_intersection_triple/items\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple-items/#items-type","title":"items Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/","title":"SSR Intersection Triple Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_intersection_triple\n</code></pre> <p>Indices of the SSRs forming an SSR intersection triple.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/#ssr_intersection_triple-type","title":"ssr_intersection_triple Type","text":"<p><code>number[]</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/#ssr_intersection_triple-constraints","title":"ssr_intersection_triple Constraints","text":"<p>maximum number of items: the maximum number of items for this array is: <code>3</code></p> <p>minimum number of items: the minimum number of items for this array is: <code>3</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr-intersection-triple/#ssr_intersection_triple-default-value","title":"ssr_intersection_triple Default Value","text":"<p>The default value is:</p> <pre><code>[\n0,\n1,\n2\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr_mux_resp_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssr_mux_resp_depth\n</code></pre> <p>Depth of response buffer in the TCDM multiplexer arbitrating between core and SSR 0.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr_mux_resp_depth/#ssr_mux_resp_depth-type","title":"ssr_mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssr_mux_resp_depth/#ssr_mux_resp_depth-default-value","title":"ssr_mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-0/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/default/0\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-0/#0-type","title":"0 Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-1/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/default/1\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-1/#1-type","title":"1 Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-2/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/default/2\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-default-2/#2-type","title":"2 Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/data_credits\n</code></pre> <p>Number of credits and buffer depth of the data word FIFO.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/#data_credits-type","title":"data_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/#data_credits-constraints","title":"data_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-data_credits/#data_credits-default-value","title":"data_credits Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/index_credits\n</code></pre> <p>Number of credits and buffer depth of the index word FIFO.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/#index_credits-type","title":"index_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/#index_credits-constraints","title":"index_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_credits/#index_credits-default-value","title":"index_credits Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_width/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/index_width\n</code></pre> <p>Internal bitwidth of indices in address generator; default covers full TCDM in a unit-stride 1D loop.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_width/#index_width-type","title":"index_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-index_width/#index_width-constraints","title":"index_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indir_out_spill/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/indir_out_spill\n</code></pre> <p>Whether to cut timing paths with a spill register at the address generator output; added only if indirection extension enabled.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indir_out_spill/#indir_out_spill-type","title":"indir_out_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indir_out_spill/#indir_out_spill-default-value","title":"indir_out_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indirection/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/indirection\n</code></pre> <p>Enable indirection extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-indirection/#indirection-type","title":"indirection Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/isect_slave_credits\n</code></pre> <p>Number of elements by which intersected indices may outrun corresponding data; added only if this SSR is an intersection slave.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/#isect_slave_credits-type","title":"isect_slave_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/#isect_slave_credits-constraints","title":"isect_slave_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>2</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_credits/#isect_slave_credits-default-value","title":"isect_slave_credits Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_spill/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/isect_slave_spill\n</code></pre> <p>Whether to cut timing paths with a spill register at the intersector index output; added only if this SSR is an intersection slave.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_spill/#isect_slave_spill-type","title":"isect_slave_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-isect_slave_spill/#isect_slave_spill-default-value","title":"isect_slave_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/mux_resp_depth\n</code></pre> <p>Depth of response buffer in the TCDM multiplexer arbitrating between data and indices.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/#mux_resp_depth-type","title":"mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/#mux_resp_depth-constraints","title":"mux_resp_depth Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-mux_resp_depth/#mux_resp_depth-default-value","title":"mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/num_loops\n</code></pre> <p>Number of nested hardware loops in address generator.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/#num_loops-type","title":"num_loops Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/#num_loops-constraints","title":"num_loops Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>4</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-num_loops/#num_loops-default-value","title":"num_loops Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-pointer_width/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/pointer_width\n</code></pre> <p>Internal bitwidth of pointers in address generator; default covers full TCDM</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-pointer_width/#pointer_width-type","title":"pointer_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-pointer_width/#pointer_width-constraints","title":"pointer_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-reg_idx/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/reg_idx\n</code></pre> <p>The floating-point register index this SSR is assigned to. If not assigned, the next available index counting from 0 is chosen.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-reg_idx/#reg_idx-type","title":"reg_idx Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-reg_idx/#reg_idx-constraints","title":"reg_idx Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>31</code></p> <p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/rpt_width\n</code></pre> <p>Internal bitwidth of repetition counter for read streams.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/#rpt_width-type","title":"rpt_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/#rpt_width-constraints","title":"rpt_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-rpt_width/#rpt_width-default-value","title":"rpt_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items/properties/shift_width\n</code></pre> <p>Internal bitwidth of additional left shift amount for indirect indices.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/#shift_width-type","title":"shift_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/#shift_width-constraints","title":"shift_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description-properties-shift_width/#shift_width-default-value","title":"shift_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/","title":"SSR Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs/items\n</code></pre> <p>Description of a single Stream Semantic Register.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#items-type","title":"items Type","text":"<p><code>object</code> (SSR Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#ssr-description-properties","title":"SSR Description Properties","text":"Property Type Required Nullable Defined by reg_idx <code>number</code> Optional can be null Snitch Cluster Schema indirection <code>boolean</code> Optional cannot be null Snitch Cluster Schema indir_out_spill <code>boolean</code> Optional cannot be null Snitch Cluster Schema isect_slave_spill <code>boolean</code> Optional cannot be null Snitch Cluster Schema isect_slave_credits <code>number</code> Optional cannot be null Snitch Cluster Schema num_loops <code>number</code> Optional cannot be null Snitch Cluster Schema index_credits <code>number</code> Optional cannot be null Snitch Cluster Schema data_credits <code>number</code> Optional cannot be null Snitch Cluster Schema mux_resp_depth <code>number</code> Optional cannot be null Snitch Cluster Schema index_width <code>number</code> Optional can be null Snitch Cluster Schema pointer_width <code>number</code> Optional can be null Snitch Cluster Schema shift_width <code>number</code> Optional cannot be null Snitch Cluster Schema rpt_width <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#reg_idx","title":"reg_idx","text":"<p>The floating-point register index this SSR is assigned to. If not assigned, the next available index counting from 0 is chosen.</p> <p><code>reg_idx</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>can be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#reg_idx-type","title":"reg_idx Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#reg_idx-constraints","title":"reg_idx Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>31</code></p> <p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indirection","title":"indirection","text":"<p>Enable indirection extension.</p> <p><code>indirection</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indirection-type","title":"indirection Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indir_out_spill","title":"indir_out_spill","text":"<p>Whether to cut timing paths with a spill register at the address generator output; added only if indirection extension enabled.</p> <p><code>indir_out_spill</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indir_out_spill-type","title":"indir_out_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#indir_out_spill-default-value","title":"indir_out_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_spill","title":"isect_slave_spill","text":"<p>Whether to cut timing paths with a spill register at the intersector index output; added only if this SSR is an intersection slave.</p> <p><code>isect_slave_spill</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_spill-type","title":"isect_slave_spill Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_spill-default-value","title":"isect_slave_spill Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits","title":"isect_slave_credits","text":"<p>Number of elements by which intersected indices may outrun corresponding data; added only if this SSR is an intersection slave.</p> <p><code>isect_slave_credits</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits-type","title":"isect_slave_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits-constraints","title":"isect_slave_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>2</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#isect_slave_credits-default-value","title":"isect_slave_credits Default Value","text":"<p>The default value is:</p> <pre><code>8\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops","title":"num_loops","text":"<p>Number of nested hardware loops in address generator.</p> <p><code>num_loops</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops-type","title":"num_loops Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops-constraints","title":"num_loops Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>4</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#num_loops-default-value","title":"num_loops Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits","title":"index_credits","text":"<p>Number of credits and buffer depth of the index word FIFO.</p> <p><code>index_credits</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits-type","title":"index_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits-constraints","title":"index_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_credits-default-value","title":"index_credits Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits","title":"data_credits","text":"<p>Number of credits and buffer depth of the data word FIFO.</p> <p><code>data_credits</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits-type","title":"data_credits Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits-constraints","title":"data_credits Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#data_credits-default-value","title":"data_credits Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth","title":"mux_resp_depth","text":"<p>Depth of response buffer in the TCDM multiplexer arbitrating between data and indices.</p> <p><code>mux_resp_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth-type","title":"mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth-constraints","title":"mux_resp_depth Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#mux_resp_depth-default-value","title":"mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_width","title":"index_width","text":"<p>Internal bitwidth of indices in address generator; default covers full TCDM in a unit-stride 1D loop.</p> <p><code>index_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>can be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_width-type","title":"index_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#index_width-constraints","title":"index_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#pointer_width","title":"pointer_width","text":"<p>Internal bitwidth of pointers in address generator; default covers full TCDM</p> <p><code>pointer_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>can be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#pointer_width-type","title":"pointer_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#pointer_width-constraints","title":"pointer_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width","title":"shift_width","text":"<p>Internal bitwidth of additional left shift amount for indirect indices.</p> <p><code>shift_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width-type","title":"shift_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width-constraints","title":"shift_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#shift_width-default-value","title":"shift_width Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width","title":"rpt_width","text":"<p>Internal bitwidth of repetition counter for read streams.</p> <p><code>rpt_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width-type","title":"rpt_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width-constraints","title":"rpt_width Constraints","text":"<p>maximum: the value of this number must smaller than or equal to: <code>32</code></p> <p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs-ssr-description/#rpt_width-default-value","title":"rpt_width Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/","title":"SSRs Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/ssrs\n</code></pre> <p>List of all SSRs in the respective core.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/#ssrs-type","title":"ssrs Type","text":"<p><code>object[]</code> (SSR Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/#ssrs-constraints","title":"ssrs Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-ssrs/#ssrs-default-value","title":"ssrs Default Value","text":"<p>The default value is:</p> <pre><code>[\n{},\n{},\n{}\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdiv_sqrt/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/Xdiv_sqrt\n</code></pre> <p>Enable hardware support for floating-point division and square-root. The iterative floating-point unit is known to produce some rounding inaccuracies so it is disabled by default.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdiv_sqrt/#xdiv_sqrt-type","title":"Xdiv_sqrt Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdma-extension/","title":"Xdma Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xdma\n</code></pre> <p>Direct memory access (Xdma) custom extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xdma-extension/#xdma-type","title":"xdma Type","text":"<p><code>boolean</code> (Xdma Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16-16-bit-float-extension/","title":"Xf16 16-bit Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf16\n</code></pre> <p>Enable Smallfloat Xf16 extension (IEEE 16-bit float).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16-16-bit-float-extension/#xf16-type","title":"xf16 Type","text":"<p><code>boolean</code> (Xf16 16-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16alt-16-bit-brain-float-extension/","title":"Xf16alt 16-bit Brain-Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf16alt\n</code></pre> <p>Enable Smallfloat Xf16alt extension, also known as brain-float.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf16alt-16-bit-brain-float-extension/#xf16alt-type","title":"xf16alt Type","text":"<p><code>boolean</code> (Xf16alt 16-bit Brain-Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension-1/","title":"Xf8 8-bit Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf8alt\n</code></pre> <p>Enable Smallfloat Xf8alt extension.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension-1/#xf8alt-type","title":"xf8alt Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension/","title":"Xf8 8-bit Float Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xf8\n</code></pre> <p>Enable Smallfloat Xf8 extension (IEEE 8-bit float).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xf8-8-bit-float-extension/#xf8-type","title":"xf8 Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfdotp-extension/","title":"Xfdotp Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xfdotp\n</code></pre> <p>Enable DOTP extensions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfdotp-extension/#xfdotp-type","title":"xfdotp Type","text":"<p><code>boolean</code> (Xfdotp Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfvec-extension/","title":"Xfvec Extension Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items/properties/xfvec\n</code></pre> <p>Enable Smallfloat vector extension (SIMD).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description-properties-xfvec-extension/#xfvec-type","title":"xfvec Type","text":"<p><code>boolean</code> (Xfvec Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/","title":"Core Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores/items\n</code></pre> <p>Description of a single core.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#items-type","title":"items Type","text":"<p><code>object</code> (Core Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#core-description-properties","title":"Core Description Properties","text":"Property Type Required Nullable Defined by isa <code>string</code> Optional cannot be null Snitch Cluster Schema Xdiv_sqrt <code>boolean</code> Optional cannot be null Snitch Cluster Schema xssr <code>boolean</code> Optional cannot be null Snitch Cluster Schema xfrep <code>boolean</code> Optional cannot be null Snitch Cluster Schema xdma <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf8 <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf8alt <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf16 <code>boolean</code> Optional cannot be null Snitch Cluster Schema xf16alt <code>boolean</code> Optional cannot be null Snitch Cluster Schema xfdotp <code>boolean</code> Optional cannot be null Snitch Cluster Schema xfvec <code>boolean</code> Optional cannot be null Snitch Cluster Schema num_int_outstanding_loads <code>number</code> Optional cannot be null Snitch Cluster Schema num_int_outstanding_mem <code>number</code> Optional cannot be null Snitch Cluster Schema num_fp_outstanding_loads <code>number</code> Optional cannot be null Snitch Cluster Schema num_fp_outstanding_mem <code>number</code> Optional cannot be null Snitch Cluster Schema num_sequencer_instructions <code>number</code> Optional cannot be null Snitch Cluster Schema num_itlb_entries <code>number</code> Optional cannot be null Snitch Cluster Schema num_dtlb_entries <code>number</code> Optional cannot be null Snitch Cluster Schema ssr_intersection <code>boolean</code> Optional cannot be null Snitch Cluster Schema ssr_intersection_triple <code>array</code> Optional cannot be null Snitch Cluster Schema ssr_mux_resp_depth <code>number</code> Optional cannot be null Snitch Cluster Schema ssrs <code>array</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa","title":"isa","text":"<p>ISA string as defined by the RISC-V standard. Only contain the standardized ISA extensions.</p> <p><code>isa</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code> (ISA String containing RISC-V standard extensions.)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa-type","title":"isa Type","text":"<p><code>string</code> (ISA String containing RISC-V standard extensions.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa-default-value","title":"isa Default Value","text":"<p>The default value is:</p> <pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#isa-examples","title":"isa Examples","text":"<pre><code>\"rv32imafd\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdiv_sqrt","title":"Xdiv_sqrt","text":"<p>Enable hardware support for floating-point division and square-root. The iterative floating-point unit is known to produce some rounding inaccuracies so it is disabled by default.</p> <p><code>Xdiv_sqrt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdiv_sqrt-type","title":"Xdiv_sqrt Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xssr","title":"xssr","text":"<p>Stream Semantic Registers (Xssr) custom extension.</p> <p><code>xssr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Enable Xssr Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xssr-type","title":"xssr Type","text":"<p><code>boolean</code> (Enable Xssr Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xssr-default-value","title":"xssr Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfrep","title":"xfrep","text":"<p>Floating-point repetition buffer (Xfrep) custom extension.</p> <p><code>xfrep</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Enable Xfrep Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfrep-type","title":"xfrep Type","text":"<p><code>boolean</code> (Enable Xfrep Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfrep-default-value","title":"xfrep Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdma","title":"xdma","text":"<p>Direct memory access (Xdma) custom extension.</p> <p><code>xdma</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xdma Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xdma-type","title":"xdma Type","text":"<p><code>boolean</code> (Xdma Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8","title":"xf8","text":"<p>Enable Smallfloat Xf8 extension (IEEE 8-bit float).</p> <p><code>xf8</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf8 8-bit Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8-type","title":"xf8 Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8alt","title":"xf8alt","text":"<p>Enable Smallfloat Xf8alt extension.</p> <p><code>xf8alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf8 8-bit Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf8alt-type","title":"xf8alt Type","text":"<p><code>boolean</code> (Xf8 8-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16","title":"xf16","text":"<p>Enable Smallfloat Xf16 extension (IEEE 16-bit float).</p> <p><code>xf16</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf16 16-bit Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16-type","title":"xf16 Type","text":"<p><code>boolean</code> (Xf16 16-bit Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16alt","title":"xf16alt","text":"<p>Enable Smallfloat Xf16alt extension, also known as brain-float.</p> <p><code>xf16alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xf16alt 16-bit Brain-Float Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xf16alt-type","title":"xf16alt Type","text":"<p><code>boolean</code> (Xf16alt 16-bit Brain-Float Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfdotp","title":"xfdotp","text":"<p>Enable DOTP extensions.</p> <p><code>xfdotp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xfdotp Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfdotp-type","title":"xfdotp Type","text":"<p><code>boolean</code> (Xfdotp Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfvec","title":"xfvec","text":"<p>Enable Smallfloat vector extension (SIMD).</p> <p><code>xfvec</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (Xfvec Extension)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#xfvec-type","title":"xfvec Type","text":"<p><code>boolean</code> (Xfvec Extension)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_loads","title":"num_int_outstanding_loads","text":"<p>Number of outstanding integer loads. Determines the buffer size in the core's load/store unit.</p> <p><code>num_int_outstanding_loads</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_loads-type","title":"num_int_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_loads-default-value","title":"num_int_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_mem","title":"num_int_outstanding_mem","text":"<p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> <p><code>num_int_outstanding_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_mem-type","title":"num_int_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_int_outstanding_mem-default-value","title":"num_int_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_loads","title":"num_fp_outstanding_loads","text":"<p>Number of outstanding floating-point loads. Determines the buffer size in the FPU's load/store unit.</p> <p><code>num_fp_outstanding_loads</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_loads-type","title":"num_fp_outstanding_loads Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_loads-default-value","title":"num_fp_outstanding_loads Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_mem","title":"num_fp_outstanding_mem","text":"<p>Number of outstanding memory operations. Determines the buffer size in the core's load/store unit.</p> <p><code>num_fp_outstanding_mem</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_mem-type","title":"num_fp_outstanding_mem Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_fp_outstanding_mem-default-value","title":"num_fp_outstanding_mem Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_sequencer_instructions","title":"num_sequencer_instructions","text":"<p>Amount of floating-point instruction the floating-point sequence buffer can hold.</p> <p><code>num_sequencer_instructions</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_sequencer_instructions-type","title":"num_sequencer_instructions Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_sequencer_instructions-default-value","title":"num_sequencer_instructions Default Value","text":"<p>The default value is:</p> <pre><code>16\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_itlb_entries","title":"num_itlb_entries","text":"<p>Number of ITLB entries. Determines the core's size.</p> <p><code>num_itlb_entries</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_itlb_entries-type","title":"num_itlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_itlb_entries-default-value","title":"num_itlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_dtlb_entries","title":"num_dtlb_entries","text":"<p>Number of DTLB entries. Determines the core's size.</p> <p><code>num_dtlb_entries</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_dtlb_entries-type","title":"num_dtlb_entries Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#num_dtlb_entries-default-value","title":"num_dtlb_entries Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection","title":"ssr_intersection","text":"<p>Enable intersection between 3 SSRs for sparse-sparse processing.</p> <p><code>ssr_intersection</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code> (SSR Intersection Feature)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection-type","title":"ssr_intersection Type","text":"<p><code>boolean</code> (SSR Intersection Feature)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple","title":"ssr_intersection_triple","text":"<p>Indices of the SSRs forming an SSR intersection triple.</p> <p><code>ssr_intersection_triple</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number[]</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple-type","title":"ssr_intersection_triple Type","text":"<p><code>number[]</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple-constraints","title":"ssr_intersection_triple Constraints","text":"<p>maximum number of items: the maximum number of items for this array is: <code>3</code></p> <p>minimum number of items: the minimum number of items for this array is: <code>3</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_intersection_triple-default-value","title":"ssr_intersection_triple Default Value","text":"<p>The default value is:</p> <pre><code>[\n0,\n1,\n2\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_mux_resp_depth","title":"ssr_mux_resp_depth","text":"<p>Depth of response buffer in the TCDM multiplexer arbitrating between core and SSR 0.</p> <p><code>ssr_mux_resp_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_mux_resp_depth-type","title":"ssr_mux_resp_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssr_mux_resp_depth-default-value","title":"ssr_mux_resp_depth Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs","title":"ssrs","text":"<p>List of all SSRs in the respective core.</p> <p><code>ssrs</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object[]</code> (SSR Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs-type","title":"ssrs Type","text":"<p><code>object[]</code> (SSR Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs-constraints","title":"ssrs Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores-core-description/#ssrs-default-value","title":"ssrs Default Value","text":"<p>The default value is:</p> <pre><code>[\n{},\n{},\n{}\n]\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores/","title":"Cores Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/cores\n</code></pre> <p>List of all cores in the respective hive.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores/#cores-type","title":"cores Type","text":"<p><code>object[]</code> (Core Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-cores/#cores-constraints","title":"cores Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-default/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-cacheline/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/properties/cacheline\n</code></pre> <p>Cacheline/Word size in bits.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-cacheline/#cacheline-type","title":"cacheline Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-sets/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/properties/sets\n</code></pre> <p>Number of ways.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-sets/#sets-type","title":"sets Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache/properties/size\n</code></pre> <p>Total instruction cache size in KiByte.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration-properties-size/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/","title":"Hive's instruction cache configuration. Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items/properties/icache\n</code></pre> <p>Detailed configuration of the current Hive's instruction cache.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#icache-type","title":"icache Type","text":"<p><code>object</code> (Hive's instruction cache configuration.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#icache-default-value","title":"icache Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"size\": 8,\n\"sets\": 2,\n\"cacheline\": 128\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#hives-instruction-cache-configuration-properties","title":"Hive's instruction cache configuration. Properties","text":"Property Type Required Nullable Defined by size <code>number</code> Optional cannot be null Snitch Cluster Schema sets <code>number</code> Optional cannot be null Snitch Cluster Schema cacheline <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#size","title":"size","text":"<p>Total instruction cache size in KiByte.</p> <p><code>size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#sets","title":"sets","text":"<p>Number of ways.</p> <p><code>sets</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#sets-type","title":"sets Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#cacheline","title":"cacheline","text":"<p>Cacheline/Word size in bits.</p> <p><code>cacheline</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description-properties-hives-instruction-cache-configuration/#cacheline-type","title":"cacheline Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/","title":"Hive Description Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives/items\n</code></pre> <p>Configuration of a Hive</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#items-type","title":"items Type","text":"<p><code>object</code> (Hive Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#hive-description-properties","title":"Hive Description Properties","text":"Property Type Required Nullable Defined by icache <code>object</code> Optional cannot be null Snitch Cluster Schema cores <code>array</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#icache","title":"icache","text":"<p>Detailed configuration of the current Hive's instruction cache.</p> <p><code>icache</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Hive's instruction cache configuration.)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#icache-type","title":"icache Type","text":"<p><code>object</code> (Hive's instruction cache configuration.)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#icache-default-value","title":"icache Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"size\": 8,\n\"sets\": 2,\n\"cacheline\": 128\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#cores","title":"cores","text":"<p>List of all cores in the respective hive.</p> <p><code>cores</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object[]</code> (Core Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#cores-type","title":"cores Type","text":"<p><code>object[]</code> (Core Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives-hive-description/#cores-constraints","title":"cores Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-hives/","title":"Hives Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/hives\n</code></pre> <p>Cores in a hive share an instruction cache and other shared infrastructure such as the PTW or the multiply/divide unit.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-hives/#hives-type","title":"hives Type","text":"<p><code>object[]</code> (Hive Description)</p>"},{"location":"schema-doc/snitch_cluster-properties-hives/#hives-constraints","title":"hives Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-id_width_in/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/id_width_in\n</code></pre> <p>Id width of the narrower AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-id_width_in/#id_width_in-type","title":"id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-id_width_in/#id_width_in-default-value","title":"id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-mode/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/mode\n</code></pre> <p>Supported mode by the processor, can be msu.</p> <p>Currently ignored.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-mode/#mode-type","title":"mode Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-name/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/name\n</code></pre> <p>Optional name for the generated wrapper.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-name/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-name/#name-default-value","title":"name Default Value","text":"<p>The default value is:</p> <pre><code>\"snitch_cluster\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-narrow_trans/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/narrow_trans\n</code></pre> <p>Outstanding transactions on the narrow AXI network</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-narrow_trans/#narrow_trans-type","title":"narrow_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-narrow_trans/#narrow_trans-default-value","title":"narrow_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_expose/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_expose\n</code></pre> <p>Whether to expose memory cut configuration inputs for implementation</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_expose/#sram_cfg_expose-type","title":"sram_cfg_expose Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-additionalproperties/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields/additionalProperties\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-additionalproperties/#additionalproperties-type","title":"additionalProperties Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-additionalproperties/#additionalproperties-constraints","title":"additionalProperties Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-default/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-propertynames/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields/propertyNames\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-propertynames/#propertynames-type","title":"propertyNames Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields-propertynames/#propertynames-constraints","title":"propertyNames Constraints","text":"<p>pattern: the string must match the following regular expression: </p> <pre><code>^[A-Za-z_][A-Za-z0-9_]*$\n</code></pre> <p>try pattern</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/","title":"Untitled object in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/sram_cfg_fields\n</code></pre> <p>The names and widths of memory cut configuration inputs needed for implementation</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#sram_cfg_fields-type","title":"sram_cfg_fields Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#sram_cfg_fields-constraints","title":"sram_cfg_fields Constraints","text":"<p>minimum number of properties: the minimum number of properties for this object is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#sram_cfg_fields-default-value","title":"sram_cfg_fields Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"reserved\": 1\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by Additional Properties <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#additional-properties","title":"Additional Properties","text":"<p>Additional properties are allowed, as long as they follow this schema:</p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#additionalproperties-type","title":"additionalProperties Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-sram_cfg_fields/#additionalproperties-constraints","title":"additionalProperties Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-default/","title":"Untitled undefined type in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm/default\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm-default/#default-type","title":"default Type","text":"<p>unknown</p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-banks/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm/properties/banks\n</code></pre> <p>Number of banks.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-banks/#banks-type","title":"banks Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-banks/#banks-examples","title":"banks Examples","text":"<pre><code>16\n</code></pre> <pre><code>32\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm/properties/size\n</code></pre> <p>Size of TCDM in KiByte. Divided in <code>n</code> banks. The total size must be divisible by the number of banks.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-size/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm-properties-size/#size-examples","title":"size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/","title":"Untitled object in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/tcdm\n</code></pre> <p>Configuration of the Tightly Coupled Data Memory of this cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#tcdm-type","title":"tcdm Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#tcdm-default-value","title":"tcdm Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"size\": 128,\n\"banks\": 32\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#undefined-properties","title":"undefined Properties","text":"Property Type Required Nullable Defined by size <code>number</code> Optional cannot be null Snitch Cluster Schema banks <code>number</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#size","title":"size","text":"<p>Size of TCDM in KiByte. Divided in <code>n</code> banks. The total size must be divisible by the number of banks.</p> <p><code>size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#size-type","title":"size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#size-examples","title":"size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#banks","title":"banks","text":"<p>Number of banks.</p> <p><code>banks</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#banks-type","title":"banks Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-tcdm/#banks-examples","title":"banks Examples","text":"<pre><code>16\n</code></pre> <pre><code>32\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/fpu_pipe_config\n</code></pre> <p>Pipeline configuration (i.e., position of the registers) of the FPU.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/#fpu_pipe_config-type","title":"fpu_pipe_config Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/#fpu_pipe_config-constraints","title":"fpu_pipe_config Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"BEFORE\"</code> <code>\"AFTER\"</code> <code>\"INSIDE\"</code> <code>\"DISTRIBUTED\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-fpu_pipe_config/#fpu_pipe_config-default-value","title":"fpu_pipe_config Default Value","text":"<p>The default value is:</p> <pre><code>\"BEFORE\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-iso_crossings/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/iso_crossings\n</code></pre> <p>Enable isochronous crossings, this clocks the integer core at half the speed of the rest of the system.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-iso_crossings/#iso_crossings-type","title":"iso_crossings Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp16\n</code></pre> <p>Latency setting (number of pipeline stages) for FP16.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16/#lat_comp_fp16-type","title":"lat_comp_fp16 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16/#lat_comp_fp16-default-value","title":"lat_comp_fp16 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16_alt/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp16_alt\n</code></pre> <p>Latency setting (number of pipeline stages) for FP16alt (brainfloat).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16_alt/#lat_comp_fp16_alt-type","title":"lat_comp_fp16_alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp16_alt/#lat_comp_fp16_alt-default-value","title":"lat_comp_fp16_alt Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp32/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp32\n</code></pre> <p>Latency setting (number of pipeline stages) for FP32.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp32/#lat_comp_fp32-type","title":"lat_comp_fp32 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp32/#lat_comp_fp32-default-value","title":"lat_comp_fp32 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp64/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp64\n</code></pre> <p>Latency setting (number of pipeline stages) for FP64.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp64/#lat_comp_fp64-type","title":"lat_comp_fp64 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp64/#lat_comp_fp64-default-value","title":"lat_comp_fp64 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp8\n</code></pre> <p>Latency setting (number of pipeline stages) for FP8.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8/#lat_comp_fp8-type","title":"lat_comp_fp8 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8/#lat_comp_fp8-default-value","title":"lat_comp_fp8 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8alt/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_comp_fp8alt\n</code></pre> <p>Latency setting (number of pipeline stages) for FP8alt.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8alt/#lat_comp_fp8alt-type","title":"lat_comp_fp8alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_comp_fp8alt/#lat_comp_fp8alt-default-value","title":"lat_comp_fp8alt Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_conv/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_conv\n</code></pre> <p>Latency setting (number of pipeline stages) for floating-point conversion instructions.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_conv/#lat_conv-type","title":"lat_conv Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_conv/#lat_conv-default-value","title":"lat_conv Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_noncomp/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_noncomp\n</code></pre> <p>Latency setting (number of pipeline stages) for floating-point non-computational instructions (except conversions), i.e., <code>classify</code>, etc.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_noncomp/#lat_noncomp-type","title":"lat_noncomp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_noncomp/#lat_noncomp-default-value","title":"lat_noncomp Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_sdotp/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/lat_sdotp\n</code></pre> <p>Latency setting (number of pipeline stages) for floating-point expanding dot product with accumulation.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_sdotp/#lat_sdotp-type","title":"lat_sdotp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-lat_sdotp/#lat_sdotp-default-value","title":"lat_sdotp Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/narrow_xbar_latency\n</code></pre> <p>Latency mode of the cluster crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/#narrow_xbar_latency-type","title":"narrow_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/#narrow_xbar_latency-constraints","title":"narrow_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-narrow_xbar_latency/#narrow_xbar_latency-default-value","title":"narrow_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_req/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_core_req\n</code></pre> <p>Insert Pipeline registers into data memory request path.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_req/#register_core_req-type","title":"register_core_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_rsp/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_core_rsp\n</code></pre> <p>Insert Pipeline registers into data memory response path.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_core_rsp/#register_core_rsp-type","title":"register_core_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_narrow/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_ext_narrow\n</code></pre> <p>Decouple narrow external AXI plug.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_narrow/#register_ext_narrow-type","title":"register_ext_narrow Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_wide/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_ext_wide\n</code></pre> <p>Decouple wide external AXI plug.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_ext_wide/#register_ext_wide-type","title":"register_ext_wide Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_in/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_fpu_in\n</code></pre> <p>Insert Pipeline registers immediately before FPU datapath</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_in/#register_fpu_in-type","title":"register_fpu_in Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_out/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_fpu_out\n</code></pre> <p>Insert Pipeline registers immediately after FPU datapath</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_out/#register_fpu_out-type","title":"register_fpu_out Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_req/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_fpu_req\n</code></pre> <p>Insert Pipeline register into the FPU request data path</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_fpu_req/#register_fpu_req-type","title":"register_fpu_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_req/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_offload_req\n</code></pre> <p>Insert Pipeline registers into off-loading path (request).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_req/#register_offload_req-type","title":"register_offload_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_rsp/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_offload_rsp\n</code></pre> <p>Insert Pipeline registers into off-loading path (response).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_offload_rsp/#register_offload_rsp-type","title":"register_offload_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_sequencer/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_sequencer\n</code></pre> <p>Insert Pipeline registers after sequencer.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_sequencer/#register_sequencer-type","title":"register_sequencer Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_tcdm_cuts/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/register_tcdm_cuts\n</code></pre> <p>Insert Pipeline registers after each memory cut.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-register_tcdm_cuts/#register_tcdm_cuts-type","title":"register_tcdm_cuts Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/","title":"Untitled string in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing/properties/wide_xbar_latency\n</code></pre> <p>Latency mode of the DMA crossbar.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/#wide_xbar_latency-type","title":"wide_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/#wide_xbar_latency-constraints","title":"wide_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter-properties-wide_xbar_latency/#wide_xbar_latency-default-value","title":"wide_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/","title":"Timing and Latency Tuning Parameter Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/timing\n</code></pre> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#timing-type","title":"timing Type","text":"<p><code>object</code> (Timing and Latency Tuning Parameter)</p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#timing-and-latency-tuning-parameter-properties","title":"Timing and Latency Tuning Parameter Properties","text":"Property Type Required Nullable Defined by iso_crossings <code>boolean</code> Optional cannot be null Snitch Cluster Schema narrow_xbar_latency <code>string</code> Optional cannot be null Snitch Cluster Schema wide_xbar_latency <code>string</code> Optional cannot be null Snitch Cluster Schema register_offload_req <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_offload_rsp <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_core_req <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_core_rsp <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_fpu_req <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_fpu_in <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_fpu_out <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_tcdm_cuts <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_ext_wide <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_ext_narrow <code>boolean</code> Optional cannot be null Snitch Cluster Schema register_sequencer <code>boolean</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp32 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp64 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp16 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp16_alt <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp8 <code>number</code> Optional cannot be null Snitch Cluster Schema lat_comp_fp8alt <code>number</code> Optional cannot be null Snitch Cluster Schema lat_noncomp <code>number</code> Optional cannot be null Snitch Cluster Schema lat_conv <code>number</code> Optional cannot be null Snitch Cluster Schema lat_sdotp <code>number</code> Optional cannot be null Snitch Cluster Schema fpu_pipe_config <code>string</code> Optional cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#iso_crossings","title":"iso_crossings","text":"<p>Enable isochronous crossings, this clocks the integer core at half the speed of the rest of the system.</p> <p><code>iso_crossings</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#iso_crossings-type","title":"iso_crossings Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency","title":"narrow_xbar_latency","text":"<p>Latency mode of the cluster crossbar.</p> <p><code>narrow_xbar_latency</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency-type","title":"narrow_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency-constraints","title":"narrow_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#narrow_xbar_latency-default-value","title":"narrow_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency","title":"wide_xbar_latency","text":"<p>Latency mode of the DMA crossbar.</p> <p><code>wide_xbar_latency</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency-type","title":"wide_xbar_latency Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency-constraints","title":"wide_xbar_latency Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"NO_LATENCY\"</code> <code>\"CUT_SLV_AX\"</code> <code>\"CUT_MST_AX\"</code> <code>\"CUT_ALL_AX\"</code> <code>\"CUT_SLV_PORTS\"</code> <code>\"CUT_MST_PORTS\"</code> <code>\"CUT_ALL_PORTS\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#wide_xbar_latency-default-value","title":"wide_xbar_latency Default Value","text":"<p>The default value is:</p> <pre><code>\"CUT_ALL_PORTS\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_req","title":"register_offload_req","text":"<p>Insert Pipeline registers into off-loading path (request).</p> <p><code>register_offload_req</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_req-type","title":"register_offload_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_rsp","title":"register_offload_rsp","text":"<p>Insert Pipeline registers into off-loading path (response).</p> <p><code>register_offload_rsp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_offload_rsp-type","title":"register_offload_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_req","title":"register_core_req","text":"<p>Insert Pipeline registers into data memory request path.</p> <p><code>register_core_req</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_req-type","title":"register_core_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_rsp","title":"register_core_rsp","text":"<p>Insert Pipeline registers into data memory response path.</p> <p><code>register_core_rsp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_core_rsp-type","title":"register_core_rsp Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_req","title":"register_fpu_req","text":"<p>Insert Pipeline register into the FPU request data path</p> <p><code>register_fpu_req</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_req-type","title":"register_fpu_req Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_in","title":"register_fpu_in","text":"<p>Insert Pipeline registers immediately before FPU datapath</p> <p><code>register_fpu_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_in-type","title":"register_fpu_in Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_out","title":"register_fpu_out","text":"<p>Insert Pipeline registers immediately after FPU datapath</p> <p><code>register_fpu_out</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_fpu_out-type","title":"register_fpu_out Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_tcdm_cuts","title":"register_tcdm_cuts","text":"<p>Insert Pipeline registers after each memory cut.</p> <p><code>register_tcdm_cuts</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_tcdm_cuts-type","title":"register_tcdm_cuts Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_wide","title":"register_ext_wide","text":"<p>Decouple wide external AXI plug.</p> <p><code>register_ext_wide</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_wide-type","title":"register_ext_wide Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_narrow","title":"register_ext_narrow","text":"<p>Decouple narrow external AXI plug.</p> <p><code>register_ext_narrow</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_ext_narrow-type","title":"register_ext_narrow Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_sequencer","title":"register_sequencer","text":"<p>Insert Pipeline registers after sequencer.</p> <p><code>register_sequencer</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#register_sequencer-type","title":"register_sequencer Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp32","title":"lat_comp_fp32","text":"<p>Latency setting (number of pipeline stages) for FP32.</p> <p><code>lat_comp_fp32</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp32-type","title":"lat_comp_fp32 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp32-default-value","title":"lat_comp_fp32 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp64","title":"lat_comp_fp64","text":"<p>Latency setting (number of pipeline stages) for FP64.</p> <p><code>lat_comp_fp64</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp64-type","title":"lat_comp_fp64 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp64-default-value","title":"lat_comp_fp64 Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16","title":"lat_comp_fp16","text":"<p>Latency setting (number of pipeline stages) for FP16.</p> <p><code>lat_comp_fp16</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16-type","title":"lat_comp_fp16 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16-default-value","title":"lat_comp_fp16 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16_alt","title":"lat_comp_fp16_alt","text":"<p>Latency setting (number of pipeline stages) for FP16alt (brainfloat).</p> <p><code>lat_comp_fp16_alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16_alt-type","title":"lat_comp_fp16_alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp16_alt-default-value","title":"lat_comp_fp16_alt Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8","title":"lat_comp_fp8","text":"<p>Latency setting (number of pipeline stages) for FP8.</p> <p><code>lat_comp_fp8</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8-type","title":"lat_comp_fp8 Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8-default-value","title":"lat_comp_fp8 Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8alt","title":"lat_comp_fp8alt","text":"<p>Latency setting (number of pipeline stages) for FP8alt.</p> <p><code>lat_comp_fp8alt</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8alt-type","title":"lat_comp_fp8alt Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_comp_fp8alt-default-value","title":"lat_comp_fp8alt Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_noncomp","title":"lat_noncomp","text":"<p>Latency setting (number of pipeline stages) for floating-point non-computational instructions (except conversions), i.e., <code>classify</code>, etc.</p> <p><code>lat_noncomp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_noncomp-type","title":"lat_noncomp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_noncomp-default-value","title":"lat_noncomp Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_conv","title":"lat_conv","text":"<p>Latency setting (number of pipeline stages) for floating-point conversion instructions.</p> <p><code>lat_conv</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_conv-type","title":"lat_conv Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_conv-default-value","title":"lat_conv Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_sdotp","title":"lat_sdotp","text":"<p>Latency setting (number of pipeline stages) for floating-point expanding dot product with accumulation.</p> <p><code>lat_sdotp</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_sdotp-type","title":"lat_sdotp Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#lat_sdotp-default-value","title":"lat_sdotp Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config","title":"fpu_pipe_config","text":"<p>Pipeline configuration (i.e., position of the registers) of the FPU.</p> <p><code>fpu_pipe_config</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config-type","title":"fpu_pipe_config Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config-constraints","title":"fpu_pipe_config Constraints","text":"<p>enum: the value of this property must be equal to one of the following values:</p> Value Explanation <code>\"BEFORE\"</code> <code>\"AFTER\"</code> <code>\"INSIDE\"</code> <code>\"DISTRIBUTED\"</code>"},{"location":"schema-doc/snitch_cluster-properties-timing-and-latency-tuning-parameter/#fpu_pipe_config-default-value","title":"fpu_pipe_config Default Value","text":"<p>The default value is:</p> <pre><code>\"BEFORE\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-user_width/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/user_width\n</code></pre> <p>User width of the narrower AXI plug into the cluster.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-user_width/#user_width-type","title":"user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-user_width/#user_width-default-value","title":"user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-vm_support/","title":"Untitled boolean in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/vm_support\n</code></pre> <p>Whether to provide virtual memory support (Sv32).</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-vm_support/#vm_support-type","title":"vm_support Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster-properties-vm_support/#vm_support-default-value","title":"vm_support Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-wide_trans/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/wide_trans\n</code></pre> <p>Outstanding transactions on the wide AXI network</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-wide_trans/#wide_trans-type","title":"wide_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-wide_trans/#wide_trans-default-value","title":"wide_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster-properties-zero_mem_size/","title":"Untitled number in Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json#/properties/zero_mem_size\n</code></pre> <p>Address region size reserved for the Zero-Memory in KiByte.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster.schema.json*"},{"location":"schema-doc/snitch_cluster-properties-zero_mem_size/#zero_mem_size-type","title":"zero_mem_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster-properties-zero_mem_size/#zero_mem_size-examples","title":"zero_mem_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/","title":"Snitch Cluster Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster.schema.json\n</code></pre> <p>Base description of a Snitch cluster and its internal structure and configuration.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster.schema.json"},{"location":"schema-doc/snitch_cluster/#snitch-cluster-schema-type","title":"Snitch Cluster Schema Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/snitch_cluster/#snitch-cluster-schema-properties","title":"Snitch Cluster Schema Properties","text":"Property Type Required Nullable Defined by name <code>string</code> Optional cannot be null Snitch Cluster Schema boot_addr <code>number</code> Optional cannot be null Snitch Cluster Schema cluster_base_addr <code>number</code> Optional cannot be null Snitch Cluster Schema tcdm <code>object</code> Optional cannot be null Snitch Cluster Schema cluster_periph_size <code>number</code> Optional cannot be null Snitch Cluster Schema zero_mem_size <code>number</code> Optional cannot be null Snitch Cluster Schema addr_width <code>number</code> Required cannot be null Snitch Cluster Schema data_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_data_width <code>number</code> Optional cannot be null Snitch Cluster Schema narrow_trans <code>number</code> Optional cannot be null Snitch Cluster Schema wide_trans <code>number</code> Optional cannot be null Snitch Cluster Schema id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema dma_id_width_in <code>number</code> Optional cannot be null Snitch Cluster Schema user_width <code>number</code> Optional cannot be null Snitch Cluster Schema dma_user_width <code>number</code> Optional cannot be null Snitch Cluster Schema hart_base_id <code>number</code> Optional cannot be null Snitch Cluster Schema mode <code>string</code> Optional cannot be null Snitch Cluster Schema vm_support <code>boolean</code> Optional cannot be null Snitch Cluster Schema dma_axi_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema dma_req_fifo_depth <code>number</code> Optional cannot be null Snitch Cluster Schema enable_debug <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_expose <code>boolean</code> Optional cannot be null Snitch Cluster Schema sram_cfg_fields <code>object</code> Optional cannot be null Snitch Cluster Schema timing <code>object</code> Optional cannot be null Snitch Cluster Schema hives <code>array</code> Required cannot be null Snitch Cluster Schema"},{"location":"schema-doc/snitch_cluster/#name","title":"name","text":"<p>Optional name for the generated wrapper.</p> <p><code>name</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#name-type","title":"name Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster/#name-default-value","title":"name Default Value","text":"<p>The default value is:</p> <pre><code>\"snitch_cluster\"\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#boot_addr","title":"boot_addr","text":"<p>Address from which all harts of the cluster start to boot. The default setting is <code>0x8000_0000</code>.</p> <p><code>boot_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#boot_addr-type","title":"boot_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#boot_addr-default-value","title":"boot_addr Default Value","text":"<p>The default value is:</p> <pre><code>2147483648\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#cluster_base_addr","title":"cluster_base_addr","text":"<p>Base address of this cluster.</p> <p><code>cluster_base_addr</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#cluster_base_addr-type","title":"cluster_base_addr Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#tcdm","title":"tcdm","text":"<p>Configuration of the Tightly Coupled Data Memory of this cluster.</p> <p><code>tcdm</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#tcdm-type","title":"tcdm Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster/#tcdm-default-value","title":"tcdm Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"size\": 128,\n\"banks\": 32\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#cluster_periph_size","title":"cluster_periph_size","text":"<p>Address region size reserved for cluster peripherals in KiByte.</p> <p><code>cluster_periph_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#cluster_periph_size-type","title":"cluster_periph_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#cluster_periph_size-examples","title":"cluster_periph_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#zero_mem_size","title":"zero_mem_size","text":"<p>Address region size reserved for the Zero-Memory in KiByte.</p> <p><code>zero_mem_size</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#zero_mem_size-type","title":"zero_mem_size Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#zero_mem_size-examples","title":"zero_mem_size Examples","text":"<pre><code>128\n</code></pre> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#addr_width","title":"addr_width","text":"<p>Length of the address, should be greater than 30. If the address is larger than 34 the data bus needs to be 64 bits in size.</p> <p><code>addr_width</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#addr_width-type","title":"addr_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#addr_width-default-value","title":"addr_width Default Value","text":"<p>The default value is:</p> <pre><code>48\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#data_width","title":"data_width","text":"<p>Data bus size of the integer core (everything except the DMA), must be 32 or 64. A double precision FPU requires 64 bit data length.</p> <p><code>data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#data_width-type","title":"data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#data_width-default-value","title":"data_width Default Value","text":"<p>The default value is:</p> <pre><code>64\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_data_width","title":"dma_data_width","text":"<p>Data bus size of DMA. Usually this is larger than the integer core as the DMA is used to efficiently transfer bulk of data.</p> <p><code>dma_data_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_data_width-type","title":"dma_data_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_data_width-default-value","title":"dma_data_width Default Value","text":"<p>The default value is:</p> <pre><code>512\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#narrow_trans","title":"narrow_trans","text":"<p>Outstanding transactions on the narrow AXI network</p> <p><code>narrow_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#narrow_trans-type","title":"narrow_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#narrow_trans-default-value","title":"narrow_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#wide_trans","title":"wide_trans","text":"<p>Outstanding transactions on the wide AXI network</p> <p><code>wide_trans</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#wide_trans-type","title":"wide_trans Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#wide_trans-default-value","title":"wide_trans Default Value","text":"<p>The default value is:</p> <pre><code>4\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#id_width_in","title":"id_width_in","text":"<p>Id width of the narrower AXI plug into the cluster.</p> <p><code>id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#id_width_in-type","title":"id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#id_width_in-default-value","title":"id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>2\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_id_width_in","title":"dma_id_width_in","text":"<p>Id width of the wide AXI plug into the cluster.</p> <p><code>dma_id_width_in</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_id_width_in-type","title":"dma_id_width_in Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_id_width_in-default-value","title":"dma_id_width_in Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#user_width","title":"user_width","text":"<p>User width of the narrower AXI plug into the cluster.</p> <p><code>user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#user_width-type","title":"user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#user_width-default-value","title":"user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_user_width","title":"dma_user_width","text":"<p>User width of the wide AXI plug into the cluster.</p> <p><code>dma_user_width</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_user_width-type","title":"dma_user_width Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_user_width-default-value","title":"dma_user_width Default Value","text":"<p>The default value is:</p> <pre><code>1\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#hart_base_id","title":"hart_base_id","text":"<p>Base hart id of the cluster. All cores get the respective cluster id plus their cluster position as the final <code>hart_id</code>.</p> <p><code>hart_base_id</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#hart_base_id-type","title":"hart_base_id Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#mode","title":"mode","text":"<p>Supported mode by the processor, can be msu.</p> <p>Currently ignored.</p> <p><code>mode</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>string</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#mode-type","title":"mode Type","text":"<p><code>string</code></p>"},{"location":"schema-doc/snitch_cluster/#vm_support","title":"vm_support","text":"<p>Whether to provide virtual memory support (Sv32).</p> <p><code>vm_support</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#vm_support-type","title":"vm_support Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster/#vm_support-default-value","title":"vm_support Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_axi_req_fifo_depth","title":"dma_axi_req_fifo_depth","text":"<p>Number of AXI FIFO entries of the DMA engine.</p> <p><code>dma_axi_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_axi_req_fifo_depth-type","title":"dma_axi_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_axi_req_fifo_depth-default-value","title":"dma_axi_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#dma_req_fifo_depth","title":"dma_req_fifo_depth","text":"<p>Number of request entries the DMA can keep</p> <p><code>dma_req_fifo_depth</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#dma_req_fifo_depth-type","title":"dma_req_fifo_depth Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster/#dma_req_fifo_depth-default-value","title":"dma_req_fifo_depth Default Value","text":"<p>The default value is:</p> <pre><code>3\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#enable_debug","title":"enable_debug","text":"<p>Whether to provide a debug request input and external debug features</p> <p><code>enable_debug</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#enable_debug-type","title":"enable_debug Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster/#enable_debug-default-value","title":"enable_debug Default Value","text":"<p>The default value is:</p> <pre><code>true\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_expose","title":"sram_cfg_expose","text":"<p>Whether to expose memory cut configuration inputs for implementation</p> <p><code>sram_cfg_expose</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>boolean</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_expose-type","title":"sram_cfg_expose Type","text":"<p><code>boolean</code></p>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields","title":"sram_cfg_fields","text":"<p>The names and widths of memory cut configuration inputs needed for implementation</p> <p><code>sram_cfg_fields</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Details)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields-type","title":"sram_cfg_fields Type","text":"<p><code>object</code> (Details)</p>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields-constraints","title":"sram_cfg_fields Constraints","text":"<p>minimum number of properties: the minimum number of properties for this object is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster/#sram_cfg_fields-default-value","title":"sram_cfg_fields Default Value","text":"<p>The default value is:</p> <pre><code>{\n\"reserved\": 1\n}\n</code></pre>"},{"location":"schema-doc/snitch_cluster/#timing","title":"timing","text":"<p><code>timing</code></p> <ul> <li> <p>is optional</p> </li> <li> <p>Type: <code>object</code> (Timing and Latency Tuning Parameter)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#timing-type","title":"timing Type","text":"<p><code>object</code> (Timing and Latency Tuning Parameter)</p>"},{"location":"schema-doc/snitch_cluster/#hives","title":"hives","text":"<p>Cores in a hive share an instruction cache and other shared infrastructure such as the PTW or the multiply/divide unit.</p> <p><code>hives</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object[]</code> (Hive Description)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster/#hives-type","title":"hives Type","text":"<p><code>object[]</code> (Hive Description)</p>"},{"location":"schema-doc/snitch_cluster/#hives-constraints","title":"hives Constraints","text":"<p>minimum number of items: the minimum number of items for this array is: <code>1</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-address/","title":"Untitled number in Snitch Cluster TB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json#/properties/dram/properties/address\n</code></pre> <p>Start address of DRAM.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster_tb.schema.json*"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-address/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-address/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-length/","title":"Untitled number in Snitch Cluster TB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json#/properties/dram/properties/length\n</code></pre> <p>Total size of DRAM in bytes.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status Unknown identifiability Forbidden Allowed none snitch_cluster_tb.schema.json*"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-length/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram-properties-length/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/","title":"DRAM Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json#/properties/dram\n</code></pre> <p>Main, off-chip DRAM.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster_tb.schema.json*"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#dram-type","title":"dram Type","text":"<p><code>object</code> (DRAM)</p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#dram-properties","title":"DRAM Properties","text":"Property Type Required Nullable Defined by address <code>number</code> Required cannot be null Snitch Cluster TB Schema length <code>number</code> Required cannot be null Snitch Cluster TB Schema"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#address","title":"address","text":"<p>Start address of DRAM.</p> <p><code>address</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#address-type","title":"address Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#address-constraints","title":"address Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#length","title":"length","text":"<p>Total size of DRAM in bytes.</p> <p><code>length</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>number</code></p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#length-type","title":"length Type","text":"<p><code>number</code></p>"},{"location":"schema-doc/snitch_cluster_tb-properties-dram/#length-constraints","title":"length Constraints","text":"<p>minimum: the value of this number must greater than or equal to: <code>0</code></p>"},{"location":"schema-doc/snitch_cluster_tb/","title":"Snitch Cluster TB Schema Schema","text":"<pre><code>http://pulp-platform.org/snitch/snitch_cluster_tb.schema.json\n</code></pre> <p>Description for a very simple single-cluster testbench. That is the most minimal system available. Most of the hardware is emulated by the testbench.</p> Abstract Extensible Status Identifiable Custom Properties Additional Properties Access Restrictions Defined In Can be instantiated No Unknown status No Forbidden Allowed none snitch_cluster_tb.schema.json"},{"location":"schema-doc/snitch_cluster_tb/#snitch-cluster-tb-schema-type","title":"Snitch Cluster TB Schema Type","text":"<p><code>object</code> (Snitch Cluster TB Schema)</p>"},{"location":"schema-doc/snitch_cluster_tb/#snitch-cluster-tb-schema-properties","title":"Snitch Cluster TB Schema Properties","text":"Property Type Required Nullable Defined by cluster <code>object</code> Required cannot be null Snitch Cluster TB Schema dram <code>object</code> Required cannot be null Snitch Cluster TB Schema"},{"location":"schema-doc/snitch_cluster_tb/#cluster","title":"cluster","text":"<p>Base description of a Snitch cluster and its internal structure and configuration.</p> <p><code>cluster</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object</code> (Snitch Cluster Schema)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb/#cluster-type","title":"cluster Type","text":"<p><code>object</code> (Snitch Cluster Schema)</p>"},{"location":"schema-doc/snitch_cluster_tb/#dram","title":"dram","text":"<p>Main, off-chip DRAM.</p> <p><code>dram</code></p> <ul> <li> <p>is required</p> </li> <li> <p>Type: <code>object</code> (DRAM)</p> </li> <li> <p>cannot be null</p> </li> <li> <p>defined in: Snitch Cluster TB Schema</p> </li> </ul>"},{"location":"schema-doc/snitch_cluster_tb/#dram-type","title":"dram Type","text":"<p><code>object</code> (DRAM)</p>"},{"location":"ug/benchmarking/","title":"Benchmarking","text":""},{"location":"ug/benchmarking/#choosing-the-right-platform","title":"Choosing the right platform","text":"<p>To start developing and benchmarking applications on Snitch, we advise to start developing on <code>banshee</code> and in a later step benchmark them on the RTL for cycle-accurate results. <code>banshee</code> is a good starting point to functionaly verify your application and to get a first impression of the performance. <code>banshee</code> can generate traces for you which allows to already have a rough estimate of the FPU utilization for instance. However, <code>banshee</code> does not model delays for instructions and memory accesses. Therefore, the cycle-accurate results are only possible with RTL simulations or on the FPGA.</p>"},{"location":"ug/benchmarking/#generating-traces","title":"Generating traces","text":"<p>To generate traces, <code>spike-dasm</code> must be installed and available in the <code>PATH</code>. Using the source from this repository supports disassembly of Snitch-custom instructions. We refer to the Quick Start to install <code>spike-dasm</code>.</p> <p>traces are automatically generated if you run the simulation when running the following target for RTL simulations from the <code>build</code> folder:</p> <pre><code>make run-rtl-my_binary\n</code></pre> <p>respectively for <code>banshee</code>:</p> <pre><code>make run-banshee-my_binary\n</code></pre> <p>Alternatively you can also generate traces for the RTL by running the following target in the <code>hw/system/my_platform</code> folder:</p> <pre><code>make traces\n</code></pre>"},{"location":"ug/benchmarking/#rtl-traces","title":"RTL Traces","text":"<p>The traces will be stored in the <code>logs</code> folder. The traces are generated for each core. The trace for core 0 is stored in <code>trace_hart_00000000.txt</code>. The trace for core 1 is stored in <code>trace_hart_00000001.txt</code> and so on. A trace file contains a summary of few statistics for the specific core that is appended at the end of the trace file. The following example shows such a summary:</p> <pre><code>## Performance metrics\n\nPerformance metrics for section 0 @ (11, 3459):\nsnitch_loads                                    89\nsnitch_stores                                   89\nfpss_loads                                       0\nsnitch_avg_load_latency                    22.9888\nsnitch_occupancy                            0.1334\nsnitch_fseq_rel_offloads                    0.0650\nfseq_yield                                     1.0\nfseq_fpu_yield                                 1.0\nfpss_section_latency                             0\nfpss_avg_fpu_latency                           1.0\nfpss_avg_load_latency                            0\nfpss_occupancy                              0.0093\nfpss_fpu_occupancy                          0.0093\nfpss_fpu_rel_occupancy                         1.0\ncycles                                        3449\ntotal_ipc                                   0.1427\n</code></pre> <p>The trace script also allows to split the execution into multiple sections. The sections are defined by reading from the <code>mcycle</code> CSR register. This register will return the current cycle count, but also serves as a trigger for the trace script, to start a new section. The following example shows how to split the execution into two sections:</p> <pre><code>#include \"sw/vendor/riscv-opcodes/encoding.h\"\nsize_t benchmark_get_cycle() { return read_csr(mcycle); }\n\n// End of section 0, Start of section 1\nbenchmark_get_cycle();\n\n// Execute kernel to be benchmarked\nmy_kernel();\n\n// End of section 1, Start of section 2\nbenchmark_get_cycle();\n</code></pre>"},{"location":"ug/directory_structure/","title":"Directory Structure","text":"<p>The project is organized as a monolithic repository. Both hardware and software are co-located. The top-level ist structured as follows:</p> <ul> <li><code>docs</code>: Documentation of the generator and software.   Contains additional user guides.</li> <li><code>hw</code>: All hardware components.</li> <li><code>sw</code>: Hardware independent software, libraries, runtimes etc.</li> <li><code>util</code>: Utility and helper scripts.</li> </ul>"},{"location":"ug/directory_structure/#hardware","title":"Hardware","text":"<ul> <li><code>ip</code>: Blocks which are instantiated in the design e.g., they are not   stand-alone.<ul> <li><code>src</code>: RTL sources</li> <li><code>test</code>: Test-benches</li> </ul> </li> <li><code>vendor</code>: \"Third-party\" components which are updated using the vendor script.   They are not (primarily) developed as part of this repository.</li> <li><code>system</code>: Specific systems built around Snitch components.<ul> <li><code>snitch-cluster</code>: Single cluster with a minimal environment to run   meaningful applications.</li> <li><code>occamy</code>: Multi-cluster system with an environment to run applications.</li> </ul> </li> </ul>"},{"location":"ug/directory_structure/#software","title":"Software","text":"<ul> <li><code>vendor</code>: Software components which come with their own license requirements   from third parties.</li> </ul>"},{"location":"ug/directory_structure/#vendored-source-directories","title":"Vendored Source Directories","text":"<p>This repo is organized in a monolithic fashion, i.e., all resources are checked in, we do not use git submodules or other ways of obtaining (HW) source files. But not all IPs are developed with this repository. We rely on the <code>vendor</code> tool to copy data from other repositories into the tree. We keep separate patches if changes are necessary. Ideally, patches should be upstreamed to the originating repository once things stabilize.</p>"},{"location":"ug/directory_structure/#creating-patches","title":"Creating Patches","text":"<p>If you need to make changes to one of the IPs in the <code>hw/vendor</code> subdirectory you need to obtain a set of patches which should be applied. CI will check whether there are any changes without patches. Upon obtaining the sources the vendor tool can automatically apply the patches for you.</p> <p>To create patches you first need to commit the changes. Then, in the current directory create a set of patches (it will create a file for each commit) for the commit (range) you are interested:</p> <pre><code>git format-patch --relative -o &lt;path/to/patch/folder&gt; HEAD^1\n</code></pre> <p>In the vendor file specify the path to the patches:</p> <pre><code>patch_dir: \"&lt;path/to/patch/folder&gt;\"\n</code></pre>"},{"location":"ug/directory_structure/#updating-sources","title":"Updating Sources","text":"<p>The vendor tool supports updating the sources. If you are in a clean directory with no changes (you can <code>git stash</code> to achieve this), the vendor tool can automatically commit the updates (<code>--commit</code>). For the <code>common_cells</code> for example:</p> <pre><code>./util/vendor.py hw/vendor/pulp_platform_common_cells.vendor.hjson --update --commit\n</code></pre>"},{"location":"ug/docker/","title":"Docker Container","text":"<p>Docker container based on Ubuntu 18.04 LTS containing various hardware and software development tools for Snitch.</p>"},{"location":"ug/docker/#pre-built-container","title":"Pre-built Container","text":"<p>There is an experimental version of the container available. To download, run:</p> <pre><code>$ docker pull ghcr.io/pulp-platform/snitch\n</code></pre>"},{"location":"ug/docker/#using-the-container","title":"Using the Container","text":"<p>To run container in interactive mode:</p> <pre><code>$ docker run -it -v $REPO_TOP:/repo -w /repo ghcr.io/pulp-platform/snitch\n</code></pre>"},{"location":"ug/docker/#local-build-instructions","title":"Local Build Instructions","text":"<p>In case you do not want to use the pre-built container you can also build the container in local mode:</p> <pre><code>$ cd $REPO_TOP\n$ sudo docker build -t ghcr.io/pulp-platform/snitch -f util/container/Dockerfile .\n</code></pre>"},{"location":"ug/docker/#limitations","title":"Limitations","text":"<p>Some operations require more memory than the default Docker VM might provide by default (2 GB on OS X for example). We recommend at least 16 GB of memory.</p> <p>The memory resources can be adjusted in the Docker daemon's settings.</p> <p>The swap space is limited to 4 GB in OS X default VM image. It doesn't seem as this is enough for using <code>verilator</code>, <code>cc</code> keeps crashing because it runs out of swap space (at least that is what <code>dmesg</code> tells us). Also 8 GB of swap space don't seem to be enough.</p> <pre><code>dd if=/dev/zero of=/var/lib/swap bs=1k count=8388608\nchmod go= /var/lib/swap &amp;&amp; mkswap /var/lib/swap\nswapon -v /var/lib/swap\n</code></pre>"},{"location":"ug/documentation/","title":"Documentation","text":"<p>Documentation of the generator and related infrastructure is hosted under <code>docs</code>. Static <code>html</code> documentation is build from the latest <code>master</code> branch by the CI. We use mkdocs together with the material theme. Before building the documentation, make sure you have the required dependencies installed:</p> <pre><code>pip install -r docs/requirements.txt\n</code></pre> <p>After everything is installed, you can build and serve a local copy by executing (in the root directory):</p> <pre><code>mkdocs serve\n</code></pre> <p>This opens a local webserver listening on http://127.0.0.1:8000/.</p>"},{"location":"ug/documentation/#organization","title":"Organization","text":"<p>The <code>docs</code> folder is organized as follows:</p> <ul> <li><code>rm</code>: Reference manuals, listings and detailed design decisions.</li> <li><code>ug</code>: User guides, more tutorial style texts to get contributors and user   up-to-speed.</li> <li><code>schema</code>: Contains the JSON schema used for data validation and generation.</li> <li><code>schema-doc</code>: Contains auto-generated documentation from the schema in the   <code>schema</code> folder. The documentation is generated using   <code>adobe/jsonschema2md</code>.</li> </ul>"},{"location":"ug/documentation/#re-generate-documentation","title":"Re-generate Documentation","text":"<p>Unfortunately, there isn't a good Python tool that generates schema to markdown documents, hence, we rely on <code>adobe/jsonschema2md</code> which requires <code>node</code> and <code>npm</code>. To re-generate the documentation execute (in the repository root):</p> <pre><code>jsonschema2md -d docs/schema/ -o docs/schema-doc -n\n</code></pre>"},{"location":"ug/getting_started/","title":"Getting Started","text":""},{"location":"ug/getting_started/#quick-start","title":"Quick Start","text":"<p>This will take you through the necessary steps to get a sample program running on a cluster of Snitch cores.</p> <ol> <li>Clone the repository.    <pre><code>git clone https://github.com/pulp-platform/snitch.git\n</code></pre></li> <li>Start the Docker container containing all necessary development tools. If you    do not want (or can not) use Docker please see the    prerequisites sections on how to obtain all required tools.     <pre><code>docker run -it -v `pwd`/snitch:/repo -w /repo ghcr.io/pulp-platform/snitch\n</code></pre></li> <li>To simulate a cluster of Snitch cores go to <code>hw/system/snitch_cluster</code> and build the Verilator model for the Snitch cluster.     <pre><code>cd hw/system/snitch_cluster\nmake bin/snitch_cluster.vlt\n</code></pre></li> <li>Build the software.     <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre></li> <li>Run a sample application on the Verilator model.     <pre><code>./bin/snitch_cluster.vlt sw/build/benchmark/benchmark-matmul-all\n</code></pre></li> <li>Generate the annotated traces and inspect the trace for core 0.     <pre><code>make traces\nless trace_hart_00000000.txt\n</code></pre>     Optionally you can inspect the dumped waveforms (<code>snitch_cluster.vcd</code>).     <code>spike-dasm</code> is required to generate the traces. Using the source from this repository supports disassembly of Snitch-custom instructions:     <pre><code>cd sw/vendor/riscv-isa-sim\nmkdir build; cd build\n../configure; make spike-dasm\n</code></pre></li> <li>Visualize the traces with the <code>util/trace/tracevis.py</code> script.     <pre><code>./util/trace/tracevis.py -o trace.json sw/build/benchmark/benchmark-matmul-all hw/system/snitch_cluster/logs/trace_hart_*.txt\n</code></pre>     The generated JSON file can be visualized with Trace-Viewer, or by loading it into Chrome's <code>about:tracing</code>. You can check out an example trace here.</li> <li>Annotate the traces with the <code>util/trace/annotate.py</code> script.     <pre><code>./util/trace/annotate.py -o annotated.s sw/build/benchmark/benchmark-matmul-all hw/system/snitch_cluster/logs/trace_hart_00001.txt\n</code></pre>     The generated <code>annotated.s</code> interleaves source code with retired instructions.</li> </ol>"},{"location":"ug/getting_started/#prerequisites","title":"Prerequisites","text":"<p>We recommend using the Docker container. If that should not be possible (because of missing privileges for example) you can install the required tools and components yourself.</p> <p>We recommend a reasonable new Linux distribution, for example, Ubuntu 18.04:</p> <ul> <li>Install essential packages:     <pre><code>sudo apt-get install build-essential python3 python3-pip python3-setuptools python3-wheel\n</code></pre></li> <li>Install the Python requirements using:     <pre><code>pip3 install --user -r python-requirements.txt\n</code></pre></li> <li>We are using <code>Bender</code> for file list generation. The easiest way to obtain <code>Bender</code> is through its binary release channel:     <pre><code>curl --proto '=https' --tlsv1.2 https://pulp-platform.github.io/bender/init -sSf | sh\n</code></pre></li> <li>Finally, get a RISC-V toolchain. We recommend obtaining binary releases for your operating system from SiFive's SW site.<ul> <li>Unpack the toolchain to a location of your choice (assuming <code>$RISCV</code> here). For example for Ubuntu you do:   <pre><code>mkdir -p $RISCV &amp;&amp; tar -x -f riscv64-unknown-elf-gcc-8.3.0-2020.04.0-x86_64-linux-ubuntu14.tar.gz --strip-components=1 -C $RISCV\n</code></pre></li> <li>Add the <code>$RISCV/bin</code> folder to your path variable.   <pre><code>export PATH=$RISCV/bin:$PATH\n</code></pre></li> <li>The downloaded toolchain is a multi-lib toolchain, nevertheless our SW scripts currently expect binaries named <code>riscv32-*</code>. You can just alias <code>riscv64-*</code> to <code>riscv32-*</code> using:   <pre><code>cd $RISCV/bin &amp;&amp; for file in riscv64-*; do ln -s $file $(echo \"$file\" | sed 's/^riscv64/riscv32/g'); done\n</code></pre></li> </ul> </li> </ul> <p>An alternative way, if you have Rust installed, is <code>cargo install bender</code>.</p>"},{"location":"ug/getting_started/#tool-requirements","title":"Tool Requirements","text":"<ul> <li><code>bender &gt;= 0.21</code></li> <li><code>verilator &gt;= 4.100</code></li> </ul>"},{"location":"ug/getting_started/#software-development","title":"Software Development","text":"<ul> <li>The <code>banshee</code> simulator is built using Rust. We recommend <code>rustup</code> if you haven't installed Rust already.</li> <li>C/C++ code is formatted using <code>clang-format</code>.</li> </ul>"},{"location":"ug/getting_started/#hardware-development","title":"Hardware Development","text":"<ul> <li>We use <code>verible</code> for style linting. Either build it from source or, if available for your platform,  use one of the pre-built images.</li> <li>We support simulation with Verilator, VCS and Modelsim.</li> </ul>"},{"location":"ug/occamy/","title":"Occamy Manycore System","text":"<p>Based on the Manticore architecture. The system itself is described in System Overview.</p> <p>The Occamy system is located in <code>hw/system/occamy</code>. Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy/#hardware-generation","title":"Hardware Generation","text":"<p>Go to the occamy directory, where most of your efforts will take place:</p> <pre><code>cd hw/system/occamy\n</code></pre> <p>Note: from now on, assume all the path to be relative to <code>hw/system/occamy</code>.</p> <p>Occamy is generated based on the config file <code>src/occamy_cfg.hjson</code>. In addition many peripherals are based on memory-mapped Register-files generated by the <code>Reggen</code> tool. To generate all HW and SW sources, run the following command:</p> <pre><code>make all\n</code></pre> <p>In case you want to run a smaller Occamy configuration with, e.g. only 1 snitch cluster (for faster RTL simulation), you can open <code>./src/occamy_cfg.hjson</code>, and reduce <code>nr_s1_quadrant</code> and <code>nr_clusters</code> (e.g. both to <code>1</code>). To make the changes effective,  you can run again the previously mentioned command:</p> <pre><code>make all\n</code></pre> <p>Then compile the hardware, e.g. for Questasim (see <code>setup-iis.md</code> for the needed environment to run the simulation on the ETH IIS machines):</p> <pre><code># Compile the RTL for Questasim\nmake bin/occamy_top.vsim\n\n# Compile the RTL for VCS\nmake bin/occamy_top.vcs\n</code></pre> <p>This <code>make</code> target compiled the RTL simulation model in <code>./work-vsim</code> and the frontend server (fesvr) C++ sources into <code>./work</code>. It also generated a script <code>./bin/occamy_top.vsim</code> or <code>./bin/occamy_top.vcs</code> (you can read the vsim file, the vcs is a binary) that you can use to start a Questasim or VCS session initialized with the ELF of the app/kernel you want to run. This script relies on the <code>fesvr</code> utilities to connect to the RTL simulation and load your ELF program into the simulated DRAM memory.</p>"},{"location":"ug/occamy/#simulation-of-sw-kernels","title":"Simulation of SW Kernels","text":"<p>All Occamy software is currently compiled with <code>CMake</code> so you might also want to look into <code>./sw/CMakeLists.txt</code> in this directory to see which applications or tests are included. In general you can run the following commands to build applications:</p> <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre> <p>Cmake tests can be run with:</p> <pre><code>make tests\n</code></pre> <p>You can now simulate a single binary as follows:</p> <pre><code># Questasim example\n#bin/occamy_top.vsim &lt;path-to-riscv-binary&gt;\nbin/occamy_top.vsim sw/build/snRuntime/test-snRuntime-simple\n\n# VCS example\nbin/occamy_top.vcs sw/build/snRuntime/test-snRuntime-simple\n</code></pre>"},{"location":"ug/occamy/#makefile-structure","title":"Makefile Structure","text":"<p>Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy/#utility-targets","title":"Utility Targets","text":"<p>In general, the Makefile includes the <code>Makefrag</code> in <code>util/Makefrag</code> at the root of this repository. In this <code>util</code> directory also contains scripts to analyze and visualize traces generated by the RTL simulations. Have a look at the following utility Makefile targets (you can execute them after running RTL simulation):</p> <ul> <li><code>traces</code> Generate the better readable traces in .logs/trace_hart_.txt with spike-dasm <li><code>annotate</code> Annotate the better readable traces in .logs/trace_hart_.s with the source code related with the retired instructions. <p>In addition, we have some general clean targets:</p> <ul> <li><code>clean</code> Clean everything except traces in logs directory.</li> <li><code>clean.logs</code> Delete all traces in logs director</li> </ul>"},{"location":"ug/occamy/#hw-and-source-generation","title":"HW and Source Generation","text":"<ul> <li><code>update-source</code> Update all SW and HW related sources (by, e.g., re-generating the RegGen registers and their c-header files).</li> </ul>"},{"location":"ug/occamy/#simulator-compilations","title":"Simulator Compilations","text":"<ul> <li><code>bin/occamy_top.vcs</code> Build compilation script and compile all sources for VCS simulation.</li> <li>@IIS: run the command as follows: <code>vcs-2020.12 make bin/occamy_top.vcs</code></li> <li> <p><code>clean.vcs</code> Clean all build directories and temporary files for VCS simulation.</p> </li> <li> <p><code>bin/occamy_top.vlt</code> Build compilation script and compile all sources for Verilator simulation.</p> </li> <li> <p><code>clean.vlt</code> Clean all build directories and temporary files for Verilator simulation.</p> </li> <li> <p><code>bin/occamy_top.vsim</code> Build compilation script and compile all sources for Questasim simulation.</p> </li> <li>@IIS: <code>QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/ CC=/gcc-5.3.0-linux_x86_64/bin/gcc CXX=/gcc-5.3.0-linux_x86_64/bin/g++ LD=/gcc-5.3.0-linux_x86_64/bin/ld make bin/occamy_top.vsim</code></li> <li><code>clean.vsim</code> Clean all build directories and temporary files for Questasim simulation.</li> </ul>"},{"location":"ug/occamy/#addressmap-generation","title":"Addressmap Generation","text":"<p>The following command generate various graphics of Occamy's Address Map based on the config file <code>src/occamy_cfg.hjson</code>. Therefore, the commands run in the background the <code>all</code> target.</p> <ul> <li><code>update-addrmap</code> Generate the addressmap in the following formats: MD, TEX.</li> <li><code>addrmap</code> Generate the addressmap in the following formats: MD, PNG, TEX, PDF.</li> <li><code>addrmap.tex</code> Generate the TEX addrmap source.</li> <li><code>addrmap.md</code> Generate the MD addrmap graphic.</li> <li><code>addrmap.png</code> Generate the PNG addrmap graphic.</li> <li><code>addrmap.pdf</code> Generate the PDF addrmap graphic.</li> <li><code>clean.addrmap</code> Delete all addrmap outputs.</li> <li><code>clean.addrmap.pdf</code> Delete all Latex outputs when generating the addrmap.pdf from addrmap.tex</li> </ul>"},{"location":"ug/occamy/#sw-build","title":"SW Build","text":"<p>Depending on which toolchain you want to use and whether you target <code>banshee</code> (our instruction-accurate emulator) you cann add the following flags when calling <code>cmake</code>: Interesting CMake options that can be set via <code>-D&lt;option&gt;=&lt;value&gt;</code>:</p> <ul> <li><code>CMAKE_TOOLCHAIN_FILE</code>: The compiler toolchain configuration to use. Acceptable values:<ul> <li><code>toolchain-gcc</code> for a GNU tolchain</li> <li><code>toolchain-llvm</code> for a LLVM/Clang toolchain (coming soon)</li> <li>Your own custom <code>&lt;toolchain&gt;.cmake</code> file; see <code>${SNITCH_REPO_ROOT}/cmake/toolchain-gcc.cmake</code> for reference</li> </ul> </li> <li><code>SNITCH_SIMULATOR</code>: Path to simulation binary absolute or relaive from the <code>sw/build/</code> directory such as <code>../../../../../hw/system/snitch_cluster/bin/snitch_cluster.vsim</code></li> <li><code>SNITCH_BANSHEE</code>: The <code>banshee</code> simulator binary to use for test execution.</li> <li><code>BUILD_TESTS</code>: Build Cmake tests. Can be <code>ON</code> or <code>OFF</code></li> </ul> <p>The following Makefile targets do set these command already:</p> <ul> <li><code>sw</code> Build SW into sw/build with the LLVM.</li> <li><code>sw.vcs</code> Build SW into sw/build with the LLVM (incl. tests) for VCS simulator.</li> <li><code>sw.vlt</code> Build SW into sw/build with the LLVM (incl. tests) for Verilator simulator.</li> <li><code>sw.vsim</code> Build SW into sw/build with the LLVM (incl. tests) for Questasim simulator.</li> <li><code>clean.sw</code> Delete sw/build.</li> </ul> <p>The following command build and run all specified cmake tests with the corresponding simulator:</p> <ul> <li><code>sw.test.vcs</code> Build SW and run all tests with VCS simulator.</li> <li><code>sw.test.vlt</code> Build SW and run all tests with Verilator simulator.</li> <li><code>sw.test.vsim</code> Build SW and run all tests with Questasim simulator.</li> </ul>"},{"location":"ug/occamy/#fpga","title":"FPGA","text":"<p>For the FPGA build flow have a look at the directory <code>fpga</code>. The following Makefile target basically enters this directory and builds Occamy's FPGA version:</p> <ul> <li><code>fpga</code> Build a small Occamy version (CVA6 + 1xcluster) for the VCU128 FPGA board.</li> </ul>"},{"location":"ug/occamy/#notes","title":"Notes","text":"<p>All Snitch cores are initially isolated and are not able to fetch instructions from the <code>bootrom</code>. The <code>cva6</code> manager core de-isolates the Snitch cores during booting. After that the manager core is trapped in an exception loop.</p>"},{"location":"ug/setup-iis/","title":"Getting Started at IIS","text":"<p>Below you can find the flow to run</p> <p>First, be aware of the shell which you are using. - We recommend using bash:     <pre><code>bash\n</code></pre></p>"},{"location":"ug/setup-iis/#scratch-folder","title":"Scratch folder","text":"<p>Due to the limited size of your home directory, we recomment working in your scratch. You can select between <code>/scratch</code>, <code>/scratch2</code>, <code>/scratch3</code>.</p> <ul> <li>Create yourself a scratch folder to work in it:     <pre><code># get your machine name\nexport MACHINE=$(hostname | cut -d . -f 1)\n# Look how much free space there is in the scratch folders\ndf -h | grep scratch\n# Pick one and create your folder in there, example :\nmkdir -p /scratch/${USER}\n# Note, contrary to your home folder, the scratch folder is local to your machine, but you can access it on any other machine over the network as follows:\ncd /usr/scratch/${MACHINE}/${USER}\n</code></pre></li> </ul>"},{"location":"ug/setup-iis/#installation","title":"Installation","text":"<p>At IIS the default version of some tools (<code>gcc</code>, <code>cmake</code>, ...) might be too old for certain projects.</p> <ul> <li> <p>Create a install directory to install the needed tools:     <pre><code>export INSTALL_DIR=/usr/scratch/${MACHINE}/${USER}/install-snitch\nmkdir $INSTALL_DIR\ncd $INSTALL_DIR\n</code></pre></p> </li> <li> <p>Use the pre-installed LLVM toolchain by adding the following to your path:     <pre><code>export PATH=/usr/pack/riscv-1.0-kgf/pulp-llvm-0.12.0/bin/:$PATH\n</code></pre></p> <p>or download the latest toolchain (andd add the location to your path): <pre><code>mkdir -p riscv-llvm\nexport LATEST_TAG=`curl -s -H \"Accept: application/vnd.github.v3+json\" https://api.github.com/repos/pulp-platform/llvm-project/releases/latest | grep '\"tag_name\":' | sed -E 's/.*\"([^\"]+)\".*/\\1/'`\nwget -qO- https://github.com/pulp-platform/llvm-project/releases/download/${LATEST_TAG}/riscv32-pulp-llvm-centos7-${LATEST_TAG}.tar.gz  | tar xvz --strip-components=1 -C riscv-llvm\n# go back to installation directory\ncd ${INSTALL_DIR}\n# add location to path\nexport PATH=${INSTALL_DIR}/riscv-llvm/bin/:${PATH}\n# unset temporary variables\nunset LATEST_TAG\n</code></pre></p> </li> <li> <p>Install the correct python version:     <pre><code>export PYTHON_VERSION=3.9.10\nmkdir -p python-${PYTHON_VERSION}\n# download into temporary directory\nmkdir tmp\ncd tmp\ncurl https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz | tar -xz --strip-components=1\n# install into location /usr/scratch/${MACHINE}/${USER}/python-${PYTHON_VERSION}\n./configure --prefix=${INSTALL_DIR}/python-${PYTHON_VERSION} --enable-ipv6\nmake -j$(nproc)\nmake install\n# go back to installation directory\ncd ${INSTALL_DIR}\n# delete temporary installation directory\nrm -rf tmp\n# add location to path\nexport PATH=${PWD}/python-${PYTHON_VERSION}/bin/:$PATH\n# unset temporary variables\nunset PYTHON_VERSION\n</code></pre></p> </li> <li> <p>Install the correct verilator version:     <pre><code>export VERILATOR_VERSION=4.100\nmkdir tmp\nwget -qO- https://github.com/verilator/verilator/archive/refs/tags/v${VERILATOR_VERSION}.tar.gz  | tar xvz --strip-components=1 -C tmp\nmkdir -p verilator-${VERILATOR_VERSION}\ncd tmp\nautoconf\nunset VERILATOR_ROOT\n./configure --prefix=${INSTALL_DIR}/verilator-${VERILATOR_VERSION}\nmake -j$(nproc)\nmake install\n# unset temporary variables\nunset VERILATOR_VERSION\n# go back to installation directory\ncd ${INSTALL_DIR}\n# create symbolic link\nexport PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/bin/:$PATH\"\n# export INCLUDE_PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/include/:$INCLUDE_PATH\"\n# export INCLUDE_PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/include/vltstd/:$INCLUDE_PATH\"\n</code></pre></p> </li> <li> <p>Install the correct <code>verible-verilog-lint</code> tool version:     <pre><code>export VERIBLE_VERSION=0.0-3222-gb19cdf44\nmkdir -p verible-${VERIBLE_VERSION}\ncd verible-${VERIBLE_VERSION}\ncurl -Ls -o verible.tar.gz https://github.com/google/verible/releases/download/v$VERIBLE_VERSION/verible-v$VERIBLE_VERSION-CentOS-7.9.2009-Core-x86_64.tar.gz\nchmod 777 ${INSTALL_DIR}/verible-${VERIBLE_VERSION}\ntar -C ${INSTALL_DIR}/verible-${VERIBLE_VERSION} -xf verible.tar.gz --strip-components=1\n# add location to path\nexport PATH=\"${INSTALL_DIR}/verible-${VERIBLE_VERSION}/bin/:$PATH\"\n# unset temporary variables\nunset VERIBLE_VERSION\n</code></pre></p> </li> </ul> <p>For installing the last missing pieces you need to clone the repository.</p> <ul> <li>Clone the repository:     <pre><code>cd /usr/scratch/${MACHINE}/${USER}\ngit clone git@github.com:pulp-platform/snitch.git\n</code></pre></li> <li> <p>Create virtual environment and install the <code>python-requirements.txt</code>:     <pre><code># create virtual environment with correct and newly installed python version\npython3.9 -m venv ~/.venvs/snitch\n# activate the virtual environment\nsource ~/.venvs/snitch/bin/activate\n# enter the cloned snitch directory\ncd snitch\n# install python requirements\npip install -r python-requirements.txt\n</code></pre></p> </li> <li> <p>Create a location for all you binaries in your home directory and create it to your path:     <pre><code>mkdir -p /home/${USER}/.snitch-bin\n# Add the created binary location to your path\nexport PATH=/home/${USER}/.snitch-bin:$PATH\n</code></pre></p> </li> <li> <p>Install the correct <code>spike-dasm</code> and create a symbolic link to your binary location <code>/home/${USER}/.snitch-bin</code>:     <pre><code>cd sw/vendor/riscv-isa-sim\nmkdir build\ncd build\n../configure\nmake spike-dasm\n# create symbolic link\nln -s /usr/scratch/${MACHINE}/${USER}/snitch/sw/vendor/riscv-isa-sim/build/spike-dasm /home/${USER}/.snitch-bin/spike-dasm\n</code></pre></p> </li> <li> <p>Use a newer <code>cmake</code> versions:     <pre><code># make sure you are in /home/${USER}/.snitch-bin\ncd /home/${USER}/.snitch-bin\nln -s /usr/sepp/bin/cmake-3.18.1 cmake\n</code></pre></p> </li> </ul>"},{"location":"ug/setup-iis/#tool-specific-versions","title":"Tool Specific Versions","text":"<p>Unfortunately, depending on which RTL simulator you are using, you need to use a different GCC version. Therefore, you have to set the following variables in addition to the above commands.</p> <p>Let's go to the system <code>snitch_cluster</code>:</p> <pre><code>cd /usr/scratch/${MACHINE}/${USER}/snitch\ncd hw/system/snitch_cluster\n</code></pre>"},{"location":"ug/setup-iis/#questasim","title":"Questasim","text":"<p>First, let's prepare the environment to use Questasim and let's run some tests:</p> <pre><code># Use Questasim's older GCC version for correct DPI compilation\nexport QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/\nexport CC=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/gcc\nexport CXX=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/g++\nexport LD=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/ld\n\n# compile HW for Questasim\nmake bin/snitch_cluster.vsim\n\n# build and run all snRuntime SW tests on Questasim\nmake sw.test.vsim\n\n# undo the variables if you change simulator\nunset QUESTA_HOME\nunset CC\nunset CXX\nunset LD\n</code></pre>"},{"location":"ug/setup-iis/#vcs","title":"VCS","text":"<p>Next, let's test prepare the environment for VCS and let's run some tests:</p> <pre><code># set GCC and G++ to version 9.2\nexport GCC_DIR=\"/usr/pack/gcc-9.2.0-af\"\nexport GCC_DIR2=\"${GCC_DIR}/linux-x64\"\n# use correct CC and CXX\nexport CC=\"${GCC_DIR2}/bin/gcc\"\nexport CXX=\"${GCC_DIR2}/bin/g++\"\n# set correct libraries\nexport LD_LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\nexport LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\n# set correct include paths\nexport C_INCLUDE_PATH=\"${GCC_DIR}/include\"\nexport CPLUS_INCLUDE_PATH=\"${GCC_DIR}/include\"\n# set correct PATH\nexport PATH=\"${GCC_DIR2}/linux-x64/bin:${PATH}\"\n\n# compile HW for VCS with correct VCS version prefix\nvcs-2020.12 make bin/snitch_cluster.vcs\n\n# build and run all snRuntime SW tests on VCS\nvcs-2020.12 make sw.test.vcs\n\n# undo the variables if you change simulator\nunset CC\nunset CXX\n</code></pre>"},{"location":"ug/setup-iis/#verilator","title":"Verilator","text":"<p>Verilator uses the same GCC compiler as VCS:</p> <pre><code># compile HW for Verilator\nmake bin/snitch_cluster.vlt\n\n# build and run all snRuntime SW tests on Verilator\nmake sw.test.vlt\n</code></pre>"},{"location":"ug/setup-iis/#summary","title":"Summary","text":"<p>Next time you start with a fresh terminal, you can execute the following commands to use the correct tools:</p> <pre><code>bash\n# set all required variables\nexport MACHINE=$(hostname | cut -d . -f 1)\nexport INSTALL_DIR=/usr/scratch/${MACHINE}/${USER}/install-snitch\nexport PYTHON_VERSION=3.9.10\nexport VERILATOR_VERSION=4.100\nexport VERIBLE_VERSION=0.0-3222-gb19cdf44\n\n# LLVM\n# pre-installed\nexport PATH=/usr/pack/riscv-1.0-kgf/pulp-llvm-0.12.0/bin/:$PATH\n# or manually installad\n#export PATH=${INSTALL_DIR}/riscv-llvm/bin/:${PATH}\n# Correct Python version\nexport PATH=${INSTALL_DIR}/python-${PYTHON_VERSION}/bin/:$PATH\n# Activate the virtual python environment\nsource ~/.venvs/snitch/bin/activate\n# Correct Verilator version\nexport PATH=\"${INSTALL_DIR}/verilator-${VERILATOR_VERSION}/bin/:$PATH\"\n# Correct Verible version\nexport PATH=\"${INSTALL_DIR}/verible-${VERIBLE_VERSION}/bin/:$PATH\"\n# Use correct `cmake` and `spike-dasm` version\nexport PATH=/home/${USER}/.snitch-bin:$PATH\n\n# unset all temporary variables\nunset MACHINE\nunset INSTALL_DIR\nunset PYTHON_VERSION\nunset VERILATOR_VERSION\nunset VERIBLE_VERSION\n</code></pre> <p>If you use Questasim, set the following variables:</p> <pre><code>export QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/\nexport CC=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/gcc\nexport CXX=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/g++\nexport LD=$QUESTA_HOME/gcc-5.3.0-linux_x86_64/bin/ld\n</code></pre> <p>If you use VCS or Verilator, set the following variables:</p> <pre><code># set GCC and G++ to version 9.2\nexport GCC_DIR=\"/usr/pack/gcc-9.2.0-af\"\nexport GCC_DIR2=\"${GCC_DIR}/linux-x64\"\n# use correct CC and CXX\nexport CC=\"${GCC_DIR2}/bin/gcc\"\nexport CXX=\"${GCC_DIR2}/bin/g++\"\n# set correct libraries\nexport LD_LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\nexport LIBRARY_PATH=\"${GCC_DIR2}/lib64\"\n# set correct include paths\nexport C_INCLUDE_PATH=\"${GCC_DIR}/include\"\nexport CPLUS_INCLUDE_PATH=\"${GCC_DIR}/include\"\n# set correct PATH\nexport PATH=\"${GCC_DIR2}/linux-x64/bin:${PATH}\"\n</code></pre>"},{"location":"ug/snitch_cluster/","title":"Snitch Cluster System","text":"<p>The Snitch cluster system (<code>hw/system/snitch_cluster</code>) is a fundamental system around a Snitch core. The cluster can be configured using a config file.</p> <p>The configuration parameters are documented using JSON schema, and documentation is generated for the schema. The configuration options can be found here.</p> <p>The cluster testbench simulates an infinite memory. The RISC-V ELF file is preloaded using RISC-V's Front-end Server (<code>fesvr</code>).</p>"},{"location":"ug/snitch_cluster/#getting-started","title":"Getting Started","text":"<p>In <code>hw/system/snicht_cluster</code>:</p> <ul> <li>Build the software:     <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre></li> <li> <p>Compile the model for your simulator:</p> Verilator <pre><code>make bin/snitch_cluster.vlt\n</code></pre> Questasim <pre><code>make bin/snitch_cluster.vsim\n</code></pre> VCS <pre><code>make bin/snitch_cluster.vcs\n</code></pre> </li> <li> <p>Run a binary on the simulator:</p> Verilator <pre><code>bin/snitch_cluster.vlt path/to/riscv/binary\n</code></pre> Questasim <pre><code># Headless\nbin/snitch_cluster.vsim path/to/riscv/binary\n# GUI\nbin/snitch_cluster.vsim.gui path/to/riscv/binary\n</code></pre> VCS <pre><code>bin/snitch_cluster.vcs path/to/riscv/binary\n</code></pre> </li> <li> <p>Build the traces in .logs/trace_hart_.txt with the help of spike-dasm:     <pre><code>make traces\n</code></pre> <li> <p>Annotate the traces in .logs/trace_hart_.s with the source code related with the retired instructions:     <pre><code>make annotate\n</code></pre> <li> <p>Get an overview of all Makefile targets:     <pre><code>make help\n</code></pre></p> </li>"},{"location":"ug/snitch_cluster/#configure-the-cluster","title":"Configure the Cluster","text":"<p>To configure the cluster with a different configuration, either edit the configuration files in the <code>cfg</code> folder or create a new configuration file and pass it to the Makefile:</p> <pre><code>make bin/snitch_cluster.vlt CFG=cfg/single-core.hjson\n</code></pre> <p>The default config is in <code>cfg/cluster.default.hjson</code>. Alternatively, you can also set your <code>CFG</code> environment variable, the Makefile will pick it up and override the standard config.</p>"},{"location":"ug/snitch_cluster/#using-verilator-with-llvm","title":"Using Verilator with LLVM","text":"<p>LLVM+clang can be used to build the Verilator model. Optionally specify a path to the LLVM toolchain in <code>CLANG_PATH</code> and set <code>VLT_USE_LLVM=ON</code>. For the verilated model itself to be complied with LLVM, verilator must be built with LLVM (<code>CC=clang CXX=clang++ ./configure</code>). The <code>VLT</code> environment variable can then be used to point to the verilator binary.</p> <pre><code># Optional: Specify which llvm to use\nexport CLANG_PATH=/path/to/llvm-12.0.1\n# Optional: Point to a verilator binary compiled with LLVM\nexport VLT=/path/to/verilator-llvm/bin/verilator\nmake VLT_USE_LLVM=ON bin/snitch_cluster.vlt\n</code></pre>"},{"location":"ug/occamy_system/1_overview/","title":"Occamy Overview","text":"<p>Occamy is the chiplet of a 2.5D integrated dual-chiplet system with 8GB private high-bandwidth memory (HBM) per chiplet. The scalable architecture, designed to operate at 1GHz, is organized around an extremely efficient integer RISC-V core coupled with a powerful FPU with SIMD, Minifloat (8-bit, 16-bit) and fused sum-dot-product capabilities. Thanks to two custom ISA extensions the RISC-V core can keep FPU utilization above 90% for ultra-efficient computation of data-parallel floating-point workloads. Each chiplet contains more than 200 such cores organized in groups of four compute clusters. Each cluster shares a tightly-coupled memory among eight compute cores and a dedicated DMA core orchestrating the flow of data. All clusters and system peripherals are managed by a linux-capable RISC-V core.</p> <p>The main architecture is developed in the open and is available on Github: https://github.com/pulp-platform/snitch/tree/occamy-tapeout</p> <p>The following tag was used for the tapeout: https://github.com/pulp-platform/snitch/tree/occamy-tapeout</p>"},{"location":"ug/occamy_system/1_overview/#features","title":"Features","text":"<ul> <li>GF12LP+ technology</li> <li>73 :math:<code>mm^2</code> die area</li> <li>6 Groups: 216 32-bit RISC-V Snitch cores</li> <li>4 cluster per group</li> <li>8 compute cores per cluster</li> <li>1 DMA core per cluster</li> <li>Linux-capable 64-bit manager core CVA6</li> <li>two AXI interconnet subsytems: 64-bit and 512-bit</li> <li>6x2 FLLs</li> <li>GF's Digital Frequency Generator (DFG)</li> <li>ETH FL</li> <li>Peripherals:</li> <li>JTAG</li> <li>SPI</li> <li>I2C</li> <li>UART</li> <li>Serial Link</li> <li>Timer</li> <li>8GB HBM2e memory</li> <li>Custom Die-to-Die IP:</li> <li>source synchronous</li> <li>Bunch-of-Wires (BoW)</li> <li>DDR</li> <li>Low speed: &lt;125 MHz</li> <li>Low bandwidth: &lt;128 Gb/s Dubplex</li> </ul>"},{"location":"ug/occamy_system/2_addrmap/","title":"Address Map","text":"<p>This is the current address map of occamy. Note that the Quadrants address map has its own table below.</p>"},{"location":"ug/occamy_system/2_addrmap/#occamy-address-map","title":"Occamy Address Map","text":"Name Size Status Start End DEBUG 4.0 KB used 0x0000_0000 0x0000_0fff - 16.0 MB free 0x0000_1000 0x00ff_ffff BOOTROM 128.0 KB used 0x0100_0000 0x0101_ffff - 15.9 MB free 0x0102_0000 0x01ff_ffff SOC_CTRL 4.0 KB used 0x0200_0000 0x0200_0fff FLL_SYSTEM 1.0 KB used 0x0200_1000 0x0200_13ff FLL_PERIPH 1.0 KB used 0x0200_1400 0x0200_17ff FLL_HBM2E 1.0 KB used 0x0200_1800 0x0200_1bff - 1023.0 B free 0x0200_1c00 0x0200_1fff UART 4.0 KB used 0x0200_2000 0x0200_2fff GPIO 4.0 KB used 0x0200_3000 0x0200_3fff I2C 4.0 KB used 0x0200_4000 0x0200_4fff CHIP_CTRL 4.0 KB used 0x0200_5000 0x0200_5fff TIMER 4.0 KB used 0x0200_6000 0x0200_6fff HBM_XBAR_CFG 4.0 KB used 0x0200_7000 0x0200_7fff - 16.0 MB free 0x0200_8000 0x02ff_ffff SPIM 128.0 KB used 0x0300_0000 0x0301_ffff - 15.9 MB free 0x0302_0000 0x03ff_ffff CLINT 1.0 MB used 0x0400_0000 0x040f_ffff - 15.0 MB free 0x0410_0000 0x04ff_ffff PCIE_CFG 128.0 KB used 0x0500_0000 0x0501_ffff - 15.9 MB free 0x0502_0000 0x05ff_ffff HBI_WIDE_CFG 64.0 KB used 0x0600_0000 0x0600_ffff - 15.9 MB free 0x0601_0000 0x06ff_ffff HBI_NARROW_CFG 64.0 KB used 0x0700_0000 0x0700_ffff - 15.9 MB free 0x0701_0000 0x07ff_ffff HBM_CFG_TOP 4.0 MB used 0x0800_0000 0x083f_ffff - 12.0 MB free 0x0840_0000 0x08ff_ffff HBM_CFG_PHY 1.0 MB used 0x0900_0000 0x090f_ffff - 15.0 MB free 0x0910_0000 0x09ff_ffff HBM_CFG_SEQ 64.0 KB used 0x0a00_0000 0x0a00_ffff - 7.9 MB free 0x0a01_0000 0x0a7f_ffff HBM_CFG_CTRL 64.0 KB used 0x0a80_0000 0x0a80_ffff - 7.9 MB free 0x0a81_0000 0x0aff_ffff QUAD_0_CFG 64.0 KB used 0x0b00_0000 0x0b00_ffff QUAD_1_CFG 64.0 KB used 0x0b01_0000 0x0b01_ffff QUAD_2_CFG 64.0 KB used 0x0b02_0000 0x0b02_ffff QUAD_3_CFG 64.0 KB used 0x0b03_0000 0x0b03_ffff QUAD_4_CFG 64.0 KB used 0x0b04_0000 0x0b04_ffff QUAD_5_CFG 64.0 KB used 0x0b05_0000 0x0b05_ffff - 15.6 MB free 0x0b06_0000 0x0bff_ffff PLIC 64.0 MB used 0x0c00_0000 0x0fff_ffff QUADRANTS 6.0 MB used 0x1000_0000 0x105f_ffff - 10.0 MB free 0x1060_0000 0x10ff_ffff SYS_IDMA_CFG 64.0 KB used 0x1100_0000 0x1100_ffff - 239.9 MB free 0x1101_0000 0x1fff_ffff PCIE 640.0 MB used 0x2000_0000 0x47ff_ffff PCIE 640.0 MB used 0x4800_0000 0x6fff_ffff SPM_NARROW 512.0 KB used 0x7000_0000 0x7007_ffff - 15.5 MB free 0x7008_0000 0x70ff_ffff SPM_WIDE 1.0 MB used 0x7100_0000 0x710f_ffff - 239.0 MB free 0x7110_0000 0x7fff_ffff HBM_0 1.0 GB used 0x8000_0000 0xbfff_ffff HBM_1 1.0 GB used 0xc000_0000 0xffff_ffff WIDE_ZERO_MEM 8.0 GB used 0x1_0000_0000 0x2_ffff_ffff - 52.0 GB free 0x3_0000_0000 0xf_ffff_ffff HBM_0 1.0 GB used 0x10_0000_0000 0x10_3fff_ffff HBM_1 1.0 GB used 0x10_4000_0000 0x10_7fff_ffff HBM_2 1.0 GB used 0x10_8000_0000 0x10_bfff_ffff HBM_3 1.0 GB used 0x10_c000_0000 0x10_ffff_ffff HBM_4 1.0 GB used 0x11_0000_0000 0x11_3fff_ffff HBM_5 1.0 GB used 0x11_4000_0000 0x11_7fff_ffff HBM_6 1.0 GB used 0x11_8000_0000 0x11_bfff_ffff HBM_7 1.0 GB used 0x11_c000_0000 0x11_ffff_ffff - 952.0 GB free 0x12_0000_0000 0xff_ffff_ffff HBI 1.0 TB used 0x100_0000_0000 0x1ff_ffff_ffff"},{"location":"ug/occamy_system/2_addrmap/#quadrants-address-map","title":"Quadrants Address Map","text":"Quadrant Cluster Name Size Start End 0 0 CLUSTER_TCDM 128.0 KB 0x1000_0000 0x1001_ffff 0 0 CLUSTER_PERIPHERAL 64.0 KB 0x1002_0000 0x1002_ffff 0 0 CLUSTER_ZERO_MEM 64.0 KB 0x1003_0000 0x1003_ffff 0 1 CLUSTER_TCDM 128.0 KB 0x1004_0000 0x1005_ffff 0 1 CLUSTER_PERIPHERAL 64.0 KB 0x1006_0000 0x1006_ffff 0 1 CLUSTER_ZERO_MEM 64.0 KB 0x1007_0000 0x1007_ffff 0 2 CLUSTER_TCDM 128.0 KB 0x1008_0000 0x1009_ffff 0 2 CLUSTER_PERIPHERAL 64.0 KB 0x100a_0000 0x100a_ffff 0 2 CLUSTER_ZERO_MEM 64.0 KB 0x100b_0000 0x100b_ffff 0 3 CLUSTER_TCDM 128.0 KB 0x100c_0000 0x100d_ffff 0 3 CLUSTER_PERIPHERAL 64.0 KB 0x100e_0000 0x100e_ffff 0 3 CLUSTER_ZERO_MEM 64.0 KB 0x100f_0000 0x100f_ffff 1 0 CLUSTER_TCDM 128.0 KB 0x1010_0000 0x1011_ffff 1 0 CLUSTER_PERIPHERAL 64.0 KB 0x1012_0000 0x1012_ffff 1 0 CLUSTER_ZERO_MEM 64.0 KB 0x1013_0000 0x1013_ffff 1 1 CLUSTER_TCDM 128.0 KB 0x1014_0000 0x1015_ffff 1 1 CLUSTER_PERIPHERAL 64.0 KB 0x1016_0000 0x1016_ffff 1 1 CLUSTER_ZERO_MEM 64.0 KB 0x1017_0000 0x1017_ffff 1 2 CLUSTER_TCDM 128.0 KB 0x1018_0000 0x1019_ffff 1 2 CLUSTER_PERIPHERAL 64.0 KB 0x101a_0000 0x101a_ffff 1 2 CLUSTER_ZERO_MEM 64.0 KB 0x101b_0000 0x101b_ffff 1 3 CLUSTER_TCDM 128.0 KB 0x101c_0000 0x101d_ffff 1 3 CLUSTER_PERIPHERAL 64.0 KB 0x101e_0000 0x101e_ffff 1 3 CLUSTER_ZERO_MEM 64.0 KB 0x101f_0000 0x101f_ffff 2 0 CLUSTER_TCDM 128.0 KB 0x1020_0000 0x1021_ffff 2 0 CLUSTER_PERIPHERAL 64.0 KB 0x1022_0000 0x1022_ffff 2 0 CLUSTER_ZERO_MEM 64.0 KB 0x1023_0000 0x1023_ffff 2 1 CLUSTER_TCDM 128.0 KB 0x1024_0000 0x1025_ffff 2 1 CLUSTER_PERIPHERAL 64.0 KB 0x1026_0000 0x1026_ffff 2 1 CLUSTER_ZERO_MEM 64.0 KB 0x1027_0000 0x1027_ffff 2 2 CLUSTER_TCDM 128.0 KB 0x1028_0000 0x1029_ffff 2 2 CLUSTER_PERIPHERAL 64.0 KB 0x102a_0000 0x102a_ffff 2 2 CLUSTER_ZERO_MEM 64.0 KB 0x102b_0000 0x102b_ffff 2 3 CLUSTER_TCDM 128.0 KB 0x102c_0000 0x102d_ffff 2 3 CLUSTER_PERIPHERAL 64.0 KB 0x102e_0000 0x102e_ffff 2 3 CLUSTER_ZERO_MEM 64.0 KB 0x102f_0000 0x102f_ffff 3 0 CLUSTER_TCDM 128.0 KB 0x1030_0000 0x1031_ffff 3 0 CLUSTER_PERIPHERAL 64.0 KB 0x1032_0000 0x1032_ffff 3 0 CLUSTER_ZERO_MEM 64.0 KB 0x1033_0000 0x1033_ffff 3 1 CLUSTER_TCDM 128.0 KB 0x1034_0000 0x1035_ffff 3 1 CLUSTER_PERIPHERAL 64.0 KB 0x1036_0000 0x1036_ffff 3 1 CLUSTER_ZERO_MEM 64.0 KB 0x1037_0000 0x1037_ffff 3 2 CLUSTER_TCDM 128.0 KB 0x1038_0000 0x1039_ffff 3 2 CLUSTER_PERIPHERAL 64.0 KB 0x103a_0000 0x103a_ffff 3 2 CLUSTER_ZERO_MEM 64.0 KB 0x103b_0000 0x103b_ffff 3 3 CLUSTER_TCDM 128.0 KB 0x103c_0000 0x103d_ffff 3 3 CLUSTER_PERIPHERAL 64.0 KB 0x103e_0000 0x103e_ffff 3 3 CLUSTER_ZERO_MEM 64.0 KB 0x103f_0000 0x103f_ffff 4 0 CLUSTER_TCDM 128.0 KB 0x1040_0000 0x1041_ffff 4 0 CLUSTER_PERIPHERAL 64.0 KB 0x1042_0000 0x1042_ffff 4 0 CLUSTER_ZERO_MEM 64.0 KB 0x1043_0000 0x1043_ffff 4 1 CLUSTER_TCDM 128.0 KB 0x1044_0000 0x1045_ffff 4 1 CLUSTER_PERIPHERAL 64.0 KB 0x1046_0000 0x1046_ffff 4 1 CLUSTER_ZERO_MEM 64.0 KB 0x1047_0000 0x1047_ffff 4 2 CLUSTER_TCDM 128.0 KB 0x1048_0000 0x1049_ffff 4 2 CLUSTER_PERIPHERAL 64.0 KB 0x104a_0000 0x104a_ffff 4 2 CLUSTER_ZERO_MEM 64.0 KB 0x104b_0000 0x104b_ffff 4 3 CLUSTER_TCDM 128.0 KB 0x104c_0000 0x104d_ffff 4 3 CLUSTER_PERIPHERAL 64.0 KB 0x104e_0000 0x104e_ffff 4 3 CLUSTER_ZERO_MEM 64.0 KB 0x104f_0000 0x104f_ffff 5 0 CLUSTER_TCDM 128.0 KB 0x1050_0000 0x1051_ffff 5 0 CLUSTER_PERIPHERAL 64.0 KB 0x1052_0000 0x1052_ffff 5 0 CLUSTER_ZERO_MEM 64.0 KB 0x1053_0000 0x1053_ffff 5 1 CLUSTER_TCDM 128.0 KB 0x1054_0000 0x1055_ffff 5 1 CLUSTER_PERIPHERAL 64.0 KB 0x1056_0000 0x1056_ffff 5 1 CLUSTER_ZERO_MEM 64.0 KB 0x1057_0000 0x1057_ffff 5 2 CLUSTER_TCDM 128.0 KB 0x1058_0000 0x1059_ffff 5 2 CLUSTER_PERIPHERAL 64.0 KB 0x105a_0000 0x105a_ffff 5 2 CLUSTER_ZERO_MEM 64.0 KB 0x105b_0000 0x105b_ffff 5 3 CLUSTER_TCDM 128.0 KB 0x105c_0000 0x105d_ffff 5 3 CLUSTER_PERIPHERAL 64.0 KB 0x105e_0000 0x105e_ffff 5 3 CLUSTER_ZERO_MEM 64.0 KB 0x105f_0000 0x105f_ffff - - EMPTY 10.0 MB 0x1060_0000 0x10ff_ffff"},{"location":"ug/occamy_system/3_system_components/","title":"System Components Description","text":""},{"location":"ug/occamy_system/3_system_components/#harts","title":"Harts","text":"<p>Every core in the system is associated to a unique RISC-V hart (hardware thread), identified by a unique index.</p> <p>The CVA6 core is assigned hart ID 0.</p> <p>The Snitch cores are hierarchically distributed across 6 groups, each containing 4 clusters, each in turn containing 9 cores. The group, cluster and core IDs in this hierarchical subdivision are used to calculate the hart ID:</p> <pre><code>   hart_id = group_id * 4 + cluster_id * 9 + core_id + 1\n</code></pre>"},{"location":"ug/occamy_system/3_system_components/#occamy-toplevel","title":"Occamy Toplevel","text":"<p>The Occamy architecture includes six groups each containing four clusters.</p> <p></p>"},{"location":"ug/occamy_system/3_system_components/#acceleration-groups-and-cluster","title":"Acceleration Groups and Cluster","text":""},{"location":"ug/occamy_system/3_system_components/#group","title":"Group","text":"<p>A group contains four Snitch clusters, a Constant Cache, and a Zero Memory. There are two crossbars for narrow 64-bit accesses used the Snitch LSU and the wide 512-bit AXI bus used by the instruction caches and the DMA. The group is a standalone clock-gated and reset domain and both narrow and wide AXI ports can be isolated.</p> <p></p> <p>The group and its components can be controlled via the :ref:<code>group_control_registers</code>, which are SoC-clocked and SoC-reset to provide reset, gating, and isolation control at all times.</p>"},{"location":"ug/occamy_system/3_system_components/#constant-cache","title":"Constant Cache","text":"<p>The constant cache can be dis-/en-abled and configured via the <code>group_control_registers</code>.</p>"},{"location":"ug/occamy_system/3_system_components/#tlbs","title":"TLBs","text":"<p>Each group features two independent TLBs, one for their narrow and one for their wide interface. They can be enabled, disabled, and configured via the <code>group_control_registers</code>. Accordingly, TLB configuration is system-reset, externally accessible while the group is clock-gated, and persists through internal group resets.</p> <p>After SoC reset, both TLBs are bypassed, passing all internal requests to the external NoC without filtering or translation. This can be toggled by the <code>TLB_WIDE_ENABLE</code> and <code>TLB_NARROW_ENABLE</code> registers, respectively.</p> <p>The TLBs are passive, meaning that their page tables are intended to be explicitly programmed before use. This can be done by the CVA6 host or by the group cores themselves if the TLB is bypassed or its registers are mapped in the narrow TLB's page table beforehand. Thus, the host can reserve full control of the memory mapping of each group or delegate it as needed.</p> <p>Both TLBs provide eight entries, each of which consists of an aligned block of registers. The first three register pairs encode three 36-bit page numbers required to address our 48-bit address space:</p> <ul> <li><code>PAGEIN_FIRST</code>: The first page of this entries' mapped input range</li> <li><code>PAGEIN_LAST</code>: The last page of this entries' mapped input range</li> <li><code>PAGEOUT_BASE</code>: The base page of this entries' output range</li> </ul> <p>Additionally, each entry has a seventh <code>FLAGS</code> register, with a <code>valid</code> bit indicating whether this entries' mapping is active and a <code>read_only</code> bit indicating whether writes to this region are permitted or blocked.</p> <p>When a request enters a non-bypassed TLB, it's base address' page will be matched against all active entries, with lower entry indices taking precedence. If a match is found, the address' page number will be replaced with the entries' <code>PAGEOUT_BASE</code>. If no match is found or the request is a write to a read-only region, an AXI error response is returned and the request does not pass through the TLB.</p> <p>Note: The group cores are not designed to handle AXI error responses in general, and their behavior is generally undefined in this case. Thus, the programmer must correctly configure any accessed external range in the TLBs before running code on group cores that accesses these memory regions.</p>"},{"location":"ug/occamy_system/3_system_components/#cluster","title":"Cluster","text":"<p>A cluster contains eight worker Snitch Cores, each of which combines a small integer core, a trace L0 instruction cache, and a large double-precision Floating Point Unit (FPU) kept busy with the SSR and FREP extensions. An additional ninth Snitch Core controls a cluster-level DMA engine and can be used for cluster coordination. The DMA-core has a smaller configuration FPU. All cores share a tightly-coupled 128 KiB L1 SPM. The Snitch Cores also share a two-way 8KiB L1 instruction cache and an integer Multiply Divide Unit (MulDiv). Finally, the DMA engine and L1 instruction cache share a duplex 512-bit AXI crossbar connection to the global memory system, which all Snitch cores can access through a 64-bit secondary AXI crossbar; both crossbars are internally connected for convenience.</p> <p></p>"},{"location":"ug/occamy_system/3_system_components/#cluster-memories","title":"Cluster Memories","text":"<p>A cluster contains a 128 KiB TCDM acting as a software-managed L1 cache. The TCDM is divided into 32 memory banks, each 64 bit wide, via a single-cycle SPM interconnect. Each core has four 64-bit ports to the TCDM to achieve full utilization on all three SSR streams. Blocks of eight banks form superbanks, which are accessed in parallel by the 512-bit DMA engine through a secondary wide interconnect.</p> <p>Each cluster contains 64KiB of Zero Memory. The Zero Memory is a memory where all read access are returning 0-data and all writes are accepted without an actual data write happening.</p>"},{"location":"ug/occamy_system/3_system_components/#dma","title":"DMA","text":"<p>The ninth Snitch core in the cluster is used for DMA transfers and/or worker cores coordination. It features a tightly-coupled DMA engine that can be controlled with custom ISA extensions. The DMA transfers can be issued asynchronously with the ISA extensions and the DMA supports a configurable number of outstanding DMA transfers. The DMA issues burst-based AXI transfers on the wide 512-bit AXI interconnect. The AXI bus is connected to the cluster crossbar from where a transaction can either be directed to the TCDM or out to the global memory system. The DMA also features a HW extension that allows to issue 2D transfers that are automatically remapped to 1D transfers.\u00a0</p>"},{"location":"ug/occamy_system/3_system_components/#fpu","title":"FPU","text":"<p>The FP-SS, bundles an IEEE-754 compliant FPU with a 32x64 bit registerfile. The FP-SS has its own dedicated scoreboard where it keeps track of all registers in a similar fashion to the integer core. Operations without dependencies can be issued back to back. In addition to the FPU it also contains a separate LSU dedicated to loading and storing floating-point data from/to the floating-point RF, the address calculation is performed in the integer core, which significantly reduces the area of the LSU. Furthermore, the Snitch-CC contains three SSRs  (2.1.1 SSR) which map, upon activation through a CSR write, registers ft0, ft1 and ft2 to memory streams. The FPU is parameterizable in supported precision and operation latency. All floating-point operations are fully pipelined (with possibly different pipeline depths).</p> <p>Supports the following number formats:</p> Format Total Bitwidth Exponent Width Mantissa Width IEEE binary64 (double) 64 11 52 IEEE binary32 (single) 32 8 23 IEEE binary16 (half) 16 5 10 custom binary16alt (bfloat16) 16 8 7 custom binary8 8 5 2 custom binary8alt 8 4 3 <p>The Occamy FPU is a modular design containing hardware units dedicated to each operation group. The enabled operation groups are: ADDMUL (fma, add, mul, ...), CAST (conversions), COMP (comparison), SDOTP (dot products). The support for FP division and square root has been disabled as such instructions will not often be used in the application scenarios targeted by Occamy. If FP division and square root are needed, they can be software emulated on the integer datapath.</p> <p>ADDMUL, CAST, and COMP operations can work on all the enabled formats. In contrast, SDOTP only targets low-mixed-precision operations.</p> <p>The ADDMUL operation group block contains: (i) one 64-bit FMA, (ii) one 32-bit FMA, (iii) two 16-bit FMAs, (iv) four 8-bit FMAs. Larger-precision units support lower-precision computations. That means that per FPU, one FP64 FMA/cycle, two FP32 FMA/cycle, four FP16 FMA/cycle, four FP16ALT FMA/cycle, eight FP8 FMA/cycle, or eight FP8ALT FMA/cycle can be computed.</p> <p></p> <p>The SDOTP operation group block contains two 16-to-32-bit ExSdotp (expanding sum of dot products) units and two 8-to-16-bit ExSdotp units. ExSdotp operations can be performed on operands expressed in FP8/FP8ALT/FP16/FP16ALT and using an accumulator which is expressed with twice as many bits (e.g. source format FP8ALT, accumulator format FP16). Larger precision units support lower-precision computations as well; thus two 16-to-32-bit ExSdotp per cycle per FPU can be carried out, or four 8-to-16-bit ExSdotp per cycle per FPU.</p> <p></p> <p>The CAST operation group block contains a single unit capable of performing all the conversions. The COMP operation group block contains (i) one FP64 unit, (ii) two FP32 units, (iii) four FP16 units, (iv) four FP16ALT units, (v) eight FP8 units, (vi) eight FP8ALT units.</p> <p>Each operation group block contains a parameterized pipeline depth: 3 sets of pipeline registers are used for ADDMUL and SDOTP, 2 for CONV, and 1 for COMP.</p> <p>To sum up:</p> Operation Latency [cycle] Throughput per FPU [output/cycle] FP64 FMA 4 1 FP32 FMA 4 2 FP16/FP16ALT FMA 4 4 FP8/FP8ALT FMA 4 8 All conversions 3 1 FP64 Comparisons 2 1 FP32 Comparisons 2 2 FP16/FP16ALT Comparisons 2 4 FP8/FP8ALT Comparisons 2 8 FP16/FP16ALT-to-FP32 ExSdotp 4 2 FP8/FP8ALT-to-FP16/FP16ALT ExSdotp 4 4 <p></p>"},{"location":"ug/occamy_system/3_system_components/#cluster-peripherals","title":"Cluster Peripherals","text":"<p>Each cluster hosts the following set of peripherals, accessible from the 64-bit AXI crossbar:</p> <ul> <li>Performance counters</li> <li>Cluster CLINT</li> <li>Hardware barrier unit</li> <li>Shared control and status registers (CSRs)</li> </ul> <p>The hardware barrier unit is described in <code>synchronization</code>. The cluster CLINT is described in <code>interrupts</code>.</p> <p>The cluster peripherals are memory-mapped in the <code>PERIPHERAL</code> region of each cluster's address space.</p>"},{"location":"ug/occamy_system/3_system_components/#serial-link","title":"Serial Link","text":"<p>Occamy features multiple custom serial link interfaces to connect the two dies together as well as to provide a connection to a host system like an FPGA. The serial link is a simple all-digital Double-Data-Rate (DDR) link with a source-synchronous interface. The link is scalable in terms of number of channels and lanes and occur in different configurations in Occamy. The Link has an AXI4 interface and implements Network, Data Link and Physical Layer.</p> <p></p>"},{"location":"ug/occamy_system/3_system_components/#die-2-die-wide","title":"Die-2-Die (Wide)","text":"<p>The wide Serial Link is the main Die-2-Die link which is used to transfer large amount of data from one die to the other die with the DMAs in Occamy. It is connected to the wide 512-bit AXI interconnect of the system. The wide Serial Link has a relatively high bandwidth due the large number of channels. The exact configuration is shown below.</p> Parameter Value #Channels 38 #Lanes 8 #Wires 684 Max I/O clock frequency 250 MHz (default 125 MHz) Max Bandwidth (duplex) 304 Gbps @ 250 MHz <p>Transfers over the Wide Serial Link to the other die can be done by issuing DMA requests where the MSB+1 (used bits) of the address is set i.e. adding an offset off <code>0x100_0000_0000</code>. The entire address space of the other die is accessible this way.</p> Address Configuration register base address <code>0x0600_0000</code> Start address <code>0x100_0000_0000</code> End address <code>0x1ff_ffff_ffff</code> <p>The AXI interface of the Wide Serial Link can be isolated with its <code>SERIAL_LINK_CTRL</code> register. Further the Wide Serial Link can be SW reset and clock gated.</p>"},{"location":"ug/occamy_system/3_system_components/#die-2-die-narrow","title":"Die-2-Die (Narrow)","text":"<p>The narrow Serial Link is connected to the narrow AXI interface of Occamy. It can be used to transfer smaller amounts of data from one die to the other die i.e. for the purpose of synchronization. Compared to the Wide serial Link, it has a relatively low bandwidth. The exact configuration is shown below.</p> Parameter Value #Channels 1 #Lanes 8 #Wires 18 Max I/O clock frequency 250 MHz (default 125 MHz) Max Bandwidth (duplex) 8 Gbps @ 250 MHz <p>The Narrow Serial Link can be accessed with normal load stores and by setting the MSB+1 (used bits) bit of the address i.e. adding an offset of <code>0x100_0000_0000</code>. The entire address space of the other die is accessible this way.</p> Address Configuration register base address <code>0x0700_0000</code> Start address <code>0x100_0000_0000</code> End address <code>0x1ff_ffff_ffff</code> <p>The AXI interface of the Narrow Serial Link can be isolated with its <code>SERIAL_LINK_SINGLE_CHANNEL_CTRL</code> register. Further the Narrow Serial Link can be SW reset and clock gated.</p>"},{"location":"ug/occamy_system/3_system_components/#fpga-off-system-link","title":"FPGA / Off-System Link","text":"<p>The FPGA Serial Link is used to connect Occamy to the outside i.e. an FPGA board. This can be used for instance to preload binaries or employ applications remotely.</p> Parameter Value #Channels 1 #Lanes 8 #Wires 18 Max I/O clock frequency 250 MHz (default 125 MHz) Max Bandwidth (duplex) 8 Gbps @ 250 MHz <p>The FPGA Serial Link is always-on and cannot be isolated, clock-gated. It is resetted with the global reset.</p> Address Configuration register base address <code>0x0500_0000</code> Start address <code>0x2000_0000</code> End address <code>0x6fff_ffff</code>"},{"location":"ug/occamy_system/3_system_components/#cva6","title":"CVA6","text":"<p>Occamy features one CVA6 core that serves as a manager of the system. CVA6 is an application-class, in-order, 64-bit RISC-V core. It supports the RV64GC ISA, meaning that it can run a rich operating system such as Linux. For more information on CVA6, refer to the <code>CVA6 GitHub repository</code> or its <code>user manual</code>. This section documents Occamy-specific modifications and the configuration of CVA6.</p>"},{"location":"ug/occamy_system/3_system_components/#configuration","title":"Configuration","text":"<p>CVA6 L1 data cache configuration | Parameter       | Value      | | --------------- | ---------- | | Write policy    | Write-back | | Size            |      2 KiB | | Cacheline width |   16 bytes | | Associativity   |      8-way | | #Sets           |        256 |</p> <p>CVA6 L1 instruction cache configuration | Parameter       | Value      | | --------------- | ---------- | | Size            |     16 KiB | | Cacheline width |   16 bytes | | Associativity   |      4-way | | #Sets           |        256 |</p> <p>CVA6 branch predictors | Component            | Configuration | | -------------------- | ------------- | | Return-address stack |     2 entries | | Branch target buffer |    32 entries | | Branch history table |   128 entries |</p> <p>CVA6 FPU configuration | Parameter           | Value    | | ------------------- | -------- | | XF16                | disabled | | XF16ALT             | disabled | | XF8                 | disabled | | XF8ALT              | disabled | | XFVEC               | disabled | | FP64 comp latency   | 3 cycles | | Div/Sqrt latency    | 2 cycles | | Non-comp latency    | 1 cycles | | Conversion latency  | 2 cycles | | Dot product latency | 2 cycles |</p> <p>Further CVA6 parameters | Parameter                       | Value      | | ------------------------------- | ---------- | | Pysical memory protection (PMP) |  8 entries | | Data TLB                        | 16 entries | | Instruction TLB                 | 16 entries |</p>"},{"location":"ug/occamy_system/3_system_components/#physical-memory-attributes-pmas","title":"Physical Memory Attributes (PMAs)","text":"Start End Description Executable Cached Non-Idempotent <code>0x0000_0000</code> <code>0x0000_0fff</code> Debug module yes no no <code>0x0000_1000</code> <code>0x00ff_ffff</code> unmapped no no yes <code>0x0100_0000</code> <code>0x0101_ffff</code> Bootrom yes no no <code>0x0102_0000</code> <code>0x6fff_ffff</code> Peripherals no no yes <code>0x7000_0000</code> <code>0x7007_ffff</code> SPM yes yes no <code>0x7008_0000</code> <code>0x7fff_ffff</code> unmapped no no yes <code>0x8000_0000</code> <code>0xffff_ffff</code> HBM 0,1 yes yes no <code>0x1_0000_0000</code> <code>0xf_ffff_ffff</code> unmapped no yes no <code>0x10_0000_0000</code> <code>0x11_ffff_ffff</code> HBM 0-7 yes yes no <code>0x12_0000_0000</code> <code>0xff_ffff_ffff</code> unmapped no yes no <code>0x100_0000_0000</code> end unmapped no no no"},{"location":"ug/occamy_system/3_system_components/#axi-interface","title":"AXI Interface","text":"<p>Compared to the upstream version of CVA6, a few minor custom modifications were done to its AXI interface.</p> <ol> <li>For compatibility with the remainder of the Occamy system, AXI requests by CVA6 are marked as modifiable (<code>ax.cache = 0x2</code>).</li> <li>As for all cores within Occamy, the <code>user</code> signal of all AXI requests issued by CVA6 contains <code>hartid + 1</code>. This allows for scalable atomics support.</li> </ol>"},{"location":"ug/occamy_system/3_system_components/#temporal-fence-instruction","title":"Temporal Fence Instruction","text":"<p>For experimental purposes, CVA6 in Occamy is extended by the custom temporal fence instruction (<code>fence.t</code>). <code>fence.t</code> can be used to prevent on-core timing channels, as described in the  <code>fence.t paper</code>_. <code>fence.t</code> is mapped to the opcode <code>0xfffff00b</code>. Furthermore, two custom CSRs that configure <code>fence.t</code> are added to enable a history-independent context-switch latency:</p> CSR Address <code>FENCE_T_PAD</code> 0x702 <code>FENCE_T_CEIL</code> 0x703 <p><code>fence.t</code> will defer completion until <code>FENCE_T_PAD</code> cycles have passed since the most recent CLINT timer interrupt.</p> <p>The <code>FENCE_T_CEIL</code> CSR serves for evaluation purposes and is subdivided into two fields:</p> Bit(s) Field 0 - 31 <code>fence_t_ceil</code> 32 <code>fence_t_src_sel</code> 33 - 63 Reserved <p><code>fence_t_ceil</code> contains the greatest observed number of cycles between the most recent CLINT timer interrupt and the completion of <code>fence.t</code> before padding. It is capped to <code>FENCE_T_PAD</code>. It can be used to determine an upper bound of the context-switch latency and hence a suitable value for <code>FENCE_T_PAD</code>.</p> <p>If <code>fence_t_src_sel</code> is set, <code>fence.t</code> will pad with respect to the most recent privilege switch from U-mode instead of the most recent CLINT timer interrupt. This is required for performance estimations e.g., based on fast-path context switches, which are not triggered by a CLINT timer interrupt.</p> <p>Note: Setting <code>fence_t_src_sel</code> might render the security properties (history-independent context switch latency) of <code>fence.t</code> invalid and should only be used for performance evaluation.</p> <ul> <li>CVA6 GitHub repository: https://github.com/openhwgroup/cva6</li> <li>user manual: https://docs.openhwgroup.org/projects/cva6-user-manual/</li> <li>fence.t paper: https://doi.org/10.1109/TC.2022.3212636</li> </ul>"},{"location":"ug/occamy_system/3_system_components/#system-level-dma","title":"System-level DMA","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#system-memories","title":"System Memories","text":"<p>Occamy has three system-level memories plus the 8GB HBM2e memory:</p> Memory Word width Size Start Address End Address Narrow SPM 64-bit 512 KB 0x00_7000_0000 0x00_7007_ffff Wide SPM 512-bit 1 MB 0x00_7100_0000 0x00_710f_ffff Wide Zero Memory 512-bit 8 GB 0x01_0000_0000 0x02_ffff_ffff HBM0 512-bit 1 GB 0x10_0000_0000 0x02_ffff_ffff HBM0 alias 512-bit 1 GB 0x00_8000_0000 0x00_bfff_ffff HBM1 512-bit 1 GB 0x10_4000_0000 0x02_ffff_ffff HBM1 alias 512-bit 1 GB 0x00_c000_0000 0x00_ffff_ffff HBM2 512-bit 1 GB 0x10_8000_0000 0x02_ffff_ffff HBM3 512-bit 1 GB 0x10_c000_0000 0x02_ffff_ffff HBM4 512-bit 1 GB 0x11_0000_0000 0x02_ffff_ffff HBM5 512-bit 1 GB 0x11_4000_0000 0x02_ffff_ffff HBM6 512-bit 1 GB 0x11_8000_0000 0x02_ffff_ffff HBM7 512-bit 1 GB 0x11_c000_0000 0x02_ffff_ffff <p>The Narrow SPM is mainly utilized by <code>CVA6</code>, the wide SPM can be used to store data or as a SW controlled data cache in front of the HBM. The rather large memory range of 8GB of the Wide Zero Memory helps to preload the HBM with 0s to avoid ECC errors when accessing non-full words with the system-level DMA.</p> <p>The 8GB HBM memory is by default a continous memory region where each bank has the size of 1GB. By changing <code>INTERLEAVED_ENA</code> from 0 to 1, the 8GB gets addressed in an interleaved fashion.</p>"},{"location":"ug/occamy_system/3_system_components/#axi-crossbars","title":"AXI crossbar(s)","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#peripherals","title":"Peripherals","text":"<p>Occamy includes the following peripherals:</p> <ul> <li>bootrom</li> <li>gpio</li> <li>i2c</li> <li>jtag</li> <li>plic</li> <li>clint</li> <li>spi</li> <li>timer</li> <li>uart</li> </ul>"},{"location":"ug/occamy_system/3_system_components/#soc-control-registers","title":"SoC Control Registers","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#chip-control-registers","title":"Chip Control Registers","text":"<p>TODO</p>"},{"location":"ug/occamy_system/3_system_components/#control-register-files-overview","title":"Control Register Files Overview","text":"<p>TODO</p>"},{"location":"ug/occamy_system/4_clocking/","title":"Clocking and Reset Strategy","text":""},{"location":"ug/occamy_system/4_clocking/#general","title":"General","text":"<p>In Occamy we have four high-level reset and clocking domains, three of them are open-source:</p> <ul> <li>SoC: first wake-up domain, contains CVA6, narrow and wide SPM, all peripherals</li> <li>6x Group domains: Each Group can be kept individually in reset, being clock gated and isolated from the global interconnects</li> <li>Die-to-die Serial Links: Each serial link (Narrow and Wide) can be kept individually in reset, being clock gated and isolated from the global interconnects</li> </ul>"},{"location":"ug/occamy_system/4_clocking/#reset-strategy","title":"Reset Strategy","text":"<p>In the following we describe the reset strategy to assert and de-assert various clock/reset domains.</p>"},{"location":"ug/occamy_system/4_clocking/#global-async-reset-soc-domain","title":"Global Async Reset \u2013 SoC Domain","text":"<p>The global reset is asynchronous and is assumed to be asserted for multiple cycles while the FLL\u2019s or bypassed clocks are slow. This should ensure that any FF (async or sync resetable) is reseted and put into an known state. Most likely the clocks need to be disable to de-assert the global reset to ensure the reset de-assertion has propagated to each register before we re-enable the reset.</p>"},{"location":"ug/occamy_system/4_clocking/#group-domains","title":"Group Domains","text":"<p>The Group domains is not reset with the global reset, but contains three control registers to control the isolation from the AXI interconnect, the clock gating and the reset. The global reset ensures that the each Group domain is:</p> <ul> <li>AXI isolated and stays AXI isolated</li> <li>Clock gated</li> <li>Reset is de-asserted to avoid large current spikes</li> </ul> <p>CVA6 is the reset controller and can wake up the domain with the following sequence:</p> <ol> <li>Assert reset (synchronous)</li> <li>De-assert reset (synchronous)</li> <li>Enable clock</li> <li>De-isolate</li> </ol>"},{"location":"ug/occamy_system/4_clocking/#die-to-die-serial-link-domains","title":"Die-to-Die Serial Link Domains","text":"<p>The Die2Die domains is not reset with the global reset, but contains three control registers to control the isolation from the AXI interconnect, the clock gating and the reset. The global reset ensures that the each Die2Die domain is:</p> <ul> <li>AXI isolated and stays AXI isolated</li> <li>Clock gated</li> <li>Reset is de-asserted to avoid large current spikes</li> </ul> <p>CVA6 is the reset controller and can wake up the domain with the following sequence:</p> <ol> <li>Assert reset (synchronous)</li> <li>De-assert reset (synchronous)</li> <li>Enable clock</li> <li>De-isolate</li> </ol>"},{"location":"ug/occamy_system/4_clocking/#clocking-strategy","title":"Clocking Strategy","text":"<p>We have three main clock domains, two of them are open-source. Each of which is driven by the output clock of an FLL instance on the taped-out system. The (open-source) clock domains are listed in the following table:</p> Clock domain Nominal Frequency [GHz] System (CVA6, Cluster, Groups, Serial Links) 1 Peripheral 0.3"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/","title":"Interrupts and Synchronization","text":""},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#interrupts","title":"Interrupts","text":""},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#software-and-timer-interrupts","title":"Software and Timer Interrupts","text":"<p>The system-level CLINT implements machine-level timer and software-generated interrupts, in compliance with the RISC-V priviliged specification. It is described in detail in the <code>system_clint</code> section.</p>"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#cluster-interrupts","title":"Cluster Interrupts","text":"<p>Additionally, each Snitch cluster provides a Cluster-Local CLINT (CL-CLINT) to efficiently raise inter-processor interrupts within each cluster. These cluster interrupts are implemented as a custom machine-level interrupt source, using the reserved register bits indicated by the RISC-V priviliged specification.</p> <p>The CL-CLINT is a Snitch cluster peripheral and is exposed by the <code>CL_CLINT_SET</code> and <code>CL_CLINT_CLEAR</code> registers. As the names imply, these registers can be used to (atomically) set and clear the cluster-interrupt pending bits within the cluster.</p>"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#synchronization","title":"Synchronization","text":"<p>Synchronization among harts in Occamy can be implemented purely in software by exploiting either of two underlying hardware mechanisms:</p> <ul> <li>Inter-processor interrupts (IPIs)</li> <li>Atomics</li> </ul> <p>Several convenience functions are provided in the <code>CVA6Runtime</code> and <code>SnRuntime</code> which make use of these features under the hood, e.g. to implement mutex or barrier primitives.</p>"},{"location":"ug/occamy_system/5_interrupts_and_synchronization/#cluster-hardware-barrier-unit","title":"Cluster hardware barrier unit","text":"<p>In addition to the software-based synchronization methods, every Snitch cluster provides a hardware barrier unit to efficiently synchronize the cores in a cluster. The hardware barrier unit is a Snitch cluster peripheral and is mapped to the <code>HW_BARRIER</code> register.</p> <p>To synchronize the cores, each core issues a load instruction to the <code>HW_BARRIER</code> register. The register load is blocking, i.e. it stalls the core, until all cores have arrived at the barrier, i.e. have issued the load instruction. Barrier departure occurs as a result of receiving a return value from the load instruction, thus retiring the load instruction.</p>"},{"location":"ug/occamy_system/occamy_ug/","title":"Occamy Manycore System","text":"<p>Based on the Manticore architecture. The system itself is described in System Overview.</p> <p>The Occamy system is located in <code>hw/system/occamy</code>. Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#hardware-generation","title":"Hardware Generation","text":"<p>Go to the occamy directory, where most of your efforts will take place:</p> <pre><code>cd hw/system/occamy\n</code></pre> <p>Note: from now on, assume all the path to be relative to <code>hw/system/occamy</code>.</p> <p>Occamy is generated based on the config file <code>src/occamy_cfg.hjson</code>. In addition many peripherals are based on memory-mapped Register-files generated by the <code>Reggen</code> tool. To generate all HW and SW sources, run the following command:</p> <pre><code>make all\n</code></pre> <p>In case you want to run a smaller Occamy configuration with, e.g. only 1 snitch cluster (for faster RTL simulation), you can open <code>./src/occamy_cfg.hjson</code>, and reduce <code>nr_s1_quadrant</code> and <code>nr_clusters</code> (e.g. both to <code>1</code>). To make the changes effective,  you can run again the previously mentioned command:</p> <pre><code>make all\n</code></pre> <p>Then compile the hardware, e.g. for Questasim (see <code>setup-iis.md</code> for the needed environment to run the simulation on the ETH IIS machines):</p> <pre><code># Compile the RTL for Questasim\nmake bin/occamy_top.vsim\n\n# Compile the RTL for VCS\nmake bin/occamy_top.vcs\n</code></pre> <p>This <code>make</code> target compiled the RTL simulation model in <code>./work-vsim</code> and the frontend server (fesvr) C++ sources into <code>./work</code>. It also generated a script <code>./bin/occamy_top.vsim</code> or <code>./bin/occamy_top.vcs</code> (you can read the vsim file, the vcs is a binary) that you can use to start a Questasim or VCS session initialized with the ELF of the app/kernel you want to run. This script relies on the <code>fesvr</code> utilities to connect to the RTL simulation and load your ELF program into the simulated DRAM memory.</p>"},{"location":"ug/occamy_system/occamy_ug/#simulation-of-sw-kernels","title":"Simulation of SW Kernels","text":"<p>All Occamy software is currently compiled with <code>CMake</code> so you might also want to look into <code>./sw/CMakeLists.txt</code> in this directory to see which applications or tests are included. In general you can run the following commands to build applications:</p> <pre><code>mkdir sw/build\ncd sw/build\ncmake ..\nmake\n</code></pre> <p>Cmake tests can be run with:</p> <pre><code>make tests\n</code></pre> <p>You can now simulate a single binary as follows:</p> <pre><code># Questasim example\n#bin/occamy_top.vsim &lt;path-to-riscv-binary&gt;\nbin/occamy_top.vsim sw/build/snRuntime/test-snRuntime-simple\n\n# VCS example\nbin/occamy_top.vcs sw/build/snRuntime/test-snRuntime-simple\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#makefile-structure","title":"Makefile Structure","text":"<p>Run the following command to get an overview of all available Makefile targets:</p> <pre><code>make help\n</code></pre>"},{"location":"ug/occamy_system/occamy_ug/#utility-targets","title":"Utility Targets","text":"<p>In general, the Makefile includes the <code>Makefrag</code> in <code>util/Makefrag</code> at the root of this repository. In this <code>util</code> directory also contains scripts to analyze and visualize traces generated by the RTL simulations. Have a look at the following utility Makefile targets (you can execute them after running RTL simulation):</p> <ul> <li><code>traces</code> Generate the better readable traces in .logs/trace_hart_.txt with spike-dasm <li><code>annotate</code> Annotate the better readable traces in .logs/trace_hart_.s with the source code related with the retired instructions. <p>In addition, we have some general clean targets:</p> <ul> <li><code>clean</code> Clean everything except traces in logs directory.</li> <li><code>clean.logs</code> Delete all traces in logs director</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#hw-and-source-generation","title":"HW and Source Generation","text":"<ul> <li><code>update-source</code> Update all SW and HW related sources (by, e.g., re-generating the RegGen registers and their c-header files).</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#simulator-compilations","title":"Simulator Compilations","text":"<ul> <li><code>bin/occamy_top.vcs</code> Build compilation script and compile all sources for VCS simulation.</li> <li>@IIS: run the command as follows: <code>vcs-2020.12 make bin/occamy_top.vcs</code></li> <li> <p><code>clean.vcs</code> Clean all build directories and temporary files for VCS simulation.</p> </li> <li> <p><code>bin/occamy_top.vlt</code> Build compilation script and compile all sources for Verilator simulation.</p> </li> <li> <p><code>clean.vlt</code> Clean all build directories and temporary files for Verilator simulation.</p> </li> <li> <p><code>bin/occamy_top.vsim</code> Build compilation script and compile all sources for Questasim simulation.</p> </li> <li>@IIS: <code>QUESTA_HOME=/usr/pack/modelsim-10.7b-kgf/questasim/ CC=/gcc-5.3.0-linux_x86_64/bin/gcc CXX=/gcc-5.3.0-linux_x86_64/bin/g++ LD=/gcc-5.3.0-linux_x86_64/bin/ld make bin/occamy_top.vsim</code></li> <li><code>clean.vsim</code> Clean all build directories and temporary files for Questasim simulation.</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#addressmap-generation","title":"Addressmap Generation","text":"<p>The following command generate various graphics of Occamy's Address Map based on the config file <code>src/occamy_cfg.hjson</code>. Therefore, the commands run in the background the <code>all</code> target.</p> <ul> <li><code>update-addrmap</code> Generate the addressmap in the following formats: MD, TEX.</li> <li><code>addrmap</code> Generate the addressmap in the following formats: MD, PNG, TEX, PDF.</li> <li><code>addrmap.tex</code> Generate the TEX addrmap source.</li> <li><code>addrmap.md</code> Generate the MD addrmap graphic.</li> <li><code>addrmap.png</code> Generate the PNG addrmap graphic.</li> <li><code>addrmap.pdf</code> Generate the PDF addrmap graphic.</li> <li><code>clean.addrmap</code> Delete all addrmap outputs.</li> <li><code>clean.addrmap.pdf</code> Delete all Latex outputs when generating the addrmap.pdf from addrmap.tex</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#sw-build","title":"SW Build","text":"<p>Depending on which toolchain you want to use and whether you target <code>banshee</code> (our instruction-accurate emulator) you cann add the following flags when calling <code>cmake</code>: Interesting CMake options that can be set via <code>-D&lt;option&gt;=&lt;value&gt;</code>:</p> <ul> <li><code>CMAKE_TOOLCHAIN_FILE</code>: The compiler toolchain configuration to use. Acceptable values:<ul> <li><code>toolchain-gcc</code> for a GNU tolchain</li> <li><code>toolchain-llvm</code> for a LLVM/Clang toolchain (coming soon)</li> <li>Your own custom <code>&lt;toolchain&gt;.cmake</code> file; see <code>${SNITCH_REPO_ROOT}/cmake/toolchain-gcc.cmake</code> for reference</li> </ul> </li> <li><code>SNITCH_SIMULATOR</code>: Path to simulation binary absolute or relaive from the <code>sw/build/</code> directory such as <code>../../../../../hw/system/snitch_cluster/bin/snitch_cluster.vsim</code></li> <li><code>SNITCH_BANSHEE</code>: The <code>banshee</code> simulator binary to use for test execution.</li> <li><code>BUILD_TESTS</code>: Build Cmake tests. Can be <code>ON</code> or <code>OFF</code></li> </ul> <p>The following Makefile targets do set these command already:</p> <ul> <li><code>sw</code> Build SW into sw/build with the LLVM.</li> <li><code>sw.vcs</code> Build SW into sw/build with the LLVM (incl. tests) for VCS simulator.</li> <li><code>sw.vlt</code> Build SW into sw/build with the LLVM (incl. tests) for Verilator simulator.</li> <li><code>sw.vsim</code> Build SW into sw/build with the LLVM (incl. tests) for Questasim simulator.</li> <li><code>clean.sw</code> Delete sw/build.</li> </ul> <p>The following command build and run all specified cmake tests with the corresponding simulator:</p> <ul> <li><code>sw.test.vcs</code> Build SW and run all tests with VCS simulator.</li> <li><code>sw.test.vlt</code> Build SW and run all tests with Verilator simulator.</li> <li><code>sw.test.vsim</code> Build SW and run all tests with Questasim simulator.</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#fpga","title":"FPGA","text":"<p>For the FPGA build flow have a look at the directory <code>fpga</code>. The following Makefile target basically enters this directory and builds Occamy's FPGA version:</p> <ul> <li><code>fpga</code> Build a small Occamy version (CVA6 + 1xcluster) for the VCU128 FPGA board.</li> </ul>"},{"location":"ug/occamy_system/occamy_ug/#notes","title":"Notes","text":"<p>All Snitch cores are initially isolated and are not able to fetch instructions from the <code>bootrom</code>. The <code>cva6</code> manager core de-isolates the Snitch cores during booting. After that the manager core is trapped in an exception loop.</p>"}]}